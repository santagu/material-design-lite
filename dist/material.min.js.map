{"version":3,"sources":["material.js","mdlComponentHandler.js","tabs.js","layout.js","button.js","checkbox.js","icon-toggle.js","menu.js","progress.js","radio.js","slider.js","snackbar.js","spinner.js","switch.js","textfield.js","selectfield.js","tooltip.js","data-table.js","datepicker.js","ripple.js"],"names":["MaterialTab","tab","ctx","element_","classList","contains","CssClasses_","MDL_JS_RIPPLE_EFFECT","rippleContainer","document","createElement","add","MDL_RIPPLE_CONTAINER","ripple","MDL_RIPPLE","appendChild","addEventListener","e","preventDefault","href","split","panel","querySelector","resetTabState_","resetPanelState_","ACTIVE_CLASS","MaterialLayoutTab","tabs","panels","layout","selectTab","content_","IS_ACTIVE","tabBar_","JS_RIPPLE_EFFECT","RIPPLE_CONTAINER","RIPPLE","getAttribute","charAt","show","componentHandler","upgradeDom","optJsClass","optCssClass","upgradeElement","element","upgradeElements","elements","upgradeAllRegistered","registerUpgradedCallback","jsClass","callback","register","config","downgradeElements","nodes","findRegisteredClass_","name","optReplace","i","registeredComponents_","length","className","getUpgradedListOfElement_","dataUpgraded","isElementUpgraded_","upgradedList","indexOf","upgradeDomInternal","cssClass","registeredClass","querySelectorAll","n","upgradeElementInternal","Element","Error","classesToUpgrade","push","forEach","component","setAttribute","join","instance","classConstructor","componentConfigProperty_","createdComponents_","j","m","callbacks","widget","ev","createEvent","initEvent","dispatchEvent","upgradeElementsInternal","Array","isArray","item","prototype","slice","call","HTMLElement","children","registerInternal","widgetMissing","newConfig","constructor","classAsString","hasOwnProperty","found","registerUpgradedCallbackInternal","regClass","upgradeAllRegisteredInternal","deconstructComponentInternal","componentIndex","splice","upgrades","componentPlace","downgradeNodesInternal","downgradeNode","node","filter","NodeList","Node","ComponentConfigPublic","ComponentConfig","Component","window","documentElement","MaterialButton","this","init","Constant_","RIPPLE_EFFECT","blurHandler_","event","blur","disable","disabled","enable","rippleElement_","boundRippleBlurHandler","bind","boundButtonBlurHandler","MaterialCheckbox","TINY_TIMEOUT","INPUT","BOX_OUTLINE","FOCUS_HELPER","TICK_OUTLINE","RIPPLE_IGNORE_EVENTS","RIPPLE_CENTER","IS_FOCUSED","IS_DISABLED","IS_CHECKED","IS_UPGRADED","onChange_","updateClasses_","onFocus_","onBlur_","remove","onMouseUp_","blur_","checkDisabled","checkToggleState","setTimeout","inputElement_","checked","check","uncheck","boxOutline","tickContainer","tickOutline","rippleContainerElement_","boundRippleMouseUp","boundInputOnChange","boundInputOnFocus","boundInputOnBlur","boundElementMouseUp","MaterialIconToggle","boundElementOnMouseUp","MaterialMenu","TRANSITION_DURATION_SECONDS","TRANSITION_DURATION_FRACTION","CLOSE_TIMEOUT","Keycodes_","ENTER","ESCAPE","SPACE","UP_ARROW","DOWN_ARROW","CONTAINER","OUTLINE","ITEM","ITEM_RIPPLE_CONTAINER","IS_VISIBLE","IS_ANIMATING","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","UNALIGNED","container","parentElement","insertBefore","removeChild","container_","outline","outline_","forElId","forEl","getElementById","forElement_","handleForClick_","handleForKeyboardEvent_","items","boundItemKeydown_","handleItemKeyboardEvent_","boundItemClick_","handleItemClick_","tabIndex","evt","rect","getBoundingClientRect","forRect","style","right","top","offsetTop","offsetHeight","left","offsetLeft","bottom","toggle","keyCode","focus","currentIndex","target","MouseEvent","click","hide","hasAttribute","stopPropagation","closing_","applyClip_","height","width","clip","removeAnimationEndListener_","addAnimationEndListener_","transitionDuration","itemDelay","transitionDelay","requestAnimationFrame","parentNode","removeEventListener","removeProperty","MaterialProgress","INDETERMINATE_CLASS","setProgress","p","progressbar_","setBuffer","bufferbar_","auxbar_","el","MaterialRadio","JS_RADIO","RADIO_BTN","RADIO_OUTER_CIRCLE","RADIO_INNER_CIRCLE","radios","getElementsByClassName","button","btnElement_","onMouseup_","boundChangeHandler_","boundFocusHandler_","boundBlurHandler_","boundMouseUpHandler_","outerCircle","innerCircle","MaterialSlider","isIE_","navigator","msPointerEnabled","IE_CONTAINER","SLIDER_CONTAINER","BACKGROUND_FLEX","BACKGROUND_LOWER","BACKGROUND_UPPER","IS_LOWEST_VALUE","onInput_","updateValueStyles_","onContainerMouseDown_","newEvent","buttons","clientX","clientY","y","fraction","value","min","max","backgroundLower_","flex","webkitFlex","backgroundUpper_","change","containerIE","backgroundFlex","boundInputHandler","boundChangeHandler","boundMouseUpHandler","boundContainerMouseDownHandler","MaterialSnackbar","textElement_","cssClasses_","MESSAGE","actionElement_","ACTION","active","actionHandler_","undefined","message_","actionText_","queuedNotifications_","setActionHidden_","ANIMATION_LENGTH","SNACKBAR","ACTIVE","displaySnackbar_","textContent","cleanup_","timeout_","showSnackbar","data","checkQueue_","shift","removeAttribute","MaterialSpinner","MDL_SPINNER_LAYER_COUNT","MDL_SPINNER_LAYER","MDL_SPINNER_CIRCLE_CLIPPER","MDL_SPINNER_CIRCLE","MDL_SPINNER_GAP_PATCH","MDL_SPINNER_LEFT","MDL_SPINNER_RIGHT","createLayer","index","layer","leftClipper","gapPatch","rightClipper","circleOwners","circle","stop","start","MaterialSwitch","TRACK","THUMB","on","off","track","thumb","focusHelper","boundFocusHandler","boundBlurHandler","MaterialTabs","TAB_CLASS","PANEL_CLASS","UPGRADED_CLASS","MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS","initTabs_","tabs_","panels_","k","MaterialTextfield","maxRows","NO_MAX_ROWS","MAX_ROWS_ATTRIBUTE","LABEL","IS_DIRTY","IS_INVALID","HAS_PLACEHOLDER","onKeyDown_","currentRowCount","onReset_","checkValidity","checkDirty","checkFocus","input_","validity","valid","label_","parseInt","isNaN","boundUpdateClassesHandler","boundResetHandler","boundKeyDownHandler","invalid","MaterialSelectfield","SELECT","SELECTED_OPTION","SELECTED_OPTION_TITLE","MENU","MENU_ITEM","MENU_ITEM_ICON_CHECKED","MENU_ITEM_ICON_UNCHECKED","BACKDROP","IS_OPENED","IS_SELECTED","FIXED","KeyCodes_","KEY_UP","KEY_DOWN","checkClasses_","checkDirty_","checkValidity_","checkDisabled_","select_","checkSelectedOption_","valueMissing","selectedOptionValueElement_","innerText","options","selectedIndex","innerHTML","triggerDocumentClickEvent_","CustomEvent","sourceElement","selectedOptionElement_","bubbles","body","fireEvent","elementClickHandler_","elementFocusHandler_","boundElementKeydownHandler","boundElementFocusoutHandler","elementFocusoutHandler_","menuElement_","elementKeydownHandler_","stopImmediatePropagation","open","activateSelectedMenuItem_","selectKeydownHandler_","menuItemClickHandler_","selectedItem","timeout","attributes","getNamedItem","selectOption_","multiple","close","documentClickHandler_","keyboardNavigationHandler_","menuItemUp_","menuItemDown_","menuItemSelect_","selectedOptionClickHandler_","getActiveMenuItemIndex_","menuItems","menuItem","getFocusMenuItem_","focusMenuItem","previousSibling","activeIndex","upIndex","focusItem","scrollTop","downIndex","render_","renderMenu_","backdropElement_","selectedMenuItem","menuItemsCount","topOffset","option","renderMenuItem_","indexAttr","createAttribute","valueAttr","setNamedItem","selected","rippleElement","boundMenuItemClickHandler","selectedOption","iterator","selectedValues","label","selectOptions","changeEvent","Event","boundDocumentClickHandler","boundKeyboardNavigationHandler","boundSelectedOptionClickHandler","setSelectedIndex","setSelectedValue","console","log","boundElementClickHandler","boundElementFocusHandler","boundSelectKeydownHandler","arrowIcon","values","MaterialTooltip","BOTTOM","LEFT","RIGHT","TOP","handleMouseEnter_","props","marginLeft","offsetWidth","marginTop","handleMouseLeave_","boundMouseEnterHandler","boundMouseLeaveHandler","MaterialLayout","MAX_WIDTH","TAB_SCROLL_PIXELS","RESIZE_TIMEOUT","MENU_ICON","CHEVRON_LEFT","CHEVRON_RIGHT","Mode_","STANDARD","SEAMED","WATERFALL","SCROLL","HEADER","DRAWER","CONTENT","DRAWER_BTN","ICON","HEADER_SEAMED","HEADER_WATERFALL","HEADER_SCROLL","FIXED_HEADER","OBFUSCATOR","TAB_BAR","TAB_CONTAINER","TAB","TAB_BAR_BUTTON","TAB_BAR_LEFT_BUTTON","TAB_BAR_RIGHT_BUTTON","PANEL","HAS_DRAWER","HAS_TABS","HAS_SCROLLING_HEADER","CASTING_SHADOW","IS_COMPACT","IS_SMALL_SCREEN","IS_DRAWER_OPEN","ON_LARGE_SCREEN","ON_SMALL_SCREEN","contentScrollHandler_","header_","headerVisible","keyboardEventHandler_","drawer_","toggleDrawer","screenSizeHandler_","screenSizeMediaQuery_","matches","obfuscator_","drawerToggleHandler_","type","headerTransitionEndHandler_","headerClickHandler_","drawerButton","focusedElement","directChildren","childNodes","numChildren","c","child","persisted","overflowY","mode","drawerButtonIcon","firstChild","obfuscator","matchMedia","addListener","tabContainer","leftButton","leftButtonIcon","scrollLeft","rightButton","rightButtonIcon","tabUpdateHandler","scrollWidth","windowResizeHandler","resizeTimeoutId_","clearTimeout","MaterialDataTable","DATA_TABLE","SELECTABLE","SELECT_ELEMENT","selectRow_","checkbox","row","optRows","createCheckbox_","labelClasses","firstHeader","bodyRows","footRows","rows","concat","th","headerCheckbox","firstCell","td","nodeName","toUpperCase","rowCheckbox","MaterialDatePicker","locales","format","weekStart","weekDays","weekDaysShort","weekDaysLetter","months","monthsShort","actions","cancel","ok","Event_","IS_ATTACHED","IS_FIXED","INLINE","LANDSCAPE","WIDGET","NAVIGATION","CALENDAR","YEAR","YEAR_SELECTED","YEAR_DISABLED","YEAR_PICKER","YEAR_PICKER_ELEMENT","MONTH","WEEKS","WEEK","WEEK_DAYS","DATE","DATE_TODAY","DATE_SELECTED","DATE_EMPTY","DATE_DISABLED","MONTH_CURRENT","MONTH_PREVIOUS","MONTH_NEXT","HEADER_YEAR","HEADER_DATE","CALENDAR_PREVIOUS","CALENDAR_NEXT","ACTIONS","ACTION_CANCEL","ACTION_OK","isInitialized_","currentDate_","selectedDate_","pickedDate_","minDate_","maxDate_","triggerEvent_","eventName","cancelHandler_","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","updateHeader_","updateMonthTitle_","changeCurrentMonth_","okHandler_","Date","formatInputDate_","inputFocusHandler_","inputBlurHandler_","headerYearClickHandler_","widgetElement_","selectedYear","yearPickerElement_","focusYear","previousElementSibling","headerDateClickHandler_","pickYearHandler_","currentYear","currentYearInt","pickedDate","getTime","isInRange_","currentMonth_","pickDateHandler_","previousDate","calendarElement_","pickedDateInt","nextPickedDate","updateYearPicker_","previousMonthHandler_","previousMonth","nextMonthHandler_","nextMonth","dateObject","dateFormatted","formatFunction","selectedDate","addLeadingZero","number","substr","formatHeaderDate_","date","getDay","isToday_","currentDate","today","isPickedDate_","isInRange","isYearInRange_","year","currentMonthElement","renderMonth_","currentMonthElement_","dateButtons","dateButton","boundPickDateHandler","renderHeader_","renderCalendar_","headerElement_","headerYearElement_","headerDateElement_","boundHeaderYearClickHandler","boundHeaderDateClickHandler","currentMonthTitleElement_","pickedYear","renderNavigation_","renderWeekDays_","renderYearPicker_","renderActions_","navigationElement_","previousIcon","nextIcon","boundPreviousMonthHandler","boundNextMonthHandler","weekDaysElement_","weekDay","monthObject","month","firstDay","lastDay","currentDay","currentDayInt","renderDays","week","yearButton","yearButtons","existingYear","boundPickYearHandler","startYear","endYear","actionsElement_","cancelElement_","okElement_","boundCancelActionHandler","boundOkActionHandler","destroy_","backdrop_","display","getSelectedDate","setSelectedDate","setRange","minDate","maxDate","setHours","setMinutes","setSeconds","setMilliseconds","Object","create","boundInputFocusHandler","boundInputBlurHandler","mdlDowngrade_","MaterialRipple","INITIAL_SCALE","INITIAL_SIZE","INITIAL_OPACITY","FINAL_OPACITY","FINAL_SCALE","RIPPLE_EFFECT_IGNORE_EVENTS","downHandler_","boundHeight","boundWidth","rippleSize_","Math","sqrt","ignoringMouseDown_","frameCount","getFrameCount","setFrameCount","x","bound","currentTarget","round","touches","setRippleXY","setRippleStyles","animFrameHandler","upHandler_","detail","recentering","frameCount_","x_","y_","boundDownHandler","boundUpHandler","fC","getRippleElement","newX","newY","transformString","scale","offset","webkitTransform","msTransform","transform"],"mappings":"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","file":"material.min.js","sourcesContent":[";(function() {\n\"use strict\";\n\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A component handler interface using the revealing module design pattern.\n * More details on this design pattern here:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n *\n * @author Jason Mayes.\n */\n/* exported componentHandler */\n\n// Pre-defining the componentHandler interface, for closure documentation and\n// static verification.\nvar componentHandler = {\n  /**\n   * Searches existing DOM for elements of our component type and upgrades them\n   * if they have not already been upgraded.\n   *\n   * @param {string=} optJsClass the programatic name of the element class we\n   * need to create a new instance of.\n   * @param {string=} optCssClass the name of the CSS class elements of this\n   * type will have.\n   */\n  upgradeDom: function(optJsClass, optCssClass) {}, // eslint-disable-line\n  /**\n   * Upgrades a specific element rather than all in the DOM.\n   *\n   * @param {!Element} element The element we wish to upgrade.\n   * @param {string=} optJsClass Optional name of the class we want to upgrade\n   * the element to.\n   */\n  upgradeElement: function(element, optJsClass) {}, // eslint-disable-line\n  /**\n   * Upgrades a specific list of elements rather than all in the DOM.\n   *\n   * @param {!Element|!Array<!Element>|!NodeList|!HTMLCollection} elements\n   * The elements we wish to upgrade.\n   */\n  upgradeElements: function(elements) {}, // eslint-disable-line\n  /**\n   * Upgrades all registered components found in the current DOM. This is\n   * automatically called on window load.\n   */\n  upgradeAllRegistered: function() {},\n  /**\n   * Allows user to be alerted to any upgrades that are performed for a given\n   * component type\n   *\n   * @param {string} jsClass The class name of the MDL component we wish\n   * to hook into for any upgrades performed.\n   * @param {function(!HTMLElement)} callback The function to call upon an\n   * upgrade. This function should expect 1 parameter - the HTMLElement which\n   * got upgraded.\n   */\n  registerUpgradedCallback: function(jsClass, callback) {}, // eslint-disable-line\n  /**\n   * Registers a class for future use and attempts to upgrade existing DOM.\n   *\n   * @param {componentHandler.ComponentConfigPublic} config the registration configuration\n   */\n  register: function(config) {}, // eslint-disable-line\n  /**\n   * Downgrade either a given node, an array of nodes, or a NodeList.\n   *\n   * @param {!Node|!Array<!Node>|!NodeList} nodes The list of nodes.\n   */\n  downgradeElements: function(nodes) {} // eslint-disable-line\n};\n\ncomponentHandler = (function() {\n  'use strict';\n\n  /** @type {!Array<componentHandler.ComponentConfig>} */\n  var registeredComponents_ = [];\n\n  /** @type {!Array<componentHandler.Component>} */\n  var createdComponents_ = [];\n\n  var componentConfigProperty_ = 'mdlComponentConfigInternal_';\n\n  /**\n   * Searches registered components for a class we are interested in using.\n   * Optionally replaces a match with passed object if specified.\n   *\n   * @param {string} name The name of a class we want to use.\n   * @param {componentHandler.ComponentConfig=} optReplace Optional object to replace match with.\n   * @return {!Object|boolean} Registered components.\n   * @private\n   */\n  function findRegisteredClass_(name, optReplace) {\n    for (var i = 0; i < registeredComponents_.length; i++) {\n      if (registeredComponents_[i].className === name) {\n        if (typeof optReplace !== 'undefined') {\n          registeredComponents_[i] = optReplace;\n        }\n        return registeredComponents_[i];\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Returns an array of the classNames of the upgraded classes on the element.\n   *\n   * @param {!Element} element The element to fetch data from.\n   * @return {!Array<string>} Array of classNames.\n   * @private\n   */\n  function getUpgradedListOfElement_(element) {\n    var dataUpgraded = element.getAttribute('data-upgraded');\n    // Use `['']` as default value to conform the `,name,name...` style.\n    return dataUpgraded === null ? [''] : dataUpgraded.split(',');\n  }\n\n  /**\n   * Returns true if the given element has already been upgraded for the given\n   * class.\n   *\n   * @param {!Element} element The element we want to check.\n   * @param {string} jsClass The class to check for.\n   * @return {boolean} Whether the element is upgraded.\n   * @private\n   */\n  function isElementUpgraded_(element, jsClass) {\n    var upgradedList = getUpgradedListOfElement_(element);\n    return upgradedList.indexOf(jsClass) !== -1;\n  }\n\n  /**\n   * Searches existing DOM for elements of our component type and upgrades them\n   * if they have not already been upgraded.\n   *\n   * @param {string=} optJsClass the programatic name of the element class we\n   * need to create a new instance of.\n   * @param {string=} optCssClass the name of the CSS class elements of this\n   * type will have.\n   */\n  function upgradeDomInternal(optJsClass, optCssClass) {\n    if (typeof optJsClass === 'undefined' &&\n        typeof optCssClass === 'undefined') {\n      for (var i = 0; i < registeredComponents_.length; i++) {\n        upgradeDomInternal(registeredComponents_[i].className,\n            registeredComponents_[i].cssClass);\n      }\n    } else {\n      var jsClass = /** @type {string} */ (optJsClass);\n      if (typeof optCssClass === 'undefined') {\n        var registeredClass = findRegisteredClass_(jsClass);\n        if (registeredClass) {\n          optCssClass = registeredClass.cssClass;\n        }\n      }\n\n      var elements = document.querySelectorAll('.' + optCssClass);\n      for (var n = 0; n < elements.length; n++) {\n        upgradeElementInternal(elements[n], jsClass);\n      }\n    }\n  }\n\n  /**\n   * Upgrades a specific element rather than all in the DOM.\n   *\n   * @param {!Element} element The element we wish to upgrade.\n   * @param {string=} optJsClass Optional name of the class we want to upgrade\n   * the element to.\n   */\n  function upgradeElementInternal(element, optJsClass) {\n    // Verify argument type.\n    if (!(typeof element === 'object' && element instanceof Element)) {\n      throw new Error('Invalid argument provided to upgrade MDL element.');\n    }\n    var upgradedList = getUpgradedListOfElement_(element);\n    var classesToUpgrade = [];\n    // If jsClass is not provided scan the registered components to find the\n    // ones matching the element's CSS classList.\n    if (!optJsClass) {\n      var classList = element.classList;\n      registeredComponents_.forEach(function(component) {\n        // Match CSS & Not to be upgraded & Not upgraded.\n        if (classList.contains(component.cssClass) &&\n            classesToUpgrade.indexOf(component) === -1 &&\n            !isElementUpgraded_(element, component.className)) {\n          classesToUpgrade.push(component);\n        }\n      });\n    } else if (!isElementUpgraded_(element, optJsClass)) {\n      classesToUpgrade.push(findRegisteredClass_(optJsClass));\n    }\n\n    // Upgrade the element for each classes.\n    for (var i = 0, n = classesToUpgrade.length, registeredClass; i < n; i++) {\n      registeredClass = classesToUpgrade[i];\n      if (registeredClass) {\n        // Mark element as upgraded.\n        upgradedList.push(registeredClass.className);\n        element.setAttribute('data-upgraded', upgradedList.join(','));\n        var instance = new registeredClass.classConstructor(element); // eslint-disable-line\n        instance[componentConfigProperty_] = registeredClass;\n        createdComponents_.push(instance);\n        // Call any callbacks the user has registered with this component type.\n        for (var j = 0, m = registeredClass.callbacks.length; j < m; j++) {\n          registeredClass.callbacks[j](element);\n        }\n\n        if (registeredClass.widget) {\n          // Assign per element instance for control over API\n          element[registeredClass.className] = instance;\n        }\n      } else {\n        throw new Error(\n          'Unable to find a registered component for the given class.');\n      }\n\n      var ev = document.createEvent('Events');\n      ev.initEvent('mdl-componentupgraded', true, true);\n      element.dispatchEvent(ev);\n    }\n  }\n\n  /**\n   * Upgrades a specific list of elements rather than all in the DOM.\n   *\n   * @param {!Element|!Array<!Element>|!NodeList|!HTMLCollection} elements\n   * The elements we wish to upgrade.\n   */\n  function upgradeElementsInternal(elements) {\n    if (!Array.isArray(elements)) {\n      if (typeof elements.item === 'function') {\n        elements = Array.prototype.slice.call(/** @type {Array} */ (elements));\n      } else {\n        elements = [elements];\n      }\n    }\n    for (var i = 0, n = elements.length, element; i < n; i++) {\n      element = elements[i];\n      if (element instanceof HTMLElement) {\n        upgradeElementInternal(element);\n        if (element.children.length > 0) {\n          upgradeElementsInternal(element.children);\n        }\n      }\n    }\n  }\n\n  /**\n   * Registers a class for future use and attempts to upgrade existing DOM.\n   *\n   * @param {componentHandler.ComponentConfigPublic} config The configuration.\n   */\n  function registerInternal(config) {\n    // In order to support both Closure-compiled and uncompiled code accessing\n    // this method, we need to allow for both the dot and array syntax for\n    // property access. You'll therefore see the `foo.bar || foo['bar']`\n    // pattern repeated across this method.\n    var widgetMissing = (typeof config.widget === 'undefined' &&\n        typeof config['widget'] === 'undefined');\n    var widget = true;\n\n    if (!widgetMissing) {\n      widget = config.widget || config['widget'];\n    }\n\n    var newConfig = /** @type {componentHandler.ComponentConfig} */ ({\n      classConstructor: config.constructor || config['constructor'],\n      className: config.classAsString || config['classAsString'],\n      cssClass: config.cssClass || config['cssClass'],\n      widget: widget,\n      callbacks: []\n    });\n\n    registeredComponents_.forEach(function(item) {\n      if (item.cssClass === newConfig.cssClass) {\n        throw new Error('The provided cssClass has already been registered: ' +\n            item.cssClass);\n      }\n      if (item.className === newConfig.className) {\n        throw new Error('The provided className has already been registered');\n      }\n    });\n\n    if (config.constructor.prototype\n        .hasOwnProperty(componentConfigProperty_)) {\n      throw new Error(\n          'MDL component classes must not have ' + componentConfigProperty_ +\n          ' defined as a property.');\n    }\n\n    var found = findRegisteredClass_(config.classAsString, newConfig);\n\n    if (!found) {\n      registeredComponents_.push(newConfig);\n    }\n  }\n\n  /**\n   * Allows user to be alerted to any upgrades that are performed for a given\n   * component type\n   *\n   * @param {string} jsClass The class name of the MDL component we wish\n   * to hook into for any upgrades performed.\n   * @param {function(!HTMLElement)} callback The function to call upon an\n   * upgrade. This function should expect 1 parameter - the HTMLElement which\n   * got upgraded.\n   */\n  function registerUpgradedCallbackInternal(jsClass, callback) {\n    var regClass = findRegisteredClass_(jsClass);\n    if (regClass) {\n      regClass.callbacks.push(callback);\n    }\n  }\n\n  /**\n   * Upgrades all registered components found in the current DOM. This is\n   * automatically called on window load.\n   */\n  function upgradeAllRegisteredInternal() {\n    for (var n = 0; n < registeredComponents_.length; n++) {\n      upgradeDomInternal(registeredComponents_[n].className);\n    }\n  }\n\n  /**\n   * Check the component for the downgrade method.\n   * Execute if found.\n   * Remove component from createdComponents list.\n   *\n   * @param {?componentHandler.Component} component The component to downgrade.\n   */\n  function deconstructComponentInternal(component) {\n    if (component) {\n      var componentIndex = createdComponents_.indexOf(component);\n      createdComponents_.splice(componentIndex, 1);\n\n      var upgrades =\n          component.element_.getAttribute('data-upgraded').split(',');\n      var componentPlace =\n          upgrades.indexOf(component[componentConfigProperty_].classAsString);\n      upgrades.splice(componentPlace, 1);\n      component.element_.setAttribute('data-upgraded', upgrades.join(','));\n\n      var ev = document.createEvent('Events');\n      ev.initEvent('mdl-componentdowngraded', true, true);\n      component.element_.dispatchEvent(ev);\n    }\n  }\n\n  /**\n   * Downgrade either a given node, an array of nodes, or a NodeList.\n   *\n   * @param {!Node|!Array<!Node>|!NodeList} nodes The list of nodes.\n   */\n  function downgradeNodesInternal(nodes) {\n    /**\n     * Auxiliary function to downgrade a single node.\n     * @param  {!Node} node the node to be downgraded\n     */\n    var downgradeNode = function(node) {\n      createdComponents_.filter(function(item) {\n        return item.element_ === node;\n      }).forEach(deconstructComponentInternal);\n    };\n    if (nodes instanceof Array || nodes instanceof NodeList) {\n      for (var n = 0; n < nodes.length; n++) {\n        downgradeNode(nodes[n]);\n      }\n    } else if (nodes instanceof Node) {\n      downgradeNode(nodes);\n    } else {\n      throw new Error('Invalid argument provided to downgrade MDL nodes.');\n    }\n  }\n\n  // Now return the functions that should be made public with their publicly\n  // facing names...\n  return {\n    upgradeDom: upgradeDomInternal,\n    upgradeElement: upgradeElementInternal,\n    upgradeElements: upgradeElementsInternal,\n    upgradeAllRegistered: upgradeAllRegisteredInternal,\n    registerUpgradedCallback: registerUpgradedCallbackInternal,\n    register: registerInternal,\n    downgradeElements: downgradeNodesInternal\n  };\n})();\n\n/**\n * Describes the type of a registered component type managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   constructor: Function,\n *   classAsString: string,\n *   cssClass: string,\n *   widget: (string|boolean|undefined)\n * }}\n */\ncomponentHandler.ComponentConfigPublic; // eslint-disable-line\n\n/**\n * Describes the type of a registered component type managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   constructor: !Function,\n *   className: string,\n *   cssClass: string,\n *   widget: (string|boolean),\n *   callbacks: !Array<function(!HTMLElement)>\n * }}\n */\ncomponentHandler.ComponentConfig; // eslint-disable-line\n\n/**\n * Created component (i.e., upgraded element) type as managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   element_: !HTMLElement,\n *   className: string,\n *   classAsString: string,\n *   cssClass: string,\n *   widget: string\n * }}\n */\ncomponentHandler.Component; // eslint-disable-line\n\n// Export all symbols, for the benefit of Closure compiler.\n// No effect on uncompiled code.\ncomponentHandler['upgradeDom'] = componentHandler.upgradeDom;\ncomponentHandler['upgradeElement'] = componentHandler.upgradeElement;\ncomponentHandler['upgradeElements'] = componentHandler.upgradeElements;\ncomponentHandler['upgradeAllRegistered'] =\n    componentHandler.upgradeAllRegistered;\ncomponentHandler['registerUpgradedCallback'] =\n    componentHandler.registerUpgradedCallback;\ncomponentHandler['register'] = componentHandler.register;\ncomponentHandler['downgradeElements'] = componentHandler.downgradeElements;\nwindow.componentHandler = componentHandler;\nwindow['componentHandler'] = componentHandler;\n\nwindow.addEventListener('load', function() {\n  'use strict';\n\n  /**\n   * Performs a \"Cutting the mustard\" test. If the browser supports the features\n   * tested, adds a mdl-js class to the <html> element. It then upgrades all MDL\n   * components requiring JavaScript.\n   */\n  if (\n      'classList' in document.documentElement &&\n      'querySelector' in document &&\n      'addEventListener' in window &&\n      'forEach' in Array.prototype) {\n    document.documentElement.classList.add('mdl-js');\n    componentHandler.upgradeAllRegistered();\n  } else {\n    /**\n     * Dummy function to avoid JS errors.\n     */\n    componentHandler.upgradeElement = function() {};\n    /**\n     * Dummy function to avoid JS errors.\n     */\n    componentHandler.register = function() {};\n  }\n});\n\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Button MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialButton = function MaterialButton(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialButton'] = MaterialButton;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialButton.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialButton.prototype.CssClasses_ = {\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_CONTAINER: 'mdl-button__ripple-container',\n    RIPPLE: 'mdl-ripple'\n};\n/**\n   * Handle blur of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialButton.prototype.blurHandler_ = function (event) {\n    if (event) {\n        this.element_.blur();\n    }\n};\n// Public methods.\n/**\n   * Disable button.\n   *\n   * @public\n   */\nMaterialButton.prototype.disable = function () {\n    this.element_.disabled = true;\n};\nMaterialButton.prototype['disable'] = MaterialButton.prototype.disable;\n/**\n   * Enable button.\n   *\n   * @public\n   */\nMaterialButton.prototype.enable = function () {\n    this.element_.disabled = false;\n};\nMaterialButton.prototype['enable'] = MaterialButton.prototype.enable;\n/**\n   * Initialize element.\n   */\nMaterialButton.prototype.init = function () {\n    if (this.element_) {\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            var rippleContainer = document.createElement('span');\n            rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            this.rippleElement_ = document.createElement('span');\n            this.rippleElement_.classList.add(this.CssClasses_.RIPPLE);\n            rippleContainer.appendChild(this.rippleElement_);\n            this.boundRippleBlurHandler = this.blurHandler_.bind(this);\n            this.rippleElement_.addEventListener('mouseup', this.boundRippleBlurHandler);\n            this.element_.appendChild(rippleContainer);\n        }\n        this.boundButtonBlurHandler = this.blurHandler_.bind(this);\n        this.element_.addEventListener('mouseup', this.boundButtonBlurHandler);\n        this.element_.addEventListener('mouseleave', this.boundButtonBlurHandler);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialButton,\n    classAsString: 'MaterialButton',\n    cssClass: 'mdl-js-button',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Checkbox MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialCheckbox = function MaterialCheckbox(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialCheckbox'] = MaterialCheckbox;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialCheckbox.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialCheckbox.prototype.CssClasses_ = {\n    INPUT: 'mdl-checkbox__input',\n    BOX_OUTLINE: 'mdl-checkbox__box-outline',\n    FOCUS_HELPER: 'mdl-checkbox__focus-helper',\n    TICK_OUTLINE: 'mdl-checkbox__tick-outline',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-checkbox__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked',\n    IS_UPGRADED: 'is-upgraded'\n};\n/**\n   * Handle change of state.\n   *\n   * @private\n   */\nMaterialCheckbox.prototype.onChange_ = function () {\n    this.updateClasses_();\n};\n/**\n   * Handle focus of element.\n   *\n   * @private\n   */\nMaterialCheckbox.prototype.onFocus_ = function () {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus of element.\n   *\n   * @private\n   */\nMaterialCheckbox.prototype.onBlur_ = function () {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle mouseup.\n   *\n   * @private\n   */\nMaterialCheckbox.prototype.onMouseUp_ = function () {\n    this.blur_();\n};\n/**\n   * Handle class updates.\n   *\n   * @private\n   */\nMaterialCheckbox.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n};\n/**\n   * Add blur.\n   *\n   * @private\n   */\nMaterialCheckbox.prototype.blur_ = function () {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n        this.inputElement_.blur();\n    }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n// Public methods.\n/**\n   * Check the inputs toggle state and update display.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.checkToggleState = function () {\n    if (this.inputElement_.checked) {\n        this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n};\nMaterialCheckbox.prototype['checkToggleState'] = MaterialCheckbox.prototype.checkToggleState;\n/**\n   * Check the inputs disabled state and update display.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.checkDisabled = function () {\n    if (this.inputElement_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\nMaterialCheckbox.prototype['checkDisabled'] = MaterialCheckbox.prototype.checkDisabled;\n/**\n   * Disable checkbox.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.disable = function () {\n    this.inputElement_.disabled = true;\n    this.updateClasses_();\n};\nMaterialCheckbox.prototype['disable'] = MaterialCheckbox.prototype.disable;\n/**\n   * Enable checkbox.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.enable = function () {\n    this.inputElement_.disabled = false;\n    this.updateClasses_();\n};\nMaterialCheckbox.prototype['enable'] = MaterialCheckbox.prototype.enable;\n/**\n   * Check checkbox.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.check = function () {\n    this.inputElement_.checked = true;\n    this.updateClasses_();\n};\nMaterialCheckbox.prototype['check'] = MaterialCheckbox.prototype.check;\n/**\n   * Uncheck checkbox.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.uncheck = function () {\n    this.inputElement_.checked = false;\n    this.updateClasses_();\n};\nMaterialCheckbox.prototype['uncheck'] = MaterialCheckbox.prototype.uncheck;\n/**\n   * Initialize element.\n   */\nMaterialCheckbox.prototype.init = function () {\n    if (this.element_) {\n        this.inputElement_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n        var boxOutline = document.createElement('span');\n        boxOutline.classList.add(this.CssClasses_.BOX_OUTLINE);\n        var tickContainer = document.createElement('span');\n        tickContainer.classList.add(this.CssClasses_.FOCUS_HELPER);\n        var tickOutline = document.createElement('span');\n        tickOutline.classList.add(this.CssClasses_.TICK_OUTLINE);\n        boxOutline.appendChild(tickOutline);\n        this.element_.appendChild(tickContainer);\n        this.element_.appendChild(boxOutline);\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            this.rippleContainerElement_ = document.createElement('span');\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n            this.boundRippleMouseUp = this.onMouseUp_.bind(this);\n            this.rippleContainerElement_.addEventListener('mouseup', this.boundRippleMouseUp);\n            var ripple = document.createElement('span');\n            ripple.classList.add(this.CssClasses_.RIPPLE);\n            this.rippleContainerElement_.appendChild(ripple);\n            this.element_.appendChild(this.rippleContainerElement_);\n        }\n        this.boundInputOnChange = this.onChange_.bind(this);\n        this.boundInputOnFocus = this.onFocus_.bind(this);\n        this.boundInputOnBlur = this.onBlur_.bind(this);\n        this.boundElementMouseUp = this.onMouseUp_.bind(this);\n        this.inputElement_.addEventListener('change', this.boundInputOnChange);\n        this.inputElement_.addEventListener('focus', this.boundInputOnFocus);\n        this.inputElement_.addEventListener('blur', this.boundInputOnBlur);\n        this.element_.addEventListener('mouseup', this.boundElementMouseUp);\n        this.updateClasses_();\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialCheckbox,\n    classAsString: 'MaterialCheckbox',\n    cssClass: 'mdl-js-checkbox',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for icon toggle MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialIconToggle = function MaterialIconToggle(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialIconToggle'] = MaterialIconToggle;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialIconToggle.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialIconToggle.prototype.CssClasses_ = {\n    INPUT: 'mdl-icon-toggle__input',\n    JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-icon-toggle__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked'\n};\n/**\n   * Handle change of state.\n   *\n   * @private\n   */\nMaterialIconToggle.prototype.onChange_ = function () {\n    this.updateClasses_();\n};\n/**\n   * Handle focus of element.\n   *\n   * @private\n   */\nMaterialIconToggle.prototype.onFocus_ = function () {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus of element.\n   *\n   * @private\n   */\nMaterialIconToggle.prototype.onBlur_ = function () {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle mouseup.\n   *\n   * @private\n   */\nMaterialIconToggle.prototype.onMouseUp_ = function () {\n    this.blur_();\n};\n/**\n   * Handle class updates.\n   *\n   * @private\n   */\nMaterialIconToggle.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n};\n/**\n   * Add blur.\n   *\n   * @private\n   */\nMaterialIconToggle.prototype.blur_ = function () {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n        this.inputElement_.blur();\n    }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n// Public methods.\n/**\n   * Check the inputs toggle state and update display.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.checkToggleState = function () {\n    if (this.inputElement_.checked) {\n        this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n};\nMaterialIconToggle.prototype['checkToggleState'] = MaterialIconToggle.prototype.checkToggleState;\n/**\n   * Check the inputs disabled state and update display.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.checkDisabled = function () {\n    if (this.inputElement_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\nMaterialIconToggle.prototype['checkDisabled'] = MaterialIconToggle.prototype.checkDisabled;\n/**\n   * Disable icon toggle.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.disable = function () {\n    this.inputElement_.disabled = true;\n    this.updateClasses_();\n};\nMaterialIconToggle.prototype['disable'] = MaterialIconToggle.prototype.disable;\n/**\n   * Enable icon toggle.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.enable = function () {\n    this.inputElement_.disabled = false;\n    this.updateClasses_();\n};\nMaterialIconToggle.prototype['enable'] = MaterialIconToggle.prototype.enable;\n/**\n   * Check icon toggle.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.check = function () {\n    this.inputElement_.checked = true;\n    this.updateClasses_();\n};\nMaterialIconToggle.prototype['check'] = MaterialIconToggle.prototype.check;\n/**\n   * Uncheck icon toggle.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.uncheck = function () {\n    this.inputElement_.checked = false;\n    this.updateClasses_();\n};\nMaterialIconToggle.prototype['uncheck'] = MaterialIconToggle.prototype.uncheck;\n/**\n   * Initialize element.\n   */\nMaterialIconToggle.prototype.init = function () {\n    if (this.element_) {\n        this.inputElement_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n        if (this.element_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            this.rippleContainerElement_ = document.createElement('span');\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.JS_RIPPLE_EFFECT);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n            this.boundRippleMouseUp = this.onMouseUp_.bind(this);\n            this.rippleContainerElement_.addEventListener('mouseup', this.boundRippleMouseUp);\n            var ripple = document.createElement('span');\n            ripple.classList.add(this.CssClasses_.RIPPLE);\n            this.rippleContainerElement_.appendChild(ripple);\n            this.element_.appendChild(this.rippleContainerElement_);\n        }\n        this.boundInputOnChange = this.onChange_.bind(this);\n        this.boundInputOnFocus = this.onFocus_.bind(this);\n        this.boundInputOnBlur = this.onBlur_.bind(this);\n        this.boundElementOnMouseUp = this.onMouseUp_.bind(this);\n        this.inputElement_.addEventListener('change', this.boundInputOnChange);\n        this.inputElement_.addEventListener('focus', this.boundInputOnFocus);\n        this.inputElement_.addEventListener('blur', this.boundInputOnBlur);\n        this.element_.addEventListener('mouseup', this.boundElementOnMouseUp);\n        this.updateClasses_();\n        this.element_.classList.add('is-upgraded');\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialIconToggle,\n    classAsString: 'MaterialIconToggle',\n    cssClass: 'mdl-js-icon-toggle',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for dropdown MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialMenu = function MaterialMenu(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialMenu'] = MaterialMenu;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialMenu.prototype.Constant_ = {\n    // Total duration of the menu animation.\n    TRANSITION_DURATION_SECONDS: 0.3,\n    // The fraction of the total duration we want to use for menu item animations.\n    TRANSITION_DURATION_FRACTION: 0.8,\n    // How long the menu stays open after choosing an option (so the user can see\n    // the ripple).\n    CLOSE_TIMEOUT: 150\n};\n/**\n   * Keycodes, for code readability.\n   *\n   * @enum {number}\n   * @private\n   */\nMaterialMenu.prototype.Keycodes_ = {\n    ENTER: 13,\n    ESCAPE: 27,\n    SPACE: 32,\n    UP_ARROW: 38,\n    DOWN_ARROW: 40\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialMenu.prototype.CssClasses_ = {\n    CONTAINER: 'mdl-menu__container',\n    OUTLINE: 'mdl-menu__outline',\n    ITEM: 'mdl-menu__item',\n    ITEM_RIPPLE_CONTAINER: 'mdl-menu__item-ripple-container',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE: 'mdl-ripple',\n    // Statuses\n    IS_UPGRADED: 'is-upgraded',\n    IS_VISIBLE: 'is-visible',\n    IS_ANIMATING: 'is-animating',\n    // Alignment options\n    BOTTOM_LEFT: 'mdl-menu--bottom-left',\n    // This is the default.\n    BOTTOM_RIGHT: 'mdl-menu--bottom-right',\n    TOP_LEFT: 'mdl-menu--top-left',\n    TOP_RIGHT: 'mdl-menu--top-right',\n    UNALIGNED: 'mdl-menu--unaligned'\n};\n/**\n   * Initialize element.\n   */\nMaterialMenu.prototype.init = function () {\n    if (this.element_) {\n        // Create container for the menu.\n        var container = document.createElement('div');\n        container.classList.add(this.CssClasses_.CONTAINER);\n        this.element_.parentElement.insertBefore(container, this.element_);\n        this.element_.parentElement.removeChild(this.element_);\n        container.appendChild(this.element_);\n        this.container_ = container;\n        // Create outline for the menu (shadow and background).\n        var outline = document.createElement('div');\n        outline.classList.add(this.CssClasses_.OUTLINE);\n        this.outline_ = outline;\n        container.insertBefore(outline, this.element_);\n        // Find the \"for\" element and bind events to it.\n        var forElId = this.element_.getAttribute('for') || this.element_.getAttribute('data-mdl-for');\n        var forEl = null;\n        if (forElId) {\n            forEl = document.getElementById(forElId);\n            if (forEl) {\n                this.forElement_ = forEl;\n                forEl.addEventListener('click', this.handleForClick_.bind(this));\n                forEl.addEventListener('keydown', this.handleForKeyboardEvent_.bind(this));\n            }\n        }\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n        this.boundItemKeydown_ = this.handleItemKeyboardEvent_.bind(this);\n        this.boundItemClick_ = this.handleItemClick_.bind(this);\n        for (var i = 0; i < items.length; i++) {\n            // Add a listener to each menu item.\n            items[i].addEventListener('click', this.boundItemClick_);\n            // Add a tab index to each menu item.\n            items[i].tabIndex = '-1';\n            // Add a keyboard listener to each menu item.\n            items[i].addEventListener('keydown', this.boundItemKeydown_);\n        }\n        // Add ripple classes to each item, if the user has enabled ripples.\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            for (var j = 0; j < items.length; j++) {\n                var item = items[j];\n                var rippleContainer = document.createElement('span');\n                rippleContainer.classList.add(this.CssClasses_.ITEM_RIPPLE_CONTAINER);\n                var ripple = document.createElement('span');\n                ripple.classList.add(this.CssClasses_.RIPPLE);\n                rippleContainer.appendChild(ripple);\n                item.appendChild(rippleContainer);\n                item.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n            }\n        }\n        // Copy alignment classes to the container, so the outline can use them.\n        if (this.element_.classList.contains(this.CssClasses_.BOTTOM_LEFT)) {\n            this.outline_.classList.add(this.CssClasses_.BOTTOM_LEFT);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n            this.outline_.classList.add(this.CssClasses_.BOTTOM_RIGHT);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n            this.outline_.classList.add(this.CssClasses_.TOP_LEFT);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n            this.outline_.classList.add(this.CssClasses_.TOP_RIGHT);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n            this.outline_.classList.add(this.CssClasses_.UNALIGNED);\n        }\n        container.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n/**\n   * Handles a click on the \"for\" element, by positioning the menu and then\n   * toggling it.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialMenu.prototype.handleForClick_ = function (evt) {\n    if (this.element_ && this.forElement_) {\n        var rect = this.forElement_.getBoundingClientRect();\n        var forRect = this.forElement_.parentElement.getBoundingClientRect();\n        if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n        } else if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n            // Position below the \"for\" element, aligned to its right.\n            this.container_.style.right = forRect.right - rect.right + 'px';\n            this.container_.style.top = this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';\n        } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n            // Position above the \"for\" element, aligned to its left.\n            this.container_.style.left = this.forElement_.offsetLeft + 'px';\n            this.container_.style.bottom = forRect.bottom - rect.top + 'px';\n        } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n            // Position above the \"for\" element, aligned to its right.\n            this.container_.style.right = forRect.right - rect.right + 'px';\n            this.container_.style.bottom = forRect.bottom - rect.top + 'px';\n        } else {\n            // Default: position below the \"for\" element, aligned to its left.\n            this.container_.style.left = this.forElement_.offsetLeft + 'px';\n            this.container_.style.top = this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';\n        }\n    }\n    this.toggle(evt);\n};\n/**\n   * Handles a keyboard event on the \"for\" element.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialMenu.prototype.handleForKeyboardEvent_ = function (evt) {\n    if (this.element_ && this.container_ && this.forElement_) {\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM + ':not([disabled])');\n        if (items && items.length > 0 && this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n            if (evt.keyCode === this.Keycodes_.UP_ARROW) {\n                evt.preventDefault();\n                items[items.length - 1].focus();\n            } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {\n                evt.preventDefault();\n                items[0].focus();\n            }\n        }\n    }\n};\n/**\n   * Handles a keyboard event on an item.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialMenu.prototype.handleItemKeyboardEvent_ = function (evt) {\n    if (this.element_ && this.container_) {\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM + ':not([disabled])');\n        if (items && items.length > 0 && this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n            var currentIndex = Array.prototype.slice.call(items).indexOf(evt.target);\n            if (evt.keyCode === this.Keycodes_.UP_ARROW) {\n                evt.preventDefault();\n                if (currentIndex > 0) {\n                    items[currentIndex - 1].focus();\n                } else {\n                    items[items.length - 1].focus();\n                }\n            } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {\n                evt.preventDefault();\n                if (items.length > currentIndex + 1) {\n                    items[currentIndex + 1].focus();\n                } else {\n                    items[0].focus();\n                }\n            } else if (evt.keyCode === this.Keycodes_.SPACE || evt.keyCode === this.Keycodes_.ENTER) {\n                evt.preventDefault();\n                // Send mousedown and mouseup to trigger ripple.\n                var e = new MouseEvent('mousedown');\n                evt.target.dispatchEvent(e);\n                e = new MouseEvent('mouseup');\n                evt.target.dispatchEvent(e);\n                // Send click.\n                evt.target.click();\n            } else if (evt.keyCode === this.Keycodes_.ESCAPE) {\n                evt.preventDefault();\n                this.hide();\n            }\n        }\n    }\n};\n/**\n   * Handles a click event on an item.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialMenu.prototype.handleItemClick_ = function (evt) {\n    if (evt.target.hasAttribute('disabled')) {\n        evt.stopPropagation();\n    } else {\n        // Wait some time before closing menu, so the user can see the ripple.\n        this.closing_ = true;\n        window.setTimeout(function () {\n            this.hide();\n            this.closing_ = false;\n        }.bind(this), this.Constant_.CLOSE_TIMEOUT);\n    }\n};\n/**\n   * Calculates the initial clip (for opening the menu) or final clip (for closing\n   * it), and applies it. This allows us to animate from or to the correct point,\n   * that is, the point it's aligned to in the \"for\" element.\n   *\n   * @param {number} height Height of the clip rectangle\n   * @param {number} width Width of the clip rectangle\n   * @private\n   */\nMaterialMenu.prototype.applyClip_ = function (height, width) {\n    if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n        // Do not clip.\n        this.element_.style.clip = '';\n    } else if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n        // Clip to the top right corner of the menu.\n        this.element_.style.clip = 'rect(0 ' + width + 'px 0 ' + width + 'px)';\n    } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n        // Clip to the bottom left corner of the menu.\n        this.element_.style.clip = 'rect(' + height + 'px 0 ' + height + 'px 0)';\n    } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n        // Clip to the bottom right corner of the menu.\n        this.element_.style.clip = 'rect(' + height + 'px ' + width + 'px ' + height + 'px ' + width + 'px)';\n    } else {\n        // Default: do not clip (same as clipping to the top left corner).\n        this.element_.style.clip = '';\n    }\n};\n/**\n   * Cleanup function to remove animation listeners.\n   *\n   * @param {Event} evt The event being handled.\n   * @private\n   */\nMaterialMenu.prototype.removeAnimationEndListener_ = function (evt) {\n    evt.target.classList.remove(MaterialMenu.prototype.CssClasses_.IS_ANIMATING);\n};\n/**\n   * Adds an event listener to clean up after the animation ends.\n   *\n   * @private\n   */\nMaterialMenu.prototype.addAnimationEndListener_ = function () {\n    this.element_.addEventListener('transitionend', this.removeAnimationEndListener_);\n    this.element_.addEventListener('webkitTransitionEnd', this.removeAnimationEndListener_);\n};\n/**\n   * Displays the menu.\n   *\n   * @param {Event} evt The event being handled.\n   * @public\n   */\nMaterialMenu.prototype.show = function (evt) {\n    if (this.element_ && this.container_ && this.outline_) {\n        // Measure the inner element.\n        var height = this.element_.getBoundingClientRect().height;\n        var width = this.element_.getBoundingClientRect().width;\n        // Apply the inner element's size to the container and outline.\n        this.container_.style.width = width + 'px';\n        this.container_.style.height = height + 'px';\n        this.outline_.style.width = width + 'px';\n        this.outline_.style.height = height + 'px';\n        var transitionDuration = this.Constant_.TRANSITION_DURATION_SECONDS * this.Constant_.TRANSITION_DURATION_FRACTION;\n        // Calculate transition delays for individual menu items, so that they fade\n        // in one at a time.\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n        for (var i = 0; i < items.length; i++) {\n            var itemDelay = null;\n            if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT) || this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n                itemDelay = (height - items[i].offsetTop - items[i].offsetHeight) / height * transitionDuration + 's';\n            } else {\n                itemDelay = items[i].offsetTop / height * transitionDuration + 's';\n            }\n            items[i].style.transitionDelay = itemDelay;\n        }\n        // Apply the initial clip to the text before we start animating.\n        this.applyClip_(height, width);\n        // Wait for the next frame, turn on animation, and apply the final clip.\n        // Also make it visible. This triggers the transitions.\n        requestAnimationFrame(function () {\n            this.element_.classList.add(this.CssClasses_.IS_ANIMATING);\n            this.element_.style.clip = 'rect(0 ' + width + 'px ' + height + 'px 0)';\n            this.container_.classList.add(this.CssClasses_.IS_VISIBLE);\n        }.bind(this));\n        // Clean up after the animation is complete.\n        this.addAnimationEndListener_();\n        // Add a click listener to the document, to close the menu.\n        var callback = function (e) {\n            // Check to see if the document is processing the same event that\n            // displayed the menu in the first place. If so, do nothing.\n            // Also check to see if the menu is in the process of closing itself, and\n            // do nothing in that case.\n            // Also check if the clicked element is a menu item\n            // if so, do nothing.\n            if (e !== evt && !this.closing_ && e.target.parentNode !== this.element_) {\n                document.removeEventListener('click', callback);\n                this.hide();\n            }\n        }.bind(this);\n        document.addEventListener('click', callback);\n    }\n};\nMaterialMenu.prototype['show'] = MaterialMenu.prototype.show;\n/**\n   * Hides the menu.\n   *\n   * @public\n   */\nMaterialMenu.prototype.hide = function () {\n    if (this.element_ && this.container_ && this.outline_) {\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n        // Remove all transition delays; menu items fade out concurrently.\n        for (var i = 0; i < items.length; i++) {\n            items[i].style.removeProperty('transition-delay');\n        }\n        // Measure the inner element.\n        var rect = this.element_.getBoundingClientRect();\n        var height = rect.height;\n        var width = rect.width;\n        // Turn on animation, and apply the final clip. Also make invisible.\n        // This triggers the transitions.\n        this.element_.classList.add(this.CssClasses_.IS_ANIMATING);\n        this.applyClip_(height, width);\n        this.container_.classList.remove(this.CssClasses_.IS_VISIBLE);\n        // Clean up after the animation is complete.\n        this.addAnimationEndListener_();\n    }\n};\nMaterialMenu.prototype['hide'] = MaterialMenu.prototype.hide;\n/**\n   * Displays or hides the menu, depending on current state.\n   *\n   * @param {Event} evt The event being handled.\n   * @public\n   */\nMaterialMenu.prototype.toggle = function (evt) {\n    if (this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n        this.hide();\n    } else {\n        this.show(evt);\n    }\n};\nMaterialMenu.prototype['toggle'] = MaterialMenu.prototype.toggle;\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialMenu,\n    classAsString: 'MaterialMenu',\n    cssClass: 'mdl-js-menu',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Progress MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialProgress = function MaterialProgress(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialProgress'] = MaterialProgress;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialProgress.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialProgress.prototype.CssClasses_ = { INDETERMINATE_CLASS: 'mdl-progress__indeterminate' };\n/**\n   * Set the current progress of the progressbar.\n   *\n   * @param {number} p Percentage of the progress (0-100)\n   * @public\n   */\nMaterialProgress.prototype.setProgress = function (p) {\n    if (this.element_.classList.contains(this.CssClasses_.INDETERMINATE_CLASS)) {\n        return;\n    }\n    this.progressbar_.style.width = p + '%';\n};\nMaterialProgress.prototype['setProgress'] = MaterialProgress.prototype.setProgress;\n/**\n   * Set the current progress of the buffer.\n   *\n   * @param {number} p Percentage of the buffer (0-100)\n   * @public\n   */\nMaterialProgress.prototype.setBuffer = function (p) {\n    this.bufferbar_.style.width = p + '%';\n    this.auxbar_.style.width = 100 - p + '%';\n};\nMaterialProgress.prototype['setBuffer'] = MaterialProgress.prototype.setBuffer;\n/**\n   * Initialize element.\n   */\nMaterialProgress.prototype.init = function () {\n    if (this.element_) {\n        var el = document.createElement('div');\n        el.className = 'progressbar bar bar1';\n        this.element_.appendChild(el);\n        this.progressbar_ = el;\n        el = document.createElement('div');\n        el.className = 'bufferbar bar bar2';\n        this.element_.appendChild(el);\n        this.bufferbar_ = el;\n        el = document.createElement('div');\n        el.className = 'auxbar bar bar3';\n        this.element_.appendChild(el);\n        this.auxbar_ = el;\n        this.progressbar_.style.width = '0%';\n        this.bufferbar_.style.width = '100%';\n        this.auxbar_.style.width = '0%';\n        this.element_.classList.add('is-upgraded');\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialProgress,\n    classAsString: 'MaterialProgress',\n    cssClass: 'mdl-js-progress',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Radio MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialRadio = function MaterialRadio(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialRadio'] = MaterialRadio;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialRadio.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialRadio.prototype.CssClasses_ = {\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked',\n    IS_UPGRADED: 'is-upgraded',\n    JS_RADIO: 'mdl-js-radio',\n    RADIO_BTN: 'mdl-radio__button',\n    RADIO_OUTER_CIRCLE: 'mdl-radio__outer-circle',\n    RADIO_INNER_CIRCLE: 'mdl-radio__inner-circle',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-radio__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple'\n};\n/**\n   * Handle change of state.\n   *\n   * @private\n   */\nMaterialRadio.prototype.onChange_ = function () {\n    // Since other radio buttons don't get change events, we need to look for\n    // them to update their classes.\n    var radios = document.getElementsByClassName(this.CssClasses_.JS_RADIO);\n    for (var i = 0; i < radios.length; i++) {\n        var button = radios[i].querySelector('.' + this.CssClasses_.RADIO_BTN);\n        // Different name == different group, so no point updating those.\n        if (button.getAttribute('name') === this.btnElement_.getAttribute('name')) {\n            radios[i]['MaterialRadio'].updateClasses_();\n        }\n    }\n};\n/**\n   * Handle focus.\n   *\n   * @private\n   */\nMaterialRadio.prototype.onFocus_ = function () {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus.\n   *\n   * @private\n   */\nMaterialRadio.prototype.onBlur_ = function () {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle mouseup.\n   *\n   * @private\n   */\nMaterialRadio.prototype.onMouseup_ = function () {\n    this.blur_();\n};\n/**\n   * Update classes.\n   *\n   * @private\n   */\nMaterialRadio.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n};\n/**\n   * Add blur.\n   *\n   * @private\n   */\nMaterialRadio.prototype.blur_ = function () {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n        this.btnElement_.blur();\n    }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n// Public methods.\n/**\n   * Check the components disabled state.\n   *\n   * @public\n   */\nMaterialRadio.prototype.checkDisabled = function () {\n    if (this.btnElement_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\nMaterialRadio.prototype['checkDisabled'] = MaterialRadio.prototype.checkDisabled;\n/**\n   * Check the components toggled state.\n   *\n   * @public\n   */\nMaterialRadio.prototype.checkToggleState = function () {\n    if (this.btnElement_.checked) {\n        this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n};\nMaterialRadio.prototype['checkToggleState'] = MaterialRadio.prototype.checkToggleState;\n/**\n   * Disable radio.\n   *\n   * @public\n   */\nMaterialRadio.prototype.disable = function () {\n    this.btnElement_.disabled = true;\n    this.updateClasses_();\n};\nMaterialRadio.prototype['disable'] = MaterialRadio.prototype.disable;\n/**\n   * Enable radio.\n   *\n   * @public\n   */\nMaterialRadio.prototype.enable = function () {\n    this.btnElement_.disabled = false;\n    this.updateClasses_();\n};\nMaterialRadio.prototype['enable'] = MaterialRadio.prototype.enable;\n/**\n   * Check radio.\n   *\n   * @public\n   */\nMaterialRadio.prototype.check = function () {\n    this.btnElement_.checked = true;\n    this.updateClasses_();\n};\nMaterialRadio.prototype['check'] = MaterialRadio.prototype.check;\n/**\n   * Uncheck radio.\n   *\n   * @public\n   */\nMaterialRadio.prototype.uncheck = function () {\n    this.btnElement_.checked = false;\n    this.updateClasses_();\n};\nMaterialRadio.prototype['uncheck'] = MaterialRadio.prototype.uncheck;\n/**\n   * Initialize element.\n   */\nMaterialRadio.prototype.init = function () {\n    if (this.element_) {\n        this.btnElement_ = this.element_.querySelector('.' + this.CssClasses_.RADIO_BTN);\n        this.boundChangeHandler_ = this.onChange_.bind(this);\n        this.boundFocusHandler_ = this.onChange_.bind(this);\n        this.boundBlurHandler_ = this.onBlur_.bind(this);\n        this.boundMouseUpHandler_ = this.onMouseup_.bind(this);\n        var outerCircle = document.createElement('span');\n        outerCircle.classList.add(this.CssClasses_.RADIO_OUTER_CIRCLE);\n        var innerCircle = document.createElement('span');\n        innerCircle.classList.add(this.CssClasses_.RADIO_INNER_CIRCLE);\n        this.element_.appendChild(outerCircle);\n        this.element_.appendChild(innerCircle);\n        var rippleContainer;\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            rippleContainer = document.createElement('span');\n            rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            rippleContainer.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n            rippleContainer.classList.add(this.CssClasses_.RIPPLE_CENTER);\n            rippleContainer.addEventListener('mouseup', this.boundMouseUpHandler_);\n            var ripple = document.createElement('span');\n            ripple.classList.add(this.CssClasses_.RIPPLE);\n            rippleContainer.appendChild(ripple);\n            this.element_.appendChild(rippleContainer);\n        }\n        this.btnElement_.addEventListener('change', this.boundChangeHandler_);\n        this.btnElement_.addEventListener('focus', this.boundFocusHandler_);\n        this.btnElement_.addEventListener('blur', this.boundBlurHandler_);\n        this.element_.addEventListener('mouseup', this.boundMouseUpHandler_);\n        this.updateClasses_();\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialRadio,\n    classAsString: 'MaterialRadio',\n    cssClass: 'mdl-js-radio',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Slider MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialSlider = function MaterialSlider(element) {\n    this.element_ = element;\n    // Browser feature detection.\n    this.isIE_ = window.navigator.msPointerEnabled;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialSlider'] = MaterialSlider;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialSlider.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialSlider.prototype.CssClasses_ = {\n    IE_CONTAINER: 'mdl-slider__ie-container',\n    SLIDER_CONTAINER: 'mdl-slider__container',\n    BACKGROUND_FLEX: 'mdl-slider__background-flex',\n    BACKGROUND_LOWER: 'mdl-slider__background-lower',\n    BACKGROUND_UPPER: 'mdl-slider__background-upper',\n    IS_LOWEST_VALUE: 'is-lowest-value',\n    IS_UPGRADED: 'is-upgraded'\n};\n/**\n   * Handle input on element.\n   *\n   * @private\n   */\nMaterialSlider.prototype.onInput_ = function () {\n    this.updateValueStyles_();\n};\n/**\n   * Handle change on element.\n   *\n   * @private\n   */\nMaterialSlider.prototype.onChange_ = function () {\n    this.updateValueStyles_();\n};\n/**\n   * Handle mouseup on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSlider.prototype.onMouseUp_ = function (event) {\n    event.target.blur();\n};\n/**\n   * Handle mousedown on container element.\n   * This handler is purpose is to not require the use to click\n   * exactly on the 2px slider element, as FireFox seems to be very\n   * strict about this.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   * @suppress {missingProperties}\n   */\nMaterialSlider.prototype.onContainerMouseDown_ = function (event) {\n    // If this click is not on the parent element (but rather some child)\n    // ignore. It may still bubble up.\n    if (event.target !== this.element_.parentElement) {\n        return;\n    }\n    // Discard the original event and create a new event that\n    // is on the slider element.\n    event.preventDefault();\n    var newEvent = new MouseEvent('mousedown', {\n        target: event.target,\n        buttons: event.buttons,\n        clientX: event.clientX,\n        clientY: this.element_.getBoundingClientRect().y\n    });\n    this.element_.dispatchEvent(newEvent);\n};\n/**\n   * Handle updating of values.\n   *\n   * @private\n   */\nMaterialSlider.prototype.updateValueStyles_ = function () {\n    // Calculate and apply percentages to div structure behind slider.\n    var fraction = (this.element_.value - this.element_.min) / (this.element_.max - this.element_.min);\n    if (fraction === 0) {\n        this.element_.classList.add(this.CssClasses_.IS_LOWEST_VALUE);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_LOWEST_VALUE);\n    }\n    if (!this.isIE_) {\n        this.backgroundLower_.style.flex = fraction;\n        this.backgroundLower_.style.webkitFlex = fraction;\n        this.backgroundUpper_.style.flex = 1 - fraction;\n        this.backgroundUpper_.style.webkitFlex = 1 - fraction;\n    }\n};\n// Public methods.\n/**\n   * Disable slider.\n   *\n   * @public\n   */\nMaterialSlider.prototype.disable = function () {\n    this.element_.disabled = true;\n};\nMaterialSlider.prototype['disable'] = MaterialSlider.prototype.disable;\n/**\n   * Enable slider.\n   *\n   * @public\n   */\nMaterialSlider.prototype.enable = function () {\n    this.element_.disabled = false;\n};\nMaterialSlider.prototype['enable'] = MaterialSlider.prototype.enable;\n/**\n   * Update slider value.\n   *\n   * @param {number} value The value to which to set the control (optional).\n   * @public\n   */\nMaterialSlider.prototype.change = function (value) {\n    if (typeof value !== 'undefined') {\n        this.element_.value = value;\n    }\n    this.updateValueStyles_();\n};\nMaterialSlider.prototype['change'] = MaterialSlider.prototype.change;\n/**\n   * Initialize element.\n   */\nMaterialSlider.prototype.init = function () {\n    if (this.element_) {\n        if (this.isIE_) {\n            // Since we need to specify a very large height in IE due to\n            // implementation limitations, we add a parent here that trims it down to\n            // a reasonable size.\n            var containerIE = document.createElement('div');\n            containerIE.classList.add(this.CssClasses_.IE_CONTAINER);\n            this.element_.parentElement.insertBefore(containerIE, this.element_);\n            this.element_.parentElement.removeChild(this.element_);\n            containerIE.appendChild(this.element_);\n        } else {\n            // For non-IE browsers, we need a div structure that sits behind the\n            // slider and allows us to style the left and right sides of it with\n            // different colors.\n            var container = document.createElement('div');\n            container.classList.add(this.CssClasses_.SLIDER_CONTAINER);\n            this.element_.parentElement.insertBefore(container, this.element_);\n            this.element_.parentElement.removeChild(this.element_);\n            container.appendChild(this.element_);\n            var backgroundFlex = document.createElement('div');\n            backgroundFlex.classList.add(this.CssClasses_.BACKGROUND_FLEX);\n            container.appendChild(backgroundFlex);\n            this.backgroundLower_ = document.createElement('div');\n            this.backgroundLower_.classList.add(this.CssClasses_.BACKGROUND_LOWER);\n            backgroundFlex.appendChild(this.backgroundLower_);\n            this.backgroundUpper_ = document.createElement('div');\n            this.backgroundUpper_.classList.add(this.CssClasses_.BACKGROUND_UPPER);\n            backgroundFlex.appendChild(this.backgroundUpper_);\n        }\n        this.boundInputHandler = this.onInput_.bind(this);\n        this.boundChangeHandler = this.onChange_.bind(this);\n        this.boundMouseUpHandler = this.onMouseUp_.bind(this);\n        this.boundContainerMouseDownHandler = this.onContainerMouseDown_.bind(this);\n        this.element_.addEventListener('input', this.boundInputHandler);\n        this.element_.addEventListener('change', this.boundChangeHandler);\n        this.element_.addEventListener('mouseup', this.boundMouseUpHandler);\n        this.element_.parentElement.addEventListener('mousedown', this.boundContainerMouseDownHandler);\n        this.updateValueStyles_();\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialSlider,\n    classAsString: 'MaterialSlider',\n    cssClass: 'mdl-js-slider',\n    widget: true\n});\n/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Snackbar MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialSnackbar = function MaterialSnackbar(element) {\n    this.element_ = element;\n    this.textElement_ = this.element_.querySelector('.' + this.cssClasses_.MESSAGE);\n    this.actionElement_ = this.element_.querySelector('.' + this.cssClasses_.ACTION);\n    if (!this.textElement_) {\n        throw new Error('There must be a message element for a snackbar.');\n    }\n    if (!this.actionElement_) {\n        throw new Error('There must be an action element for a snackbar.');\n    }\n    this.active = false;\n    this.actionHandler_ = undefined;\n    this.message_ = undefined;\n    this.actionText_ = undefined;\n    this.queuedNotifications_ = [];\n    this.setActionHidden_(true);\n};\nwindow['MaterialSnackbar'] = MaterialSnackbar;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialSnackbar.prototype.Constant_ = {\n    // The duration of the snackbar show/hide animation, in ms.\n    ANIMATION_LENGTH: 250\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialSnackbar.prototype.cssClasses_ = {\n    SNACKBAR: 'mdl-snackbar',\n    MESSAGE: 'mdl-snackbar__text',\n    ACTION: 'mdl-snackbar__action',\n    ACTIVE: 'mdl-snackbar--active'\n};\n/**\n   * Display the snackbar.\n   *\n   * @private\n   */\nMaterialSnackbar.prototype.displaySnackbar_ = function () {\n    this.element_.setAttribute('aria-hidden', 'true');\n    if (this.actionHandler_) {\n        this.actionElement_.textContent = this.actionText_;\n        this.actionElement_.addEventListener('click', this.actionHandler_);\n        this.setActionHidden_(false);\n    }\n    this.textElement_.textContent = this.message_;\n    this.element_.classList.add(this.cssClasses_.ACTIVE);\n    this.element_.setAttribute('aria-hidden', 'false');\n    setTimeout(this.cleanup_.bind(this), this.timeout_);\n};\n/**\n   * Show the snackbar.\n   *\n   * @param {Object} data The data for the notification.\n   * @public\n   */\nMaterialSnackbar.prototype.showSnackbar = function (data) {\n    if (data === undefined) {\n        throw new Error('Please provide a data object with at least a message to display.');\n    }\n    if (data['message'] === undefined) {\n        throw new Error('Please provide a message to be displayed.');\n    }\n    if (data['actionHandler'] && !data['actionText']) {\n        throw new Error('Please provide action text with the handler.');\n    }\n    if (this.active) {\n        this.queuedNotifications_.push(data);\n    } else {\n        this.active = true;\n        this.message_ = data['message'];\n        if (data['timeout']) {\n            this.timeout_ = data['timeout'];\n        } else {\n            this.timeout_ = 2750;\n        }\n        if (data['actionHandler']) {\n            this.actionHandler_ = data['actionHandler'];\n        }\n        if (data['actionText']) {\n            this.actionText_ = data['actionText'];\n        }\n        this.displaySnackbar_();\n    }\n};\nMaterialSnackbar.prototype['showSnackbar'] = MaterialSnackbar.prototype.showSnackbar;\n/**\n   * Check if the queue has items within it.\n   * If it does, display the next entry.\n   *\n   * @private\n   */\nMaterialSnackbar.prototype.checkQueue_ = function () {\n    if (this.queuedNotifications_.length > 0) {\n        this.showSnackbar(this.queuedNotifications_.shift());\n    }\n};\n/**\n   * Cleanup the snackbar event listeners and accessiblity attributes.\n   *\n   * @private\n   */\nMaterialSnackbar.prototype.cleanup_ = function () {\n    this.element_.classList.remove(this.cssClasses_.ACTIVE);\n    setTimeout(function () {\n        this.element_.setAttribute('aria-hidden', 'true');\n        this.textElement_.textContent = '';\n        if (!this.actionElement_.getAttribute('aria-hidden')) {\n            this.setActionHidden_(true);\n            this.actionElement_.textContent = '';\n            this.actionElement_.removeEventListener('click', this.actionHandler_);\n        }\n        this.actionHandler_ = undefined;\n        this.message_ = undefined;\n        this.actionText_ = undefined;\n        this.active = false;\n        this.checkQueue_();\n    }.bind(this), this.Constant_.ANIMATION_LENGTH);\n};\n/**\n   * Set the action handler hidden state.\n   *\n   * @param {boolean} value Whether or not to set to 'hidden'.\n   * @private\n   */\nMaterialSnackbar.prototype.setActionHidden_ = function (value) {\n    if (value) {\n        this.actionElement_.setAttribute('aria-hidden', 'true');\n    } else {\n        this.actionElement_.removeAttribute('aria-hidden');\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialSnackbar,\n    classAsString: 'MaterialSnackbar',\n    cssClass: 'mdl-js-snackbar',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Spinner MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   * @constructor\n   */\nvar MaterialSpinner = function MaterialSpinner(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialSpinner'] = MaterialSpinner;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialSpinner.prototype.Constant_ = { MDL_SPINNER_LAYER_COUNT: 4 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialSpinner.prototype.CssClasses_ = {\n    MDL_SPINNER_LAYER: 'mdl-spinner__layer',\n    MDL_SPINNER_CIRCLE_CLIPPER: 'mdl-spinner__circle-clipper',\n    MDL_SPINNER_CIRCLE: 'mdl-spinner__circle',\n    MDL_SPINNER_GAP_PATCH: 'mdl-spinner__gap-patch',\n    MDL_SPINNER_LEFT: 'mdl-spinner__left',\n    MDL_SPINNER_RIGHT: 'mdl-spinner__right'\n};\n/**\n   * Auxiliary method to create a spinner layer.\n   *\n   * @param {number} index Index of the layer to be created.\n   * @public\n   */\nMaterialSpinner.prototype.createLayer = function (index) {\n    var layer = document.createElement('div');\n    layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER);\n    layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER + '-' + index);\n    var leftClipper = document.createElement('div');\n    leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);\n    leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_LEFT);\n    var gapPatch = document.createElement('div');\n    gapPatch.classList.add(this.CssClasses_.MDL_SPINNER_GAP_PATCH);\n    var rightClipper = document.createElement('div');\n    rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);\n    rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_RIGHT);\n    var circleOwners = [\n        leftClipper,\n        gapPatch,\n        rightClipper\n    ];\n    for (var i = 0; i < circleOwners.length; i++) {\n        var circle = document.createElement('div');\n        circle.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE);\n        circleOwners[i].appendChild(circle);\n    }\n    layer.appendChild(leftClipper);\n    layer.appendChild(gapPatch);\n    layer.appendChild(rightClipper);\n    this.element_.appendChild(layer);\n};\nMaterialSpinner.prototype['createLayer'] = MaterialSpinner.prototype.createLayer;\n/**\n   * Stops the spinner animation.\n   * Public method for users who need to stop the spinner for any reason.\n   *\n   * @public\n   */\nMaterialSpinner.prototype.stop = function () {\n    this.element_.classList.remove('is-active');\n};\nMaterialSpinner.prototype['stop'] = MaterialSpinner.prototype.stop;\n/**\n   * Starts the spinner animation.\n   * Public method for users who need to manually start the spinner for any reason\n   * (instead of just adding the 'is-active' class to their markup).\n   *\n   * @public\n   */\nMaterialSpinner.prototype.start = function () {\n    this.element_.classList.add('is-active');\n};\nMaterialSpinner.prototype['start'] = MaterialSpinner.prototype.start;\n/**\n   * Initialize element.\n   */\nMaterialSpinner.prototype.init = function () {\n    if (this.element_) {\n        for (var i = 1; i <= this.Constant_.MDL_SPINNER_LAYER_COUNT; i++) {\n            this.createLayer(i);\n        }\n        this.element_.classList.add('is-upgraded');\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialSpinner,\n    classAsString: 'MaterialSpinner',\n    cssClass: 'mdl-js-spinner',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Checkbox MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialSwitch = function MaterialSwitch(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialSwitch'] = MaterialSwitch;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialSwitch.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialSwitch.prototype.CssClasses_ = {\n    INPUT: 'mdl-switch__input',\n    TRACK: 'mdl-switch__track',\n    THUMB: 'mdl-switch__thumb',\n    FOCUS_HELPER: 'mdl-switch__focus-helper',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-switch__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked'\n};\n/**\n   * Handle change of state.\n   *\n   * @private\n   */\nMaterialSwitch.prototype.onChange_ = function () {\n    this.updateClasses_();\n};\n/**\n   * Handle focus of element.\n   *\n   * @private\n   */\nMaterialSwitch.prototype.onFocus_ = function () {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus of element.\n   *\n   * @private\n   */\nMaterialSwitch.prototype.onBlur_ = function () {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle mouseup.\n   *\n   * @private\n   */\nMaterialSwitch.prototype.onMouseUp_ = function () {\n    this.blur_();\n};\n/**\n   * Handle class updates.\n   *\n   * @private\n   */\nMaterialSwitch.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n};\n/**\n   * Add blur.\n   *\n   * @private\n   */\nMaterialSwitch.prototype.blur_ = function () {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n        this.inputElement_.blur();\n    }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n// Public methods.\n/**\n   * Check the components disabled state.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.checkDisabled = function () {\n    if (this.inputElement_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\nMaterialSwitch.prototype['checkDisabled'] = MaterialSwitch.prototype.checkDisabled;\n/**\n   * Check the components toggled state.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.checkToggleState = function () {\n    if (this.inputElement_.checked) {\n        this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n};\nMaterialSwitch.prototype['checkToggleState'] = MaterialSwitch.prototype.checkToggleState;\n/**\n   * Disable switch.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.disable = function () {\n    this.inputElement_.disabled = true;\n    this.updateClasses_();\n};\nMaterialSwitch.prototype['disable'] = MaterialSwitch.prototype.disable;\n/**\n   * Enable switch.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.enable = function () {\n    this.inputElement_.disabled = false;\n    this.updateClasses_();\n};\nMaterialSwitch.prototype['enable'] = MaterialSwitch.prototype.enable;\n/**\n   * Activate switch.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.on = function () {\n    this.inputElement_.checked = true;\n    this.updateClasses_();\n};\nMaterialSwitch.prototype['on'] = MaterialSwitch.prototype.on;\n/**\n   * Deactivate switch.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.off = function () {\n    this.inputElement_.checked = false;\n    this.updateClasses_();\n};\nMaterialSwitch.prototype['off'] = MaterialSwitch.prototype.off;\n/**\n   * Initialize element.\n   */\nMaterialSwitch.prototype.init = function () {\n    if (this.element_) {\n        this.inputElement_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n        var track = document.createElement('div');\n        track.classList.add(this.CssClasses_.TRACK);\n        var thumb = document.createElement('div');\n        thumb.classList.add(this.CssClasses_.THUMB);\n        var focusHelper = document.createElement('span');\n        focusHelper.classList.add(this.CssClasses_.FOCUS_HELPER);\n        thumb.appendChild(focusHelper);\n        this.element_.appendChild(track);\n        this.element_.appendChild(thumb);\n        this.boundMouseUpHandler = this.onMouseUp_.bind(this);\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            this.rippleContainerElement_ = document.createElement('span');\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n            this.rippleContainerElement_.addEventListener('mouseup', this.boundMouseUpHandler);\n            var ripple = document.createElement('span');\n            ripple.classList.add(this.CssClasses_.RIPPLE);\n            this.rippleContainerElement_.appendChild(ripple);\n            this.element_.appendChild(this.rippleContainerElement_);\n        }\n        this.boundChangeHandler = this.onChange_.bind(this);\n        this.boundFocusHandler = this.onFocus_.bind(this);\n        this.boundBlurHandler = this.onBlur_.bind(this);\n        this.inputElement_.addEventListener('change', this.boundChangeHandler);\n        this.inputElement_.addEventListener('focus', this.boundFocusHandler);\n        this.inputElement_.addEventListener('blur', this.boundBlurHandler);\n        this.element_.addEventListener('mouseup', this.boundMouseUpHandler);\n        this.updateClasses_();\n        this.element_.classList.add('is-upgraded');\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialSwitch,\n    classAsString: 'MaterialSwitch',\n    cssClass: 'mdl-js-switch',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Tabs MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {Element} element The element that will be upgraded.\n   */\nvar MaterialTabs = function MaterialTabs(element) {\n    // Stores the HTML element.\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialTabs'] = MaterialTabs;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialTabs.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialTabs.prototype.CssClasses_ = {\n    TAB_CLASS: 'mdl-tabs__tab',\n    PANEL_CLASS: 'mdl-tabs__panel',\n    ACTIVE_CLASS: 'is-active',\n    UPGRADED_CLASS: 'is-upgraded',\n    MDL_JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    MDL_RIPPLE_CONTAINER: 'mdl-tabs__ripple-container',\n    MDL_RIPPLE: 'mdl-ripple',\n    MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events'\n};\n/**\n   * Handle clicks to a tabs component\n   *\n   * @private\n   */\nMaterialTabs.prototype.initTabs_ = function () {\n    if (this.element_.classList.contains(this.CssClasses_.MDL_JS_RIPPLE_EFFECT)) {\n        this.element_.classList.add(this.CssClasses_.MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS);\n    }\n    // Select element tabs, document panels\n    this.tabs_ = this.element_.querySelectorAll('.' + this.CssClasses_.TAB_CLASS);\n    this.panels_ = this.element_.querySelectorAll('.' + this.CssClasses_.PANEL_CLASS);\n    // Create new tabs for each tab element\n    for (var i = 0; i < this.tabs_.length; i++) {\n        new MaterialTab(this.tabs_[i], this);\n    }\n    this.element_.classList.add(this.CssClasses_.UPGRADED_CLASS);\n};\n/**\n   * Reset tab state, dropping active classes\n   *\n   * @private\n   */\nMaterialTabs.prototype.resetTabState_ = function () {\n    for (var k = 0; k < this.tabs_.length; k++) {\n        this.tabs_[k].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n    }\n};\n/**\n   * Reset panel state, droping active classes\n   *\n   * @private\n   */\nMaterialTabs.prototype.resetPanelState_ = function () {\n    for (var j = 0; j < this.panels_.length; j++) {\n        this.panels_[j].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n    }\n};\n/**\n   * Initialize element.\n   */\nMaterialTabs.prototype.init = function () {\n    if (this.element_) {\n        this.initTabs_();\n    }\n};\n/**\n   * Constructor for an individual tab.\n   *\n   * @constructor\n   * @param {Element} tab The HTML element for the tab.\n   * @param {MaterialTabs} ctx The MaterialTabs object that owns the tab.\n   */\nfunction MaterialTab(tab, ctx) {\n    if (tab) {\n        if (ctx.element_.classList.contains(ctx.CssClasses_.MDL_JS_RIPPLE_EFFECT)) {\n            var rippleContainer = document.createElement('span');\n            rippleContainer.classList.add(ctx.CssClasses_.MDL_RIPPLE_CONTAINER);\n            rippleContainer.classList.add(ctx.CssClasses_.MDL_JS_RIPPLE_EFFECT);\n            var ripple = document.createElement('span');\n            ripple.classList.add(ctx.CssClasses_.MDL_RIPPLE);\n            rippleContainer.appendChild(ripple);\n            tab.appendChild(rippleContainer);\n        }\n        tab.addEventListener('click', function (e) {\n            e.preventDefault();\n            var href = tab.href.split('#')[1];\n            var panel = ctx.element_.querySelector('#' + href);\n            ctx.resetTabState_();\n            ctx.resetPanelState_();\n            tab.classList.add(ctx.CssClasses_.ACTIVE_CLASS);\n            panel.classList.add(ctx.CssClasses_.ACTIVE_CLASS);\n        });\n    }\n}\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialTabs,\n    classAsString: 'MaterialTabs',\n    cssClass: 'mdl-js-tabs'\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Textfield MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialTextfield = function MaterialTextfield(element) {\n    this.element_ = element;\n    this.maxRows = this.Constant_.NO_MAX_ROWS;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialTextfield'] = MaterialTextfield;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialTextfield.prototype.Constant_ = {\n    NO_MAX_ROWS: -1,\n    MAX_ROWS_ATTRIBUTE: 'maxrows'\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialTextfield.prototype.CssClasses_ = {\n    LABEL: 'mdl-textfield__label',\n    INPUT: 'mdl-textfield__input',\n    IS_DIRTY: 'is-dirty',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_INVALID: 'is-invalid',\n    IS_UPGRADED: 'is-upgraded',\n    HAS_PLACEHOLDER: 'has-placeholder'\n};\n/**\n   * Handle input being entered.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTextfield.prototype.onKeyDown_ = function (event) {\n    var currentRowCount = event.target.value.split('\\n').length;\n    if (event.keyCode === 13) {\n        if (currentRowCount >= this.maxRows) {\n            event.preventDefault();\n        }\n    }\n};\n/**\n   * Handle focus.\n   *\n   * @private\n   */\nMaterialTextfield.prototype.onFocus_ = function () {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus.\n   *\n   * @private\n   */\nMaterialTextfield.prototype.onBlur_ = function () {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle reset event from out side.\n   *\n   * @private\n   */\nMaterialTextfield.prototype.onReset_ = function () {\n    this.updateClasses_();\n};\n/**\n   * Handle class updates.\n   *\n   * @private\n   */\nMaterialTextfield.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkValidity();\n    this.checkDirty();\n    this.checkFocus();\n};\n// Public methods.\n/**\n   * Check the disabled state and update field accordingly.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.checkDisabled = function () {\n    if (this.input_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\nMaterialTextfield.prototype['checkDisabled'] = MaterialTextfield.prototype.checkDisabled;\n/**\n  * Check the focus state and update field accordingly.\n  *\n  * @public\n  */\nMaterialTextfield.prototype.checkFocus = function () {\n    if (this.element_.querySelector(':focus')) {\n        this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n    }\n};\nMaterialTextfield.prototype['checkFocus'] = MaterialTextfield.prototype.checkFocus;\n/**\n   * Check the validity state and update field accordingly.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.checkValidity = function () {\n    if (this.input_.validity) {\n        if (this.input_.validity.valid) {\n            this.element_.classList.remove(this.CssClasses_.IS_INVALID);\n        } else {\n            this.element_.classList.add(this.CssClasses_.IS_INVALID);\n        }\n    }\n};\nMaterialTextfield.prototype['checkValidity'] = MaterialTextfield.prototype.checkValidity;\n/**\n   * Check the dirty state and update field accordingly.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.checkDirty = function () {\n    if (this.input_.value && this.input_.value.length > 0) {\n        this.element_.classList.add(this.CssClasses_.IS_DIRTY);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DIRTY);\n    }\n};\nMaterialTextfield.prototype['checkDirty'] = MaterialTextfield.prototype.checkDirty;\n/**\n   * Disable text field.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.disable = function () {\n    this.input_.disabled = true;\n    this.updateClasses_();\n};\nMaterialTextfield.prototype['disable'] = MaterialTextfield.prototype.disable;\n/**\n   * Enable text field.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.enable = function () {\n    this.input_.disabled = false;\n    this.updateClasses_();\n};\nMaterialTextfield.prototype['enable'] = MaterialTextfield.prototype.enable;\n/**\n   * Update text field value.\n   *\n   * @param {string} value The value to which to set the control (optional).\n   * @public\n   */\nMaterialTextfield.prototype.change = function (value) {\n    this.input_.value = value || '';\n    this.updateClasses_();\n};\nMaterialTextfield.prototype['change'] = MaterialTextfield.prototype.change;\n/**\n   * Focus text field.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.focus = function () {\n    this.input_.focus();\n    this.updateClasses_();\n};\nMaterialTextfield.prototype['focus'] = MaterialTextfield.prototype.focus;\n/**\n   * Blur text field.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.blur = function () {\n    this.input_.blur();\n    this.updateClasses_();\n};\nMaterialTextfield.prototype['blur'] = MaterialTextfield.prototype.blur;\n/**\n   * Initialize element.\n   */\nMaterialTextfield.prototype.init = function () {\n    if (this.element_) {\n        this.label_ = this.element_.querySelector('.' + this.CssClasses_.LABEL);\n        this.input_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n        if (this.input_) {\n            if (this.input_.hasAttribute(this.Constant_.MAX_ROWS_ATTRIBUTE)) {\n                this.maxRows = parseInt(this.input_.getAttribute(this.Constant_.MAX_ROWS_ATTRIBUTE), 10);\n                if (isNaN(this.maxRows)) {\n                    this.maxRows = this.Constant_.NO_MAX_ROWS;\n                }\n            }\n            if (this.input_.hasAttribute('placeholder')) {\n                this.element_.classList.add(this.CssClasses_.HAS_PLACEHOLDER);\n            }\n            this.boundUpdateClassesHandler = this.updateClasses_.bind(this);\n            this.boundFocusHandler = this.onFocus_.bind(this);\n            this.boundBlurHandler = this.onBlur_.bind(this);\n            this.boundResetHandler = this.onReset_.bind(this);\n            this.input_.addEventListener('input', this.boundUpdateClassesHandler);\n            this.input_.addEventListener('focus', this.boundFocusHandler);\n            this.input_.addEventListener('blur', this.boundBlurHandler);\n            this.input_.addEventListener('reset', this.boundResetHandler);\n            if (this.maxRows !== this.Constant_.NO_MAX_ROWS) {\n                // TODO: This should handle pasting multi line text.\n                // Currently doesn't.\n                this.boundKeyDownHandler = this.onKeyDown_.bind(this);\n                this.input_.addEventListener('keydown', this.boundKeyDownHandler);\n            }\n            var invalid = this.element_.classList.contains(this.CssClasses_.IS_INVALID);\n            this.updateClasses_();\n            this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n            if (invalid) {\n                this.element_.classList.add(this.CssClasses_.IS_INVALID);\n            }\n            if (this.input_.hasAttribute('autofocus')) {\n                this.element_.focus();\n                this.checkFocus();\n            }\n        }\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialTextfield,\n    classAsString: 'MaterialTextfield',\n    cssClass: 'mdl-js-textfield',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * MaterialSelectfield class\n   * @param {Element} element_ DOM element on which selectfield is attached\n   */\nvar MaterialSelectfield = function MaterialSelectfield(element_) {\n    this.element_ = element_;\n    // Initialize component\n    this.init();\n};\nwindow['MaterialSelectfield'] = MaterialSelectfield;\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialSelectfield.prototype.CssClasses_ = {\n    LABEL: 'mdl-selectfield__label',\n    SELECT: 'mdl-selectfield__select',\n    SELECTED_OPTION: 'mdl-selectfield__selected-option',\n    SELECTED_OPTION_TITLE: 'mdl-selectfield__selected-option-title',\n    MENU: 'mdl-selectfield__menu',\n    MENU_ITEM: 'mdl-selectfield__menu-item',\n    MENU_ITEM_ICON_CHECKED: 'mdl-selectfield__menu-item-icon-checked',\n    MENU_ITEM_ICON_UNCHECKED: 'mdl-selectfield__menu-item-icon-unchecked',\n    BACKDROP: 'mdl-selectfield__backdrop',\n    RIPPLE: 'mdl-ripple',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_CONTAINER: 'mdl-button__ripple-container',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    IS_UPGRADED: 'is-upgraded',\n    IS_DISABLED: 'is-disabled',\n    IS_FOCUSED: 'is-focused',\n    IS_OPENED: 'is-opened',\n    IS_SELECTED: 'is-selected',\n    IS_ACTIVE: 'is-active',\n    IS_DIRTY: 'is-dirty',\n    IS_INVALID: 'is-invalid',\n    FIXED: 'mdl-selectfield--fixed'\n};\n/**\n   * Keycode used in Selectfield component\n   *\n   * @enum {Number}\n   * @private\n   */\nMaterialSelectfield.prototype.KeyCodes_ = {\n    ENTER: 13,\n    ESCAPE: 27,\n    KEY_UP: 38,\n    KEY_DOWN: 40\n};\n/**\n   * Check Selectfield classe states\n   * @private\n   * @return {void}\n   */\nMaterialSelectfield.prototype.checkClasses_ = function () {\n    this.checkDirty_();\n    this.checkValidity_();\n    this.checkDisabled_();\n};\n/**\n   * Check if selectfield has value\n   * @private\n   * @return {void}\n   */\nMaterialSelectfield.prototype.checkDirty_ = function () {\n    if (this.select_.value) {\n        this.element_.classList.add(this.CssClasses_.IS_DIRTY);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DIRTY);\n    }\n};\n/**\n   * Check select validity\n   * @private\n   * @return {void}\n   */\nMaterialSelectfield.prototype.checkValidity_ = function () {\n    if (this.select_.validity.valid) {\n        this.element_.classList.remove(this.CssClasses_.IS_INVALID);\n    } else {\n        this.element_.classList.add(this.CssClasses_.IS_INVALID);\n    }\n};\n/**\n   * Check if selectfield is disabled\n   * @private\n   * @return {void}\n   */\nMaterialSelectfield.prototype.checkDisabled_ = function () {\n    if (this.select_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\n/**\n   * Check for selected option value\n   * @private\n   * @return {void}\n   */\nMaterialSelectfield.prototype.checkSelectedOption_ = function () {\n    if (!this.element_.classList.contains(this.CssClasses_.IS_DIRTY)) {\n        return;\n    }\n    if (this.select_.validity.valueMissing) {\n        this.selectedOptionValueElement_.innerText = '';\n    } else {\n        var options = this.select_.querySelectorAll('option');\n        var index = this.select_.selectedIndex;\n        this.selectedOptionValueElement_.innerText = options[index].innerHTML;\n    }\n};\n/**\n   * Trigger document click event to close all other selectfield elements\n   * except currently active\n   * @private\n   * @return {void}\n   */\nMaterialSelectfield.prototype.triggerDocumentClickEvent_ = function () {\n    var evt;\n    if (window.CustomEvent) {\n        try {\n            evt = new CustomEvent('click', {\n                sourceElement: this.selectedOptionElement_,\n                bubbles: false\n            });\n            document.body.dispatchEvent(evt);\n        } catch (e) {\n        }\n    } else {\n        evt = document.createEvent('CustomEvent');\n        evt.initEvent('click', false, false);\n        document.body.fireEvent(evt);\n    }\n};\n/**\n   * Element click handler\n   * @param  {Event} e Element event object\n   * @private\n   * @return {void}\n   */\nMaterialSelectfield.prototype.elementClickHandler_ = function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n};\n/**\n   * Element focus handler\n   * @private\n   * @return {void}\n   */\nMaterialSelectfield.prototype.elementFocusHandler_ = function () {\n    if (this.element_.classList.contains(this.CssClasses_.IS_DISABLED)) {\n        return;\n    }\n    if (!this.element_.classList.contains(this.CssClasses_.IS_FOCUSED)) {\n        this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n        this.element_.addEventListener('keydown', this.boundElementKeydownHandler);\n        this.element_.addEventListener('focusout', this.boundElementFocusoutHandler);\n        this.triggerDocumentClickEvent_();\n    }\n};\n/**\n   * Element focus handler\n   * @private\n   * @return {void}\n   */\nMaterialSelectfield.prototype.elementFocusoutHandler_ = function () {\n    if (this.menuElement_) {\n        return;\n    }\n    if (this.element_.classList.contains(this.CssClasses_.IS_FOCUSED)) {\n        this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n        this.element_.removeEventListener('keydown', this.boundElementKeydownHandler);\n        this.element_.removeEventListener('focusout', this.boundElementFocusoutHandler);\n    }\n};\n/**\n   * Element keydown handler\n   * @param  {Event} e Element event object\n   * @private\n   * @return {void}\n   */\nMaterialSelectfield.prototype.elementKeydownHandler_ = function (e) {\n    if (this.menuElement_) {\n        return;\n    }\n    var keyCode = e.keyCode;\n    if (keyCode === this.KeyCodes_.ENTER) {\n        e.preventDefault();\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n        this.open();\n    } else if (keyCode === this.KeyCodes_.KEY_UP) {\n        if (!this.menuElement_) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.stopImmediatePropagation();\n            this.open();\n            this.activateSelectedMenuItem_();\n        }\n    } else if (keyCode === this.KeyCodes_.KEY_DOWN) {\n        if (!this.menuElement_) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.stopImmediatePropagation();\n            this.open();\n            this.activateSelectedMenuItem_();\n        }\n    }\n};\n/**\n   * Select keydown handler\n   * @param  {Event} e Element event object\n   * @private\n   * @return {void}\n   */\nMaterialSelectfield.prototype.selectKeydownHandler_ = function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n};\n/**\n   * Menu item click handler\n   * @param  {Event} e Current menu item event object\n   * @private\n   * @return {void}\n   */\nMaterialSelectfield.prototype.menuItemClickHandler_ = function (e) {\n    var selectedItem;\n    var timeout = 0;\n    if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n        selectedItem = e.target.parentNode;\n        if (selectedItem.classList.contains(this.CssClasses_.RIPPLE_CONTAINER)) {\n            selectedItem = selectedItem.parentNode;\n        }\n        timeout = 100;\n    } else {\n        selectedItem = e.target;\n    }\n    setTimeout(function () {\n        var index = null;\n        if (selectedItem.getAttribute) {\n            index = selectedItem.getAttribute('data-index');\n        } else {\n            index = selectedItem.attributes.getNamedItem('data-index').value;\n        }\n        if (index !== null) {\n            this.selectOption_(index);\n            if (!this.select_.multiple) {\n                this.close();\n            }\n        }\n    }.bind(this), timeout);\n};\n/**\n   * Document click handler\n   * @param {Event} e document click event object\n   * @private\n   * @return {void}\n   */\nMaterialSelectfield.prototype.documentClickHandler_ = function (e) {\n    if (this.selectedOptionElement_ === e.target) {\n        return e.stopPropagation();\n    }\n    if (this.selectedOptionElement_ === e.target.parentNode) {\n        return e.stopPropagation();\n    }\n    if (e.target.classList.contains(this.CssClasses_.MENU_ITEM)) {\n        return e.stopPropagation();\n    }\n    if (e.target.parentNode.classList.contains(this.CssClasses_.MENU_ITEM)) {\n        return e.stopPropagation();\n    }\n    if (this.element_.classList.contains(this.CssClasses_.IS_OPENED)) {\n        e.stopPropagation();\n    }\n    this.close();\n};\n/**\n   * Escape key keyup handler\n   * @param  {Event} e Keyup event object\n   * @return {void}\n   */\nMaterialSelectfield.prototype.keyboardNavigationHandler_ = function (e) {\n    var keyCode = e.keyCode;\n    if (keyCode === this.KeyCodes_.ESCAPE) {\n        e.preventDefault();\n        this.close();\n    } else if (keyCode === this.KeyCodes_.KEY_UP) {\n        e.preventDefault();\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n        this.menuItemUp_();\n    } else if (keyCode === this.KeyCodes_.KEY_DOWN) {\n        e.preventDefault();\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n        this.menuItemDown_();\n    } else if (keyCode === this.KeyCodes_.ENTER) {\n        e.preventDefault();\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n        this.menuItemSelect_();\n    }\n};\n/**\n   * Selected option click handler\n   * @param {Event} e Selected option click event object\n   * @private\n   * @return {void}\n   */\nMaterialSelectfield.prototype.selectedOptionClickHandler_ = function (e) {\n    e.preventDefault();\n    if (this.element_.classList.contains(this.CssClasses_.IS_OPENED)) {\n        this.close();\n    } else {\n        this.triggerDocumentClickEvent_();\n        this.open();\n    }\n};\n/**\n   * Return  currently active menu item index\n   * @return {Number} Current active menu item index\n   */\nMaterialSelectfield.prototype.getActiveMenuItemIndex_ = function () {\n    var index = -1;\n    if (this.menuElement_) {\n        var menuItems = this.menuElement_.querySelectorAll('.' + this.CssClasses_.MENU_ITEM);\n        for (var i = 0; i < menuItems.length; i++) {\n            var menuItem = menuItems[i];\n            if (menuItem.classList.contains(this.CssClasses_.IS_ACTIVE)) {\n                index = i;\n                break;\n            }\n        }\n    }\n    if (index < 0 && !this.select_.multiple) {\n        index = this.select_.selectedIndex;\n    }\n    return index;\n};\n/**\n   * Get focus menu item for currently active menu item. Focus item is the one\n   * to scroll menu element to so that active item is in the middle (3rd item).\n   * @param  {Element} menuItem Menu item element\n   * @return {Element}          Focus menu item element\n   */\nMaterialSelectfield.prototype.getFocusMenuItem_ = function (menuItem) {\n    var focusMenuItem = menuItem;\n    for (var i = 0; i < 2; i++) {\n        if (focusMenuItem.previousSibling) {\n            focusMenuItem = focusMenuItem.previousSibling;\n        }\n    }\n    return focusMenuItem;\n};\n/**\n   * Switch current active menu item to one above if exists.\n   * If current one is first, switch to last.\n   * @private\n   * @return {void}\n   */\nMaterialSelectfield.prototype.menuItemUp_ = function () {\n    if (!this.menuElement_) {\n        return;\n    }\n    var activeIndex = this.getActiveMenuItemIndex_();\n    if (activeIndex < 0) {\n        activeIndex = 0;\n    }\n    var upIndex = activeIndex - 1;\n    if (upIndex < 0) {\n        upIndex = this.select_.options.length - 1;\n    }\n    var menuItems = this.menuElement_.querySelectorAll('.' + this.CssClasses_.MENU_ITEM);\n    if (menuItems[activeIndex]) {\n        menuItems[activeIndex].classList.remove(this.CssClasses_.IS_ACTIVE);\n    }\n    if (menuItems[upIndex]) {\n        menuItems[upIndex].classList.add(this.CssClasses_.IS_ACTIVE);\n        menuItems[upIndex].focus();\n        var focusItem = this.getFocusMenuItem_(menuItems[upIndex]);\n        this.menuElement_.scrollTop = focusItem.offsetTop - 8;\n    }\n};\n/**\n   * Switch current active menu item to one below if exists.\n   * If current one is last, switch to first.\n   * @private\n   * @return {void}\n   */\nMaterialSelectfield.prototype.menuItemDown_ = function () {\n    if (!this.menuElement_) {\n        return;\n    }\n    var activeIndex = this.getActiveMenuItemIndex_();\n    if (activeIndex < 0) {\n        activeIndex = this.select_.options.length - 1;\n    }\n    var downIndex = activeIndex + 1;\n    if (downIndex >= this.select_.options.length) {\n        downIndex = 0;\n    }\n    var menuItems = this.menuElement_.querySelectorAll('.' + this.CssClasses_.MENU_ITEM);\n    if (menuItems[activeIndex]) {\n        menuItems[activeIndex].classList.remove(this.CssClasses_.IS_ACTIVE);\n    }\n    if (menuItems[downIndex]) {\n        menuItems[downIndex].classList.add(this.CssClasses_.IS_ACTIVE);\n        menuItems[downIndex].focus();\n        var focusItem = this.getFocusMenuItem_(menuItems[downIndex]);\n        this.menuElement_.scrollTop = focusItem.offsetTop - 8;\n    }\n};\n/**\n   * Activate currently selected menu item\n   * @return {void}\n   */\nMaterialSelectfield.prototype.activateSelectedMenuItem_ = function () {\n    var activeIndex;\n    var menuItems;\n    activeIndex = this.getActiveMenuItemIndex_();\n    menuItems = this.menuElement_.querySelectorAll('.' + this.CssClasses_.MENU_ITEM);\n    if (menuItems[activeIndex]) {\n        menuItems[activeIndex].classList.remove(this.CssClasses_.IS_ACTIVE);\n    }\n    if (menuItems[this.select_.selectedIndex]) {\n        menuItems[this.select_.selectedIndex].classList.remove(this.CssClasses_.IS_ACTIVE);\n    }\n};\n/**\n   * Select current active menu item.\n   * @private\n   * @return {void}\n   */\nMaterialSelectfield.prototype.menuItemSelect_ = function () {\n    var activeIndex = this.getActiveMenuItemIndex_();\n    if (activeIndex >= 0 && activeIndex < this.select_.options.length) {\n        this.selectOption_(activeIndex);\n        if (!this.select_.multiple) {\n            this.close();\n        }\n    }\n};\n/**\n   * Render selectfield component\n   * @private\n   * @return {void}\n   */\nMaterialSelectfield.prototype.render_ = function () {\n    if (this.menuElement_) {\n        return;\n    }\n    // Render selectfield menu\n    this.renderMenu_();\n    if (this.element_.classList.contains(this.CssClasses_.FIXED)) {\n        this.backdropElement_ = document.createElement('div');\n        this.backdropElement_.classList.add(this.CssClasses_.BACKDROP);\n        document.appendChild(this.backdropElement_);\n        document.body.appendChild(this.menuElement_);\n    } else {\n        this.element_.appendChild(this.menuElement_);\n    }\n    if (this.element_.classList.contains(this.CssClasses_.IS_DIRTY)) {\n        var index = this.select_.selectedIndex;\n        var menuItems = this.menuElement_.querySelectorAll('.' + this.CssClasses_.MENU_ITEM);\n        var selectedMenuItem = this.menuElement_.querySelector('.' + this.CssClasses_.MENU_ITEM + '.' + this.CssClasses_.IS_SELECTED);\n        var menuItemsCount = menuItems.length;\n        // Calculate top offset\n        var topOffset = 0;\n        if (index < 2) {\n            topOffset = -(index * 48);\n        } else if (index > menuItemsCount - 1 - 2) {\n            if (index === menuItemsCount - 1) {\n                topOffset = -(4 * 48);\n            } else if (index === menuItemsCount - 2) {\n                topOffset = -(3 * 48);\n            } else {\n                topOffset = -(2 * 48);\n            }\n        } else {\n            topOffset = -(2 * 48);\n        }\n        if (topOffset < 0) {\n            this.menuElement_.style.top = topOffset + 'px';\n        }\n        if (selectedMenuItem) {\n            // Calculate which menu item is in click ofcus\n            var focusMenuItem = selectedMenuItem;\n            for (var i = 0; i < 2; i++) {\n                if (focusMenuItem.previousSibling) {\n                    focusMenuItem = focusMenuItem.previousSibling;\n                }\n            }\n            this.menuElement_.scrollTop = focusMenuItem.offsetTop - 8;\n        } else {\n            this.menuElement_.style.top = '0px';\n        }\n    } else {\n        this.menuElement_.style.top = '0px';\n    }\n};\n/**\n   * Render selectfield menu\n   * @private\n   * @return {Element} Selectfield menu\n   */\nMaterialSelectfield.prototype.renderMenu_ = function () {\n    if (!this.menuElement_) {\n        this.menuElement_ = document.createElement('div');\n        this.menuElement_.classList.add(this.CssClasses_.MENU);\n        var options = this.select_.querySelectorAll('option');\n        for (var i = 0; i < options.length; i++) {\n            var option = options[i];\n            var menuItem = this.renderMenuItem_(option);\n            if (menuItem.setAttribute) {\n                menuItem.setAttribute('data-index', i);\n                menuItem.setAttribute('data-value', option.value);\n            } else {\n                var indexAttr = document.createAttribute('data-index');\n                indexAttr.value = i;\n                var valueAttr = document.createAttribute('data-value');\n                valueAttr.value = option.value;\n                menuItem.attributes.setNamedItem(indexAttr);\n                menuItem.attributes.setNamedItem(valueAttr);\n            }\n            // Check if current option is selected\n            if (this.select_.selectedIndex === i) {\n                menuItem.classList.add(this.CssClasses_.IS_SELECTED);\n            }\n            this.menuElement_.appendChild(menuItem);\n        }\n    }\n    return this.menuElement_;\n};\n/**\n   * Render selectfield menu item\n   * @param  {Element} option Select option element\n   * @private\n   * @return {Element}        Rendered menu item element\n   */\nMaterialSelectfield.prototype.renderMenuItem_ = function (option) {\n    var menuItem = document.createElement('div');\n    menuItem.classList.add(this.CssClasses_.MENU_ITEM);\n    if (option.selected) {\n        menuItem.classList.add(this.CssClasses_.IS_SELECTED);\n    }\n    menuItem.innerHTML = option.innerHTML;\n    if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n        menuItem.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n        var rippleContainer = document.createElement('span');\n        rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n        var rippleElement = document.createElement('span');\n        rippleElement.classList.add(this.CssClasses_.RIPPLE);\n        rippleContainer.appendChild(rippleElement);\n        rippleContainer.addEventListener('mouseup', this.boundMenuItemClickHandler);\n        menuItem.appendChild(rippleContainer);\n        componentHandler.upgradeElement(menuItem, 'MaterialRipple');\n    } else {\n        menuItem.addEventListener('click', this.boundMenuItemClickHandler);\n    }\n    return menuItem;\n};\n/**\n   * Select option in hidden select element.\n   * Since this method can be called using API, we must check\n   * if menuElement_ exists to do the necesarry logic. This can be\n   * bypassed by ensuring that menuElement_ always exist, but since we didn't\n   * want to contain unnecesary DOM elements this is must-have.\n   * @param  {number} index Selected menu item index\n   * @private\n   * @return {void}\n   */\nMaterialSelectfield.prototype.selectOption_ = function (index) {\n    var iterator = 0;\n    var option;\n    var menuItems;\n    var selectedItem;\n    var selectedOption;\n    index = parseInt(index, 10);\n    if (!this.select_.multiple && this.select_.selectedIndex === index) {\n        // Currently selected option is selected again, do nothing\n        return;\n    }\n    if (!this.select_.options[index]) {\n        // We assume that select menu is cleared using API\n        if (this.select_.multiple) {\n            if (this.menuElement_) {\n                menuItems = this.menuElement_.querySelectorAll('.' + this.CssClasses_.MENU_ITEM);\n            }\n            for (iterator = 0; iterator < this.select_.options.length; iterator++) {\n                option = this.select_.options[iterator];\n                option.selected = false;\n                if (menuItems[index]) {\n                    menuItems[index].classList.remove(this.CssClasses_.IS_SELECTED);\n                }\n            }\n        } else {\n            this.select_.selectedIndex = index;\n            if (this.menuElement_) {\n                selectedItem = this.menuElement_.querySelector('.' + this.CssClasses_.IS_SELECTED);\n                if (selectedItem) {\n                    selectedItem.classList.remove(this.CssClasses_.IS_SELECTED);\n                }\n            }\n        }\n    }\n    if (this.select_.multiple) {\n        selectedOption = this.select_.options[index];\n        // Currently selected option is already selected, unselect it since this\n        // is multiple options select input\n        if (selectedOption) {\n            if (selectedOption.selected) {\n                selectedOption.selected = false;\n            } else {\n                selectedOption.selected = true;\n            }\n        }\n        if (this.menuElement_) {\n            menuItems = this.menuElement_.querySelectorAll('.' + this.CssClasses_.MENU_ITEM);\n            if (menuItems[index]) {\n                if (selectedOption.selected) {\n                    menuItems[index].classList.add(this.CssClasses_.IS_SELECTED);\n                } else {\n                    menuItems[index].classList.remove(this.CssClasses_.IS_SELECTED);\n                }\n            }\n        }\n        var selectedValues = [];\n        for (iterator = 0; iterator < this.select_.options.length; iterator++) {\n            option = this.select_.options[iterator];\n            if (option && option.selected) {\n                selectedValues.push(option.label);\n            }\n        }\n        this.selectedOptionValueElement_.innerHTML = selectedValues.join(', ');\n    } else {\n        this.select_.selectedIndex = index;\n        if (this.menuElement_) {\n            selectedItem = this.menuElement_.querySelector('.' + this.CssClasses_.IS_SELECTED);\n            if (selectedItem) {\n                selectedItem.classList.remove(this.CssClasses_.IS_SELECTED);\n            }\n            menuItems = this.menuElement_.querySelectorAll('.' + this.CssClasses_.MENU_ITEM);\n            if (menuItems[index]) {\n                menuItems[index].classList.add(this.CssClasses_.IS_SELECTED);\n                this.selectedOptionValueElement_.innerHTML = menuItems[index].innerHTML;\n            } else {\n                this.selectedOptionValueElement_.innerHTML = '';\n            }\n        }\n        var selectOptions = this.select_.options;\n        if (selectOptions[index]) {\n            this.selectedOptionValueElement_.innerHTML = selectOptions[index].label;\n        } else {\n            this.selectedOptionValueElement_.innerHTML = '';\n        }\n    }\n    this.checkClasses_();\n    var changeEvent;\n    if (window.Event) {\n        try {\n            changeEvent = new Event('change', { bubbles: false });\n            this.element_.dispatchEvent(changeEvent);\n            this.select_.dispatchEvent(changeEvent);\n        } catch (e) {\n        }\n    } else {\n        changeEvent = document.createEvent('Event');\n        changeEvent.initEvent('click', false, false);\n        this.select_.fireEvent(changeEvent);\n    }\n};\n/**\n   * Open selectfield component widget\n   * @public\n   * @return {void}\n   */\nMaterialSelectfield.prototype.open = function () {\n    if (this.element_.classList.contains(this.CssClasses_.IS_OPENED)) {\n        return;\n    }\n    this.render_();\n    document.body.addEventListener('click', this.boundDocumentClickHandler);\n    document.body.addEventListener('keydown', this.boundKeyboardNavigationHandler);\n    setTimeout(function () {\n        this.element_.classList.add(this.CssClasses_.IS_OPENED);\n        this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n    }.bind(this));\n};\nMaterialSelectfield.prototype['open'] = MaterialSelectfield.prototype.open;\n/**\n   * Close selectfield component widget\n   * @public\n   * @return {void} [description]\n   */\nMaterialSelectfield.prototype.close = function () {\n    if (!this.element_.classList.contains(this.CssClasses_.IS_OPENED)) {\n        return;\n    }\n    this.element_.classList.remove(this.CssClasses_.IS_OPENED);\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n    document.body.removeEventListener('click', this.boundDocumentClickHandler);\n    document.body.removeEventListener('keydown', this.boundKeyboardNavigationHandler);\n    setTimeout(function () {\n        if (this.menuElement_.remove) {\n            this.menuElement_.remove();\n        } else {\n            this.menuElement_.parentNode.removeChild(this.menuElement_);\n        }\n        this.menuElement_ = null;\n    }.bind(this), 200);\n};\nMaterialSelectfield.prototype['close'] = MaterialSelectfield.prototype.close;\n/**\n   * Enable selectfield\n   * @public\n   * @return {void}\n   */\nMaterialSelectfield.prototype.enable = function () {\n    this.select_.disabled = false;\n    this.element_.tabIndex = 0;\n    this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    this.selectedOptionElement_.addEventListener('click', this.boundSelectedOptionClickHandler);\n};\nMaterialSelectfield.prototype['enable'] = MaterialSelectfield.prototype.enable;\n/**\n   * Disable selectfield\n   * @public\n   * @return {void}\n   */\nMaterialSelectfield.prototype.disable = function () {\n    this.select_.disabled = true;\n    this.element_.tabIndex = -1;\n    this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    this.selectedOptionElement_.removeEventListener('click', this.boundSelectedOptionClickHandler);\n};\nMaterialSelectfield.prototype['disable'] = MaterialSelectfield.prototype.disable;\n/**\n   * Set currently selected index in select element\n   * @param {Number} index Selected index\n   */\nMaterialSelectfield.prototype.setSelectedIndex = function (index) {\n    this.selectOption_(index);\n};\nMaterialSelectfield.prototype['setSelectedIndex'] = MaterialSelectfield.prototype.setSelectedIndex;\n/**\n   * Set currently selected value in select element\n   * @param {Number} value Selected value\n   */\nMaterialSelectfield.prototype.setSelectedValue = function (value) {\n    console.log(value);\n};\nMaterialSelectfield.prototype['setSelectedValue'] = MaterialSelectfield.prototype.setSelectedValue;\n/**\n   * Initialize component\n   * @return {void}\n   */\nMaterialSelectfield.prototype.init = function () {\n    if (this.element_) {\n        this.select_ = this.element_.querySelector('.' + this.CssClasses_.SELECT);\n        if (!this.select_) {\n            throw new Error('Component must have select element as a child');\n        }\n        if (this.element_.tabIndex < 0) {\n            this.element_.setAttribute('tabindex', 0);\n        }\n        // Prepare event handlers\n        this.boundElementClickHandler = this.elementClickHandler_.bind(this);\n        this.boundElementFocusHandler = this.elementFocusHandler_.bind(this);\n        this.boundElementFocusoutHandler = this.elementFocusoutHandler_.bind(this);\n        this.boundElementKeydownHandler = this.elementKeydownHandler_.bind(this);\n        this.boundSelectKeydownHandler = this.selectKeydownHandler_.bind(this);\n        this.boundSelectedOptionClickHandler = this.selectedOptionClickHandler_.bind(this);\n        this.boundDocumentClickHandler = this.documentClickHandler_.bind(this);\n        this.boundKeyboardNavigationHandler = this.keyboardNavigationHandler_.bind(this);\n        this.boundMenuItemClickHandler = this.menuItemClickHandler_.bind(this);\n        this.element_.addEventListener('focus', this.boundElementFocusHandler);\n        this.selectedOptionValueElement_ = document.createElement('span');\n        this.selectedOptionValueElement_.classList.add(this.CssClasses_.SELECTED_OPTION_TITLE);\n        this.selectedOptionElement_ = document.createElement('div');\n        this.selectedOptionElement_.classList.add(this.CssClasses_.SELECTED_OPTION);\n        this.selectedOptionElement_.appendChild(this.selectedOptionValueElement_);\n        var arrowIcon = document.createElement('i');\n        arrowIcon.classList.add('material-icons');\n        arrowIcon.innerHTML = 'arrow_drop_down';\n        this.selectedOptionElement_.appendChild(arrowIcon);\n        this.element_.appendChild(this.selectedOptionElement_);\n        var options = this.select_.options;\n        if (this.select_.multiple) {\n            var option;\n            var values = [];\n            for (var i = 0; i < options.length; i++) {\n                option = options[i];\n                if (option.selected) {\n                    values.push(option.label);\n                }\n            }\n            this.selectedOptionValueElement_.innerHTML = values.join(', ');\n        } else {\n            this.selectedOptionValueElement_.innerText = '';\n            if (options[this.select_.selectedIndex]) {\n                this.selectedOptionValueElement_.innerText = options[this.select_.selectedIndex].innerText;\n            }\n        }\n        if (this.select_.disabled) {\n            this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.IS_DISABLED)) {\n            this.disable();\n        } else {\n            this.enable();\n            this.element_.addEventListener('click', this.boundElementClickHandler);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n        }\n        // @TODO: Remove after initial development\n        // this.open();\n        this.checkClasses_();\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialSelectfield,\n    classAsString: 'MaterialSelectfield',\n    cssClass: 'mdl-js-selectfield',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Tooltip MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialTooltip = function MaterialTooltip(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialTooltip'] = MaterialTooltip;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialTooltip.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialTooltip.prototype.CssClasses_ = {\n    IS_ACTIVE: 'is-active',\n    BOTTOM: 'mdl-tooltip--bottom',\n    LEFT: 'mdl-tooltip--left',\n    RIGHT: 'mdl-tooltip--right',\n    TOP: 'mdl-tooltip--top'\n};\n/**\n   * Handle mouseenter for tooltip.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTooltip.prototype.handleMouseEnter_ = function (event) {\n    var props = event.target.getBoundingClientRect();\n    var left = props.left + props.width / 2;\n    var top = props.top + props.height / 2;\n    var marginLeft = -1 * (this.element_.offsetWidth / 2);\n    var marginTop = -1 * (this.element_.offsetHeight / 2);\n    if (this.element_.classList.contains(this.CssClasses_.LEFT) || this.element_.classList.contains(this.CssClasses_.RIGHT)) {\n        left = props.width / 2;\n        if (top + marginTop < 0) {\n            this.element_.style.top = 0;\n            this.element_.style.marginTop = 0;\n        } else {\n            this.element_.style.top = top + 'px';\n            this.element_.style.marginTop = marginTop + 'px';\n        }\n    } else if (left + marginLeft < 0) {\n        this.element_.style.left = 0;\n        this.element_.style.marginLeft = 0;\n    } else {\n        this.element_.style.left = left + 'px';\n        this.element_.style.marginLeft = marginLeft + 'px';\n    }\n    if (this.element_.classList.contains(this.CssClasses_.TOP)) {\n        this.element_.style.top = props.top - this.element_.offsetHeight - 10 + 'px';\n    } else if (this.element_.classList.contains(this.CssClasses_.RIGHT)) {\n        this.element_.style.left = props.left + props.width + 10 + 'px';\n    } else if (this.element_.classList.contains(this.CssClasses_.LEFT)) {\n        this.element_.style.left = props.left - this.element_.offsetWidth - 10 + 'px';\n    } else {\n        this.element_.style.top = props.top + props.height + 10 + 'px';\n    }\n    this.element_.classList.add(this.CssClasses_.IS_ACTIVE);\n};\n/**\n   * Handle mouseleave for tooltip.\n   *\n   * @private\n   */\nMaterialTooltip.prototype.handleMouseLeave_ = function () {\n    this.element_.classList.remove(this.CssClasses_.IS_ACTIVE);\n};\n/**\n   * Initialize element.\n   */\nMaterialTooltip.prototype.init = function () {\n    if (this.element_) {\n        var forElId = this.element_.getAttribute('for');\n        if (forElId) {\n            this.forElement_ = document.getElementById(forElId);\n        }\n        if (this.forElement_) {\n            // It's left here because it prevents accidental text selection on Android\n            if (!this.forElement_.hasAttribute('tabindex')) {\n                this.forElement_.setAttribute('tabindex', '0');\n            }\n            this.boundMouseEnterHandler = this.handleMouseEnter_.bind(this);\n            this.boundMouseLeaveHandler = this.handleMouseLeave_.bind(this);\n            this.forElement_.addEventListener('mouseenter', this.boundMouseEnterHandler, false);\n            this.forElement_.addEventListener('touchend', this.boundMouseEnterHandler, false);\n            this.forElement_.addEventListener('mouseleave', this.boundMouseLeaveHandler, false);\n            window.addEventListener('touchstart', this.boundMouseLeaveHandler);\n        }\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialTooltip,\n    classAsString: 'MaterialTooltip',\n    cssClass: 'mdl-tooltip'\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Layout MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialLayout = function MaterialLayout(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialLayout'] = MaterialLayout;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialLayout.prototype.Constant_ = {\n    MAX_WIDTH: '(max-width: 1024px)',\n    TAB_SCROLL_PIXELS: 100,\n    RESIZE_TIMEOUT: 100,\n    MENU_ICON: '&#xE5D2;',\n    CHEVRON_LEFT: 'chevron_left',\n    CHEVRON_RIGHT: 'chevron_right'\n};\n/**\n   * Keycodes, for code readability.\n   *\n   * @enum {number}\n   * @private\n   */\nMaterialLayout.prototype.Keycodes_ = {\n    ENTER: 13,\n    ESCAPE: 27,\n    SPACE: 32\n};\n/**\n   * Modes.\n   *\n   * @enum {number}\n   * @private\n   */\nMaterialLayout.prototype.Mode_ = {\n    STANDARD: 0,\n    SEAMED: 1,\n    WATERFALL: 2,\n    SCROLL: 3\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialLayout.prototype.CssClasses_ = {\n    CONTAINER: 'mdl-layout__container',\n    HEADER: 'mdl-layout__header',\n    DRAWER: 'mdl-layout__drawer',\n    CONTENT: 'mdl-layout__content',\n    DRAWER_BTN: 'mdl-layout__drawer-button',\n    ICON: 'material-icons',\n    JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_CONTAINER: 'mdl-layout__tab-ripple-container',\n    RIPPLE: 'mdl-ripple',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    HEADER_SEAMED: 'mdl-layout__header--seamed',\n    HEADER_WATERFALL: 'mdl-layout__header--waterfall',\n    HEADER_SCROLL: 'mdl-layout__header--scroll',\n    FIXED_HEADER: 'mdl-layout--fixed-header',\n    OBFUSCATOR: 'mdl-layout__obfuscator',\n    TAB_BAR: 'mdl-layout__tab-bar',\n    TAB_CONTAINER: 'mdl-layout__tab-bar-container',\n    TAB: 'mdl-layout__tab',\n    TAB_BAR_BUTTON: 'mdl-layout__tab-bar-button',\n    TAB_BAR_LEFT_BUTTON: 'mdl-layout__tab-bar-left-button',\n    TAB_BAR_RIGHT_BUTTON: 'mdl-layout__tab-bar-right-button',\n    PANEL: 'mdl-layout__tab-panel',\n    HAS_DRAWER: 'has-drawer',\n    HAS_TABS: 'has-tabs',\n    HAS_SCROLLING_HEADER: 'has-scrolling-header',\n    CASTING_SHADOW: 'is-casting-shadow',\n    IS_COMPACT: 'is-compact',\n    IS_SMALL_SCREEN: 'is-small-screen',\n    IS_DRAWER_OPEN: 'is-visible',\n    IS_ACTIVE: 'is-active',\n    IS_UPGRADED: 'is-upgraded',\n    IS_ANIMATING: 'is-animating',\n    ON_LARGE_SCREEN: 'mdl-layout--large-screen-only',\n    ON_SMALL_SCREEN: 'mdl-layout--small-screen-only'\n};\n/**\n   * Handles scrolling on the content.\n   *\n   * @private\n   */\nMaterialLayout.prototype.contentScrollHandler_ = function () {\n    if (this.header_.classList.contains(this.CssClasses_.IS_ANIMATING)) {\n        return;\n    }\n    var headerVisible = !this.element_.classList.contains(this.CssClasses_.IS_SMALL_SCREEN) || this.element_.classList.contains(this.CssClasses_.FIXED_HEADER);\n    if (this.content_.scrollTop > 0 && !this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n        this.header_.classList.add(this.CssClasses_.CASTING_SHADOW);\n        this.header_.classList.add(this.CssClasses_.IS_COMPACT);\n        if (headerVisible) {\n            this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n        }\n    } else if (this.content_.scrollTop <= 0 && this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n        this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n        this.header_.classList.remove(this.CssClasses_.IS_COMPACT);\n        if (headerVisible) {\n            this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n        }\n    }\n};\n/**\n   * Handles a keyboard event on the drawer.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialLayout.prototype.keyboardEventHandler_ = function (evt) {\n    // Only react when the drawer is open.\n    if (evt.keyCode === this.Keycodes_.ESCAPE && this.drawer_.classList.contains(this.CssClasses_.IS_DRAWER_OPEN)) {\n        this.toggleDrawer();\n    }\n};\n/**\n   * Handles changes in screen size.\n   *\n   * @private\n   */\nMaterialLayout.prototype.screenSizeHandler_ = function () {\n    if (this.screenSizeMediaQuery_.matches) {\n        this.element_.classList.add(this.CssClasses_.IS_SMALL_SCREEN);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_SMALL_SCREEN);\n        // Collapse drawer (if any) when moving to a large screen size.\n        if (this.drawer_) {\n            this.drawer_.classList.remove(this.CssClasses_.IS_DRAWER_OPEN);\n            this.obfuscator_.classList.remove(this.CssClasses_.IS_DRAWER_OPEN);\n        }\n    }\n};\n/**\n   * Handles events of drawer button.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialLayout.prototype.drawerToggleHandler_ = function (evt) {\n    if (evt && evt.type === 'keydown') {\n        if (evt.keyCode === this.Keycodes_.SPACE || evt.keyCode === this.Keycodes_.ENTER) {\n            // prevent scrolling in drawer nav\n            evt.preventDefault();\n        } else {\n            // prevent other keys\n            return;\n        }\n    }\n    this.toggleDrawer();\n};\n/**\n   * Handles (un)setting the `is-animating` class\n   *\n   * @private\n   */\nMaterialLayout.prototype.headerTransitionEndHandler_ = function () {\n    this.header_.classList.remove(this.CssClasses_.IS_ANIMATING);\n};\n/**\n   * Handles expanding the header on click\n   *\n   * @private\n   */\nMaterialLayout.prototype.headerClickHandler_ = function () {\n    if (this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n        this.header_.classList.remove(this.CssClasses_.IS_COMPACT);\n        this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n    }\n};\n/**\n   * Reset tab state, dropping active classes\n   *\n   * @param {NodeList} tabs The tabs to reset.\n   * @private\n   */\nMaterialLayout.prototype.resetTabState_ = function (tabs) {\n    for (var k = 0; k < tabs.length; k++) {\n        tabs[k].classList.remove(this.CssClasses_.IS_ACTIVE);\n    }\n};\n/**\n   * Reset panel state, droping active classes\n   *\n   * @param {NodeList} panels The panels to reset.\n   * @private\n   */\nMaterialLayout.prototype.resetPanelState_ = function (panels) {\n    for (var j = 0; j < panels.length; j++) {\n        panels[j].classList.remove(this.CssClasses_.IS_ACTIVE);\n    }\n};\n/**\n  * Toggle drawer state\n  *\n  * @public\n  */\nMaterialLayout.prototype.toggleDrawer = function () {\n    var drawerButton = this.element_.querySelector('.' + this.CssClasses_.DRAWER_BTN);\n    this.drawer_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN);\n    this.obfuscator_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN);\n    // Set accessibility properties.\n    if (this.drawer_.classList.contains(this.CssClasses_.IS_DRAWER_OPEN)) {\n        this.drawer_.setAttribute('aria-hidden', 'false');\n        drawerButton.setAttribute('aria-expanded', 'true');\n    } else {\n        this.drawer_.setAttribute('aria-hidden', 'true');\n        drawerButton.setAttribute('aria-expanded', 'false');\n    }\n};\nMaterialLayout.prototype['toggleDrawer'] = MaterialLayout.prototype.toggleDrawer;\n/**\n   * Initialize element.\n   */\nMaterialLayout.prototype.init = function () {\n    if (this.element_) {\n        var container = document.createElement('div');\n        container.classList.add(this.CssClasses_.CONTAINER);\n        var focusedElement = this.element_.querySelector(':focus');\n        this.element_.parentElement.insertBefore(container, this.element_);\n        this.element_.parentElement.removeChild(this.element_);\n        container.appendChild(this.element_);\n        if (focusedElement) {\n            focusedElement.focus();\n        }\n        var directChildren = this.element_.childNodes;\n        var numChildren = directChildren.length;\n        for (var c = 0; c < numChildren; c++) {\n            var child = directChildren[c];\n            if (child.classList && child.classList.contains(this.CssClasses_.HEADER)) {\n                this.header_ = child;\n            }\n            if (child.classList && child.classList.contains(this.CssClasses_.DRAWER)) {\n                this.drawer_ = child;\n            }\n            if (child.classList && child.classList.contains(this.CssClasses_.CONTENT)) {\n                this.content_ = child;\n            }\n        }\n        window.addEventListener('pageshow', function (e) {\n            if (e.persisted) {\n                // when page is loaded from back/forward cache\n                // trigger repaint to let layout scroll in safari\n                this.element_.style.overflowY = 'hidden';\n                requestAnimationFrame(function () {\n                    this.element_.style.overflowY = '';\n                }.bind(this));\n            }\n        }.bind(this), false);\n        if (this.header_) {\n            this.tabBar_ = this.header_.querySelector('.' + this.CssClasses_.TAB_BAR);\n        }\n        var mode = this.Mode_.STANDARD;\n        if (this.header_) {\n            if (this.header_.classList.contains(this.CssClasses_.HEADER_SEAMED)) {\n                mode = this.Mode_.SEAMED;\n            } else if (this.header_.classList.contains(this.CssClasses_.HEADER_WATERFALL)) {\n                mode = this.Mode_.WATERFALL;\n                this.header_.addEventListener('transitionend', this.headerTransitionEndHandler_.bind(this));\n                this.header_.addEventListener('click', this.headerClickHandler_.bind(this));\n            } else if (this.header_.classList.contains(this.CssClasses_.HEADER_SCROLL)) {\n                mode = this.Mode_.SCROLL;\n                container.classList.add(this.CssClasses_.HAS_SCROLLING_HEADER);\n            }\n            if (mode === this.Mode_.STANDARD) {\n                this.header_.classList.add(this.CssClasses_.CASTING_SHADOW);\n                if (this.tabBar_) {\n                    this.tabBar_.classList.add(this.CssClasses_.CASTING_SHADOW);\n                }\n            } else if (mode === this.Mode_.SEAMED || mode === this.Mode_.SCROLL) {\n                this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n                if (this.tabBar_) {\n                    this.tabBar_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n                }\n            } else if (mode === this.Mode_.WATERFALL) {\n                // Add and remove shadows depending on scroll position.\n                // Also add/remove auxiliary class for styling of the compact version of\n                // the header.\n                this.content_.addEventListener('scroll', this.contentScrollHandler_.bind(this));\n                this.contentScrollHandler_();\n            }\n        }\n        // Add drawer toggling button to our layout, if we have an openable drawer.\n        if (this.drawer_) {\n            var drawerButton = this.element_.querySelector('.' + this.CssClasses_.DRAWER_BTN);\n            if (!drawerButton) {\n                drawerButton = document.createElement('div');\n                drawerButton.setAttribute('aria-expanded', 'false');\n                drawerButton.setAttribute('role', 'button');\n                drawerButton.setAttribute('tabindex', '0');\n                drawerButton.classList.add(this.CssClasses_.DRAWER_BTN);\n                var drawerButtonIcon = document.createElement('i');\n                drawerButtonIcon.classList.add(this.CssClasses_.ICON);\n                drawerButtonIcon.innerHTML = this.Constant_.MENU_ICON;\n                drawerButton.appendChild(drawerButtonIcon);\n            }\n            if (this.drawer_.classList.contains(this.CssClasses_.ON_LARGE_SCREEN)) {\n                // If drawer has ON_LARGE_SCREEN class then add it to the drawer toggle button as well.\n                drawerButton.classList.add(this.CssClasses_.ON_LARGE_SCREEN);\n            } else if (this.drawer_.classList.contains(this.CssClasses_.ON_SMALL_SCREEN)) {\n                // If drawer has ON_SMALL_SCREEN class then add it to the drawer toggle button as well.\n                drawerButton.classList.add(this.CssClasses_.ON_SMALL_SCREEN);\n            }\n            drawerButton.addEventListener('click', this.drawerToggleHandler_.bind(this));\n            drawerButton.addEventListener('keydown', this.drawerToggleHandler_.bind(this));\n            // Add a class if the layout has a drawer, for altering the left padding.\n            // Adds the HAS_DRAWER to the elements since this.header_ may or may\n            // not be present.\n            this.element_.classList.add(this.CssClasses_.HAS_DRAWER);\n            // If we have a fixed header, add the button to the header rather than\n            // the layout.\n            if (this.element_.classList.contains(this.CssClasses_.FIXED_HEADER)) {\n                this.header_.insertBefore(drawerButton, this.header_.firstChild);\n            } else {\n                this.element_.insertBefore(drawerButton, this.content_);\n            }\n            var obfuscator = document.createElement('div');\n            obfuscator.classList.add(this.CssClasses_.OBFUSCATOR);\n            this.element_.appendChild(obfuscator);\n            obfuscator.addEventListener('click', this.drawerToggleHandler_.bind(this));\n            this.obfuscator_ = obfuscator;\n            this.drawer_.addEventListener('keydown', this.keyboardEventHandler_.bind(this));\n            this.drawer_.setAttribute('aria-hidden', 'true');\n        }\n        // Keep an eye on screen size, and add/remove auxiliary class for styling\n        // of small screens.\n        this.screenSizeMediaQuery_ = window.matchMedia(this.Constant_.MAX_WIDTH);\n        this.screenSizeMediaQuery_.addListener(this.screenSizeHandler_.bind(this));\n        this.screenSizeHandler_();\n        // Initialize tabs, if any.\n        if (this.header_ && this.tabBar_) {\n            this.element_.classList.add(this.CssClasses_.HAS_TABS);\n            var tabContainer = document.createElement('div');\n            tabContainer.classList.add(this.CssClasses_.TAB_CONTAINER);\n            this.header_.insertBefore(tabContainer, this.tabBar_);\n            this.header_.removeChild(this.tabBar_);\n            var leftButton = document.createElement('div');\n            leftButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);\n            leftButton.classList.add(this.CssClasses_.TAB_BAR_LEFT_BUTTON);\n            var leftButtonIcon = document.createElement('i');\n            leftButtonIcon.classList.add(this.CssClasses_.ICON);\n            leftButtonIcon.textContent = this.Constant_.CHEVRON_LEFT;\n            leftButton.appendChild(leftButtonIcon);\n            leftButton.addEventListener('click', function () {\n                this.tabBar_.scrollLeft -= this.Constant_.TAB_SCROLL_PIXELS;\n            }.bind(this));\n            var rightButton = document.createElement('div');\n            rightButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);\n            rightButton.classList.add(this.CssClasses_.TAB_BAR_RIGHT_BUTTON);\n            var rightButtonIcon = document.createElement('i');\n            rightButtonIcon.classList.add(this.CssClasses_.ICON);\n            rightButtonIcon.textContent = this.Constant_.CHEVRON_RIGHT;\n            rightButton.appendChild(rightButtonIcon);\n            rightButton.addEventListener('click', function () {\n                this.tabBar_.scrollLeft += this.Constant_.TAB_SCROLL_PIXELS;\n            }.bind(this));\n            tabContainer.appendChild(leftButton);\n            tabContainer.appendChild(this.tabBar_);\n            tabContainer.appendChild(rightButton);\n            // Add and remove tab buttons depending on scroll position and total\n            // window size.\n            var tabUpdateHandler = function () {\n                if (this.tabBar_.scrollLeft > 0) {\n                    leftButton.classList.add(this.CssClasses_.IS_ACTIVE);\n                } else {\n                    leftButton.classList.remove(this.CssClasses_.IS_ACTIVE);\n                }\n                if (this.tabBar_.scrollLeft < this.tabBar_.scrollWidth - this.tabBar_.offsetWidth) {\n                    rightButton.classList.add(this.CssClasses_.IS_ACTIVE);\n                } else {\n                    rightButton.classList.remove(this.CssClasses_.IS_ACTIVE);\n                }\n            }.bind(this);\n            this.tabBar_.addEventListener('scroll', tabUpdateHandler);\n            tabUpdateHandler();\n            // Update tabs when the window resizes.\n            var windowResizeHandler = function () {\n                // Use timeouts to make sure it doesn't happen too often.\n                if (this.resizeTimeoutId_) {\n                    clearTimeout(this.resizeTimeoutId_);\n                }\n                this.resizeTimeoutId_ = setTimeout(function () {\n                    tabUpdateHandler();\n                    this.resizeTimeoutId_ = null;\n                }.bind(this), this.Constant_.RESIZE_TIMEOUT);\n            }.bind(this);\n            window.addEventListener('resize', windowResizeHandler);\n            if (this.tabBar_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {\n                this.tabBar_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            }\n            // Select element tabs, document panels\n            var tabs = this.tabBar_.querySelectorAll('.' + this.CssClasses_.TAB);\n            var panels = this.content_.querySelectorAll('.' + this.CssClasses_.PANEL);\n            // Create new tabs for each tab element\n            for (var i = 0; i < tabs.length; i++) {\n                new MaterialLayoutTab(tabs[i], tabs, panels, this);\n            }\n        }\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n/**\n   * Constructor for an individual tab.\n   *\n   * @constructor\n   * @param {HTMLElement} tab The HTML element for the tab.\n   * @param {!NodeList} tabs Array with HTML elements for all tabs.\n   * @param {!NodeList} panels Array with HTML elements for all panels.\n   * @param {MaterialLayout} layout The MaterialLayout object that owns the tab.\n   */\nfunction MaterialLayoutTab(tab, tabs, panels, layout) {\n    /**\n     * Auxiliary method to programmatically select a tab in the UI.\n     */\n    function selectTab() {\n        var href = tab.href.split('#')[1];\n        var panel = layout.content_.querySelector('#' + href);\n        layout.resetTabState_(tabs);\n        layout.resetPanelState_(panels);\n        tab.classList.add(layout.CssClasses_.IS_ACTIVE);\n        panel.classList.add(layout.CssClasses_.IS_ACTIVE);\n    }\n    if (layout.tabBar_.classList.contains(layout.CssClasses_.JS_RIPPLE_EFFECT)) {\n        var rippleContainer = document.createElement('span');\n        rippleContainer.classList.add(layout.CssClasses_.RIPPLE_CONTAINER);\n        rippleContainer.classList.add(layout.CssClasses_.JS_RIPPLE_EFFECT);\n        var ripple = document.createElement('span');\n        ripple.classList.add(layout.CssClasses_.RIPPLE);\n        rippleContainer.appendChild(ripple);\n        tab.appendChild(rippleContainer);\n    }\n    tab.addEventListener('click', function (e) {\n        if (tab.getAttribute('href').charAt(0) === '#') {\n            e.preventDefault();\n            selectTab();\n        }\n    });\n    tab.show = selectTab;\n    tab.addEventListener('click', function (e) {\n        e.preventDefault();\n        var href = tab.href.split('#')[1];\n        var panel = layout.content_.querySelector('#' + href);\n        layout.resetTabState_(tabs);\n        layout.resetPanelState_(panels);\n        tab.classList.add(layout.CssClasses_.IS_ACTIVE);\n        panel.classList.add(layout.CssClasses_.IS_ACTIVE);\n    });\n}\nwindow['MaterialLayoutTab'] = MaterialLayoutTab;\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialLayout,\n    classAsString: 'MaterialLayout',\n    cssClass: 'mdl-js-layout'\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Data Table Card MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {Element} element The element that will be upgraded.\n   */\nvar MaterialDataTable = function MaterialDataTable(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialDataTable'] = MaterialDataTable;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialDataTable.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialDataTable.prototype.CssClasses_ = {\n    DATA_TABLE: 'mdl-data-table',\n    SELECTABLE: 'mdl-data-table--selectable',\n    SELECT_ELEMENT: 'mdl-data-table__select',\n    IS_SELECTED: 'is-selected',\n    IS_UPGRADED: 'is-upgraded'\n};\n/**\n   * Generates and returns a function that toggles the selection state of a\n   * single row (or multiple rows).\n   *\n   * @param {Element} checkbox Checkbox that toggles the selection state.\n   * @param {Element} row Row to toggle when checkbox changes.\n   * @param {(Array<Object>|NodeList)=} optRows Rows to toggle when checkbox changes.\n   * @return {?function()} a function to toggle the selection state of the row(s).\n   * @private\n   */\nMaterialDataTable.prototype.selectRow_ = function (checkbox, row, optRows) {\n    if (row) {\n        return function () {\n            if (checkbox.checked) {\n                row.classList.add(this.CssClasses_.IS_SELECTED);\n            } else {\n                row.classList.remove(this.CssClasses_.IS_SELECTED);\n            }\n        }.bind(this);\n    }\n    if (optRows) {\n        return function () {\n            var i;\n            var el;\n            if (checkbox.checked) {\n                for (i = 0; i < optRows.length; i++) {\n                    el = optRows[i].querySelector('td').querySelector('.mdl-checkbox');\n                    el['MaterialCheckbox'].check();\n                    optRows[i].classList.add(this.CssClasses_.IS_SELECTED);\n                }\n            } else {\n                for (i = 0; i < optRows.length; i++) {\n                    el = optRows[i].querySelector('td').querySelector('.mdl-checkbox');\n                    el['MaterialCheckbox'].uncheck();\n                    optRows[i].classList.remove(this.CssClasses_.IS_SELECTED);\n                }\n            }\n        }.bind(this);\n    }\n    return null;\n};\n/**\n   * Creates a checkbox for a single or or multiple rows and hooks up the\n   * event handling.\n   *\n   * @param {Element} row Row to toggle when checkbox changes.\n   * @param {(Array<Object>|NodeList)=} optRows Rows to toggle when checkbox changes.\n   * @return {Element} the created parent label.\n   * @private\n   */\nMaterialDataTable.prototype.createCheckbox_ = function (row, optRows) {\n    var label = document.createElement('label');\n    var labelClasses = [\n        'mdl-checkbox',\n        'mdl-js-checkbox',\n        'mdl-js-ripple-effect',\n        this.CssClasses_.SELECT_ELEMENT\n    ];\n    label.className = labelClasses.join(' ');\n    var checkbox = document.createElement('input');\n    checkbox.type = 'checkbox';\n    checkbox.classList.add('mdl-checkbox__input');\n    if (row) {\n        checkbox.checked = row.classList.contains(this.CssClasses_.IS_SELECTED);\n        checkbox.addEventListener('change', this.selectRow_(checkbox, row));\n    } else if (optRows) {\n        checkbox.addEventListener('change', this.selectRow_(checkbox, null, optRows));\n    }\n    label.appendChild(checkbox);\n    componentHandler.upgradeElement(label, 'MaterialCheckbox');\n    return label;\n};\n/**\n   * Initialize element.\n   */\nMaterialDataTable.prototype.init = function () {\n    if (this.element_) {\n        var firstHeader = this.element_.querySelector('th');\n        var bodyRows = Array.prototype.slice.call(this.element_.querySelectorAll('tbody tr'));\n        var footRows = Array.prototype.slice.call(this.element_.querySelectorAll('tfoot tr'));\n        var rows = bodyRows.concat(footRows);\n        if (this.element_.classList.contains(this.CssClasses_.SELECTABLE)) {\n            var th = document.createElement('th');\n            var headerCheckbox = this.createCheckbox_(null, rows);\n            th.appendChild(headerCheckbox);\n            firstHeader.parentElement.insertBefore(th, firstHeader);\n            for (var i = 0; i < rows.length; i++) {\n                var firstCell = rows[i].querySelector('td');\n                if (firstCell) {\n                    var td = document.createElement('td');\n                    if (rows[i].parentNode.nodeName.toUpperCase() === 'TBODY') {\n                        var rowCheckbox = this.createCheckbox_(rows[i]);\n                        td.appendChild(rowCheckbox);\n                    }\n                    rows[i].insertBefore(td, firstCell);\n                }\n            }\n            this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n        }\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialDataTable,\n    classAsString: 'MaterialDataTable',\n    cssClass: 'mdl-js-data-table'\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for date picker MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialDatePicker = function MaterialDatePicker(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialDatePicker'] = MaterialDatePicker;\n/**\n   * Global date picker locales\n   * Currently allowed formats: ['mm/dd/yyyy', 'dd.mm.yyyy', 'yyyy-mm-dd']\n   * @type {Object}\n   * @public\n   */\nMaterialDatePicker.locales = {\n    /**\n     * Date format for input formatting\n     * @type {string}\n     */\n    format: 'yyyy-mm-dd',\n    weekStart: 0,\n    weekDays: [\n        'Sunday',\n        'Monday',\n        'Tuesday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday'\n    ],\n    weekDaysShort: [\n        'Sun',\n        'Mon',\n        'Tue',\n        'Wed',\n        'Thu',\n        'Fri',\n        'Sat'\n    ],\n    weekDaysLetter: [\n        'S',\n        'M',\n        'T',\n        'W',\n        'T',\n        'F',\n        'S'\n    ],\n    months: [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December'\n    ],\n    monthsShort: [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n        'Jul',\n        'Aug',\n        'Sep',\n        'Oct',\n        'Nov',\n        'Dec'\n    ],\n    actions: {\n        cancel: 'Cancel',\n        ok: 'Ok'\n    }\n};\n/**\n   * Instance based date picker locales.\n   * Overrides global date picker locales\n   *\n   * @type {Object}\n   * @public\n   */\nMaterialDatePicker.prototype.locales = {};\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialDatePicker.prototype.Constant_ = {};\n/**\n   * Store events in one place so they can be updated easily.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialDatePicker.prototype.Event_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialDatePicker.prototype.CssClasses_ = {\n    // General component classes\n    IS_UPGRADED: 'is-upgraded',\n    IS_VISIBLE: 'is-visible',\n    IS_ATTACHED: 'is-attached',\n    IS_INVALID: 'is-invalid',\n    IS_FOCUSED: 'is-focused',\n    IS_DIRTY: 'is-dirty',\n    IS_FIXED: 'is-fixed',\n    // Appearance classes\n    INLINE: 'mdl-datepicker--inline',\n    FIXED: 'mdl-datepicker--fixed',\n    LANDSCAPE: 'mdl-datepicker--landscape',\n    // Datepicker related classes\n    BACKDROP: 'mdl-datepicker__backdrop',\n    WIDGET: 'mdl-datepicker__widget',\n    INPUT: 'mdl-datepicker__input',\n    NAVIGATION: 'mdl-datepicker__navigation',\n    CALENDAR: 'mdl-datepicker__calendar',\n    YEAR: 'mdl-datepicker__year',\n    YEAR_SELECTED: 'is-selected',\n    YEAR_DISABLED: 'is-disabled',\n    YEAR_PICKER: 'is-year-picker',\n    YEAR_PICKER_ELEMENT: 'mdl-datepicker__year-picker',\n    MONTH: 'mdl-datepicker__month',\n    WEEKS: 'mdl-datepicker__weeks',\n    WEEK: 'mdl-datepicker__week',\n    WEEK_DAYS: 'mdl-datepicker__week-days',\n    DATE: 'mdl-datepicker__date',\n    DATE_TODAY: 'is-today',\n    DATE_SELECTED: 'is-selected',\n    DATE_EMPTY: 'is-empty',\n    DATE_DISABLED: 'is-disabled',\n    MONTH_CURRENT: 'mdl-datepicker__current-month',\n    MONTH_PREVIOUS: 'mdl-datepicker__previous-month',\n    MONTH_NEXT: 'mdl-datepicker__next-month',\n    HEADER: 'mdl-datepicker__header',\n    HEADER_YEAR: 'mdl-datepicker__header-year',\n    HEADER_DATE: 'mdl-datepicker__header-date',\n    CALENDAR_PREVIOUS: 'mdl-datepicker__calendar--previous',\n    CALENDAR_NEXT: 'mdl-datepicker__calendar--next',\n    ACTIONS: 'mdl-datepicker__actions',\n    ACTION_CANCEL: 'mdl-datepicker__cancel',\n    ACTION_OK: 'mdl-datepicker__ok'\n};\nMaterialDatePicker.prototype.isInitialized_ = null;\nMaterialDatePicker.prototype.currentDate_ = null;\nMaterialDatePicker.prototype.selectedDate_ = null;\nMaterialDatePicker.prototype.pickedDate_ = null;\nMaterialDatePicker.prototype.minDate_ = null;\nMaterialDatePicker.prototype.maxDate_ = null;\n/**\n   * Trigger date picker internal events\n   * @param {string} eventName  Event which will be triggered on component element\n   * @private\n   * @return {void}\n   */\nMaterialDatePicker.prototype.triggerEvent_ = function (eventName) {\n    var evt = document.createEvent('Events');\n    evt.initEvent(eventName, false, false);\n    this.element_.dispatchEvent(evt);\n};\n/**\n   * Cancel action click handler\n   * @param {Event} e click event object\n   * @private\n   * @return {void}\n   */\nMaterialDatePicker.prototype.cancelHandler_ = function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    this.close();\n    if (this.selectedDate_) {\n        this.pickedDate_.setFullYear(this.selectedDate_.getFullYear());\n        this.pickedDate_.setMonth(this.selectedDate_.getMonth());\n        this.pickedDate_.setDate(this.selectedDate_.getDate());\n    }\n    this.updateHeader_();\n    this.updateMonthTitle_();\n    this.changeCurrentMonth_(this.pickedDate_);\n    if (this.element_.classList.contains(this.CssClasses_.YEAR_PICKER)) {\n        this.element_.classList.remove(this.CssClasses_.YEAR_PICKER);\n    }\n};\n/**\n   * Ok action click handler\n   * @param {Event} e click event object\n   * @private\n   * @return {void}\n   */\nMaterialDatePicker.prototype.okHandler_ = function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    if (!this.selectedDate_) {\n        this.selectedDate_ = new Date();\n    }\n    this.selectedDate_.setFullYear(this.pickedDate_.getFullYear());\n    this.selectedDate_.setMonth(this.pickedDate_.getMonth());\n    this.selectedDate_.setDate(this.pickedDate_.getDate());\n    if (this.input_) {\n        this.input_.value = this.formatInputDate_(this.selectedDate_);\n        if (this.element_.MaterialTextfield) {\n            this.element_.MaterialTextfield.checkValidity();\n        }\n    }\n    this.element_.classList.add(this.CssClasses_.IS_DIRTY);\n    if (this.element_.classList.contains(this.CssClasses_.YEAR_PICKER)) {\n        this.element_.classList.remove(this.CssClasses_.YEAR_PICKER);\n    }\n    this.triggerEvent_('change');\n    this.close();\n};\n/**\n   * Date picker input focus handler\n   * @param {Event} e focus event object\n   * @private\n   * @return {void}\n   */\nMaterialDatePicker.prototype.inputFocusHandler_ = function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    this.input_.blur();\n    this.open();\n};\n/**\n   * Date picker input blur handler\n   * @param {Event} e focusout event object\n   * @private\n   * @return {void}\n   */\nMaterialDatePicker.prototype.inputBlurHandler_ = function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n};\n/**\n   * Header year click handler\n   * @param {Event} e Click event object\n   * @private\n   * @return {void}\n   */\nMaterialDatePicker.prototype.headerYearClickHandler_ = function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    if (this.widgetElement_ && !this.widgetElement_.classList.contains(this.CssClasses_.YEAR_PICKER)) {\n        this.widgetElement_.classList.add(this.CssClasses_.YEAR_PICKER);\n        var selectedYear = this.yearPickerElement_.querySelector('.' + this.CssClasses_.YEAR_SELECTED);\n        if (selectedYear) {\n            var focusYear = selectedYear;\n            for (var i = 0; i < 3; i++) {\n                if (focusYear.previousElementSibling) {\n                    focusYear = focusYear.previousElementSibling;\n                }\n            }\n            focusYear.parentNode.scrollTop = focusYear.offsetTop;\n        }\n    }\n};\n/**\n   * Header date click handler\n   * @param {Event} e Click event object\n   * @private\n   * @return {void}\n   */\nMaterialDatePicker.prototype.headerDateClickHandler_ = function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    if (this.widgetElement_ && this.widgetElement_.classList.contains(this.CssClasses_.YEAR_PICKER)) {\n        this.widgetElement_.classList.remove(this.CssClasses_.YEAR_PICKER);\n    }\n};\n/**\n   * Picker year click handler\n   * @private\n   * @param {Event} e Click event object\n   * @return {void}\n   */\nMaterialDatePicker.prototype.pickYearHandler_ = function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    var selectedYear = this.yearPickerElement_.querySelector('.' + this.CssClasses_.YEAR_SELECTED);\n    if (selectedYear && selectedYear.classList.contains(this.CssClasses_.YEAR_SELECTED)) {\n        selectedYear.classList.remove(this.CssClasses_.YEAR_SELECTED);\n    }\n    var currentYear = e.target;\n    currentYear.classList.add(this.CssClasses_.YEAR_SELECTED);\n    var currentYearInt = parseInt(currentYear.getAttribute('data-year'), 10);\n    this.pickedDate_.setFullYear(currentYearInt);\n    var pickedDate = new Date(this.pickedDate_.getTime());\n    if (!this.isInRange_(pickedDate)) {\n        if (this.minDate_ && !this.maxDate_ && pickedDate.getTime() < this.minDate_.getTime()) {\n            pickedDate.setFullYear(this.minDate_.getFullYear());\n            pickedDate.setMonth(this.minDate_.getMonth());\n            pickedDate.setDate(this.minDate_.getDate());\n        } else if (!this.minDate_ && this.maxDate_ && pickedDate.getTime() > this.maxDate_.getTime()) {\n            pickedDate.setFullYear(this.maxDate_.getFullYear());\n            pickedDate.setMonth(this.maxDate_.getMonth());\n            pickedDate.setDate(this.maxDate_.getDate());\n        } else {\n            pickedDate.setFullYear(this.minDate_.getFullYear());\n            pickedDate.setMonth(this.minDate_.getMonth());\n            pickedDate.setDate(this.minDate_.getDate());\n        }\n        this.pickedDate_.setFullYear(pickedDate.getFullYear());\n        this.pickedDate_.setMonth(pickedDate.getMonth());\n        this.pickedDate_.setDate(pickedDate.getDate());\n    }\n    this.currentMonth_.setFullYear(currentYearInt);\n    this.currentMonth_.setMonth(this.pickedDate_.getMonth());\n    this.currentMonth_.setDate(this.pickedDate_.getDate());\n    this.updateHeader_();\n    this.updateMonthTitle_();\n    this.changeCurrentMonth_(this.currentMonth_);\n};\n/**\n   * Select date action click handler\n   * @param {Event} e Click event object\n   * @private\n   * @return {void}\n   */\nMaterialDatePicker.prototype.pickDateHandler_ = function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    var previousDate = this.calendarElement_.querySelector('.' + this.CssClasses_.DATE + '.' + this.CssClasses_.DATE_SELECTED);\n    if (previousDate) {\n        previousDate.classList.remove(this.CssClasses_.DATE_SELECTED);\n    }\n    // Select current date\n    var pickedDate = e.target;\n    var pickedDateInt = pickedDate.getAttribute('data-date');\n    pickedDate.classList.add(this.CssClasses_.DATE_SELECTED);\n    var nextPickedDate = new Date(this.pickedDate_.getTime());\n    nextPickedDate.setFullYear(this.currentMonth_.getFullYear());\n    nextPickedDate.setMonth(this.currentMonth_.getMonth());\n    nextPickedDate.setDate(pickedDateInt);\n    if (this.isInRange_(nextPickedDate)) {\n        this.pickedDate_.setFullYear(this.currentMonth_.getFullYear());\n        this.pickedDate_.setMonth(this.currentMonth_.getMonth());\n        this.pickedDate_.setDate(pickedDateInt);\n        this.updateHeader_();\n        this.updateYearPicker_();\n    }\n};\n/**\n   * Previous date picker month handler\n   * @param {Event} e Click event object\n   * @private\n   * @return {void}\n   */\nMaterialDatePicker.prototype.previousMonthHandler_ = function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    var previousMonth = new Date(this.currentMonth_.getTime());\n    previousMonth.setDate(1);\n    previousMonth.setMonth(this.currentMonth_.getMonth() - 1);\n    this.changeCurrentMonth_(previousMonth);\n};\n/**\n   * Next date picker month handler\n   * @param {Event} e Click event object\n   * @private\n   * @return {void}\n   */\nMaterialDatePicker.prototype.nextMonthHandler_ = function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    var nextMonth = new Date(this.currentMonth_.getTime());\n    nextMonth.setDate(1);\n    nextMonth.setMonth(nextMonth.getMonth() + 1);\n    this.changeCurrentMonth_(nextMonth);\n};\n/**\n   * Format given date for input value\n   * @param  {Date} dateObject Date object to format\n   * @private\n   * @return {string} Formatted date string\n   */\nMaterialDatePicker.prototype.formatInputDate_ = function (dateObject) {\n    var dateFormatted;\n    // If given format is actually function,\n    // execute in global scope with selected date as parameter\n    if (typeof this.locales.format === 'function') {\n        var formatFunction = this.locales.format;\n        var selectedDate = this.selectedDate_;\n        return formatFunction.call(window, selectedDate);\n    }\n    /**\n     * Append leading zero if necessary\n     * @param {number} number Number to append leading zero\n     * @return {string} String containing leading zero if needed\n     */\n    var addLeadingZero = function (number) {\n        return ('0' + number).substr(-2, 2);\n    };\n    switch (this.locales.format) {\n    case 'dd.mm.yyyy':\n        dateFormatted = [\n            addLeadingZero(dateObject.getDate()),\n            addLeadingZero(dateObject.getMonth() + 1),\n            dateObject.getFullYear()\n        ].join('.');\n        break;\n    case 'yyyy-mm-dd':\n        dateFormatted = [\n            dateObject.getFullYear(),\n            addLeadingZero(dateObject.getMonth() + 1),\n            addLeadingZero(dateObject.getDate())\n        ].join('-');\n        break;\n    case 'mm/dd/yyyy':\n        dateFormatted = [\n            addLeadingZero(dateObject.getMonth() + 1),\n            addLeadingZero(dateObject.getDate()),\n            dateObject.getFullYear()\n        ].join('/');\n        break;\n    default:\n        dateFormatted = [\n            addLeadingZero(dateObject.getMonth() + 1),\n            addLeadingZero(dateObject.getDate()),\n            dateObject.getFullYear()\n        ].join('/');\n        break;\n    }\n    return dateFormatted;\n};\n/**\n   * Format given date for header display\n   * @param  {Date} date Current picked date object\n   * @return {string} Formatted date\n   */\nMaterialDatePicker.prototype.formatHeaderDate_ = function (date) {\n    return this.locales.weekDaysShort[date.getDay()] + ', ' + this.locales.monthsShort[date.getMonth()] + ' ' + date.getDate();\n};\n/**\n   * Check if given date is today\n   * @param  {Date} currentDate Date object to check \"is today\" state\n   * @return {boolean} Date \"is today\" status\n   */\nMaterialDatePicker.prototype.isToday_ = function (currentDate) {\n    var today = new Date();\n    if (today.getFullYear() !== currentDate.getFullYear()) {\n        return false;\n    }\n    if (today.getMonth() !== currentDate.getMonth()) {\n        return false;\n    }\n    if (today.getDate() !== currentDate.getDate()) {\n        return false;\n    }\n    return true;\n};\n/**\n   * Check if given date is selected date\n   * @param  {Date} currentDate Date object to check \"is picked\" state\n   * @return {boolean} Date \"is picked\" state\n   */\nMaterialDatePicker.prototype.isPickedDate_ = function (currentDate) {\n    if (!this.pickedDate_) {\n        return false;\n    }\n    if (this.pickedDate_.getFullYear() !== currentDate.getFullYear()) {\n        return false;\n    }\n    if (this.pickedDate_.getMonth() !== currentDate.getMonth()) {\n        return false;\n    }\n    if (this.pickedDate_.getDate() !== currentDate.getDate()) {\n        return false;\n    }\n    return true;\n};\n/**\n   * Check if given date is in range, if range is set.\n   * @private\n   * @param  {Date} dateObject Date to check if it is in defined date range\n   * @return {boolean} Date \"in range\" state\n   */\nMaterialDatePicker.prototype.isInRange_ = function (dateObject) {\n    var isInRange = true;\n    if (this.minDate_ && !this.maxDate_) {\n        if (this.minDate_.getTime() > dateObject.getTime()) {\n            isInRange = false;\n        }\n    } else if (!this.minDate_ && this.maxDate_) {\n        if (this.maxDate_.getTime() < dateObject.getTime()) {\n            isInRange = false;\n        }\n    } else if (this.minDate_ && this.maxDate_) {\n        if (this.minDate_.getTime() <= dateObject.getTime() && dateObject.getTime() <= this.maxDate_.getTime()) {\n        } else {\n            isInRange = false;\n        }\n    }\n    return isInRange;\n};\n/**\n   * Check if given year is in range, if range is set\n   * @param  {number} year Year to check \"in range\" state\n   * @return {boolean} Year \"in range\" state\n   */\nMaterialDatePicker.prototype.isYearInRange_ = function (year) {\n    var isInRange = true;\n    if (this.minDate_ && !this.maxDate_) {\n        if (this.minDate_.getFullYear() > year) {\n            isInRange = false;\n        }\n    } else if (!this.minDate_ && this.maxDate_) {\n        if (this.maxDate_.getFullYear() < year) {\n            isInRange = false;\n        }\n    } else if (this.minDate_ && this.maxDate_) {\n        if (this.minDate_.getFullYear() <= year && year <= this.maxDate_.getFullYear()) {\n        } else {\n            isInRange = false;\n        }\n    }\n    return isInRange;\n};\n/**\n   * Change current month and rerender calendar\n   * @private\n   * @param  {Date} nextMonth Next month object\n   * @return {void}\n   */\nMaterialDatePicker.prototype.changeCurrentMonth_ = function (nextMonth) {\n    if (!nextMonth) {\n        return undefined;\n    }\n    var currentMonthElement = this.renderMonth_(nextMonth);\n    if (this.currentMonthElement_) {\n        this.calendarElement_.insertBefore(currentMonthElement, this.currentMonthElement_);\n    } else {\n        this.calendarElement_.appendChild(currentMonthElement);\n    }\n    var dateButtons = this.currentMonthElement_.querySelectorAll('.' + this.CssClasses_.DATE);\n    for (var i = 0; i < dateButtons.length; i++) {\n        var dateButton = dateButtons[i];\n        dateButton.removeEventListener('click', this.boundPickDateHandler);\n    }\n    if (this.currentMonthElement_.remove) {\n        this.currentMonthElement_.remove();\n    } else {\n        this.currentMonthElement_.parentNode.removeChild(this.currentMonthElement_);\n    }\n    this.currentMonthElement_ = currentMonthElement;\n    this.currentMonth_ = nextMonth;\n    this.updateMonthTitle_();\n};\n/**\n   * Render datepicker dialog\n   *\n   * @private\n   * @return {void}\n   */\nMaterialDatePicker.prototype.render_ = function () {\n    if (!this.widgetElement_) {\n        this.widgetElement_ = document.createElement('div');\n        this.widgetElement_.classList.add(this.CssClasses_.WIDGET);\n        // Append header element\n        this.widgetElement_.appendChild(this.renderHeader_());\n        this.widgetElement_.appendChild(this.renderCalendar_());\n        if (this.element_.classList.contains(this.CssClasses_.FIXED)) {\n            this.widgetElement_.classList.add(this.CssClasses_.IS_FIXED);\n            document.body.appendChild(this.widgetElement_);\n        } else {\n            this.element_.appendChild(this.widgetElement_);\n        }\n    }\n};\n/**\n   * Render date picker header element\n   * @private\n   * @return {Element} Date picker header element\n   */\nMaterialDatePicker.prototype.renderHeader_ = function () {\n    if (!this.headerElement_) {\n        this.headerElement_ = document.createElement('div');\n        this.headerYearElement_ = document.createElement('div');\n        this.headerDateElement_ = document.createElement('div');\n        // Add appropriate classes\n        this.headerElement_.classList.add(this.CssClasses_.HEADER);\n        this.headerYearElement_.classList.add(this.CssClasses_.HEADER_YEAR);\n        this.headerDateElement_.classList.add(this.CssClasses_.HEADER_DATE);\n        // Bind click events\n        this.boundHeaderYearClickHandler = this.headerYearClickHandler_.bind(this);\n        this.boundHeaderDateClickHandler = this.headerDateClickHandler_.bind(this);\n        this.headerYearElement_.addEventListener('click', this.boundHeaderYearClickHandler);\n        this.headerDateElement_.addEventListener('click', this.boundHeaderDateClickHandler);\n        // Assemble header element\n        this.headerElement_.appendChild(this.headerYearElement_);\n        this.headerElement_.appendChild(this.headerDateElement_);\n        // Setup initial header values\n        this.updateHeader_();\n    }\n    return this.headerElement_;\n};\n/**\n   * Update header date and year\n   *\n   * @private\n   * @return {void}\n   */\nMaterialDatePicker.prototype.updateHeader_ = function () {\n    if (this.headerYearElement_) {\n        this.headerYearElement_.innerHTML = this.pickedDate_.getFullYear();\n    }\n    if (this.headerDateElement_) {\n        this.headerDateElement_.innerHTML = this.formatHeaderDate_(this.pickedDate_);\n    }\n};\n/**\n   * Update current month title\n   * @private\n   * @return {void}\n   */\nMaterialDatePicker.prototype.updateMonthTitle_ = function () {\n    this.currentMonthTitleElement_.innerHTML = this.locales.months[this.currentMonth_.getMonth()] + ', ' + this.currentMonth_.getFullYear();\n};\n/**\n   * Update year picker current year\n   * @private\n   * @return {void}\n   */\nMaterialDatePicker.prototype.updateYearPicker_ = function () {\n    var pickedYear = this.yearPickerElement_.querySelector('.' + this.CssClasses_.YEAR_SELECTED);\n    if (pickedYear) {\n        pickedYear.classList.remove(this.CssClasses_.YEAR_SELECTED);\n    }\n    pickedYear = this.yearPickerElement_.querySelector('.' + this.CssClasses_.YEAR + '[data-year=\"' + this.pickedDate_.getFullYear() + '\"]');\n    pickedYear.classList.add(this.CssClasses_.YEAR_SELECTED);\n    var focusYear = pickedYear;\n    for (var i = 0; i < 3; i++) {\n        if (focusYear.previousElementSibling) {\n            focusYear = focusYear.previousElementSibling;\n        }\n    }\n    focusYear.parentNode.scrollTop = focusYear.offsetTop;\n};\n/**\n   * Render entire date picker content\n   * @private\n   * @return {Element} Date picker calendar element\n   */\nMaterialDatePicker.prototype.renderCalendar_ = function () {\n    if (!this.calendarElement_) {\n        this.calendarElement_ = document.createElement('div');\n        this.calendarElement_.classList.add(this.CssClasses_.CALENDAR);\n        this.calendarElement_.appendChild(this.renderNavigation_());\n        this.calendarElement_.appendChild(this.renderWeekDays_());\n        this.currentMonthElement_ = this.renderMonth_(this.currentMonth_);\n        this.calendarElement_.appendChild(this.currentMonthElement_);\n        this.calendarElement_.appendChild(this.renderYearPicker_());\n        this.calendarElement_.appendChild(this.renderActions_());\n    }\n    return this.calendarElement_;\n};\n/**\n   * Render month navigation\n   * @private\n   * @return {Element} Date picker navigation element\n   */\nMaterialDatePicker.prototype.renderNavigation_ = function () {\n    if (!this.navigationElement_) {\n        this.navigationElement_ = document.createElement('div');\n        this.navigationElement_.classList.add(this.CssClasses_.NAVIGATION);\n        var previousMonth = document.createElement('button');\n        previousMonth.setAttribute('type', 'button');\n        previousMonth.classList.add('mdl-button');\n        previousMonth.classList.add('mdl-js-button');\n        previousMonth.classList.add('mdl-button--icon');\n        previousMonth.classList.add(this.CssClasses_.MONTH_PREVIOUS);\n        var previousIcon = document.createElement('i');\n        previousIcon.classList.add('material-icons');\n        previousIcon.innerHTML = 'keyboard_arrow_left';\n        previousMonth.appendChild(previousIcon);\n        var nextMonth = document.createElement('button');\n        nextMonth.setAttribute('type', 'button');\n        nextMonth.classList.add('mdl-button');\n        nextMonth.classList.add('mdl-js-button');\n        nextMonth.classList.add('mdl-button--icon');\n        nextMonth.classList.add(this.CssClasses_.MONTH_NEXT);\n        var nextIcon = document.createElement('i');\n        nextIcon.classList.add('material-icons');\n        nextIcon.innerHTML = 'keyboard_arrow_right';\n        nextMonth.appendChild(nextIcon);\n        // Bind month change event\n        this.boundPreviousMonthHandler = this.previousMonthHandler_.bind(this);\n        this.boundNextMonthHandler = this.nextMonthHandler_.bind(this);\n        previousMonth.addEventListener('click', this.boundPreviousMonthHandler, true);\n        nextMonth.addEventListener('click', this.boundNextMonthHandler, true);\n        this.currentMonthTitleElement_ = document.createElement('div');\n        this.currentMonthTitleElement_.classList.add(this.CssClasses_.MONTH_CURRENT);\n        if (this.currentMonth_) {\n            this.updateMonthTitle_();\n        }\n        this.navigationElement_.appendChild(previousMonth);\n        this.navigationElement_.appendChild(this.currentMonthTitleElement_);\n        this.navigationElement_.appendChild(nextMonth);\n        componentHandler.upgradeElement(previousMonth);\n        componentHandler.upgradeElement(nextMonth);\n    }\n    return this.navigationElement_;\n};\n/**\n   * Render date picker week days heading\n   *\n   * @private\n   * @return {Element} Date picker week days heading element\n   */\nMaterialDatePicker.prototype.renderWeekDays_ = function () {\n    if (!this.weekDaysElement_) {\n        this.weekDaysElement_ = document.createElement('div');\n        this.weekDaysElement_.classList.add(this.CssClasses_.WEEK_DAYS);\n        var weekStart = this.locales.weekStart;\n        for (var i = 0; i <= 6; i++) {\n            var weekDay = document.createElement('button');\n            weekDay.setAttribute('type', 'button');\n            weekDay.classList.add(this.CssClasses_.DATE);\n            weekDay.classList.add(this.CssClasses_.DATE_EMPTY);\n            weekDay.innerHTML = this.locales.weekDaysLetter[weekStart];\n            this.weekDaysElement_.appendChild(weekDay);\n            weekStart += 1;\n            if (weekStart > 6) {\n                weekStart = 0;\n            }\n        }\n    }\n    return this.weekDaysElement_;\n};\n/**\n   * Render date picker weeks\n   * @param {Date} monthObject Date object from which month element will be rendered\n   * @private\n   * @return {Element} Date picker month element\n   */\nMaterialDatePicker.prototype.renderMonth_ = function (monthObject) {\n    var month = document.createElement('div');\n    month.classList.add(this.CssClasses_.MONTH);\n    var firstDay = new Date(monthObject.getTime());\n    var lastDay = new Date(monthObject.getTime());\n    var currentDay = new Date(firstDay.getTime());\n    var currentDayInt = 1;\n    // Set first day of the month\n    firstDay.setDate(1);\n    // Set last day of the month\n    lastDay.setDate(1);\n    lastDay.setMonth(lastDay.getMonth() + 1);\n    lastDay.setDate(lastDay.getDate() - 1);\n    var renderDays = true;\n    var weekStart = this.locales.weekStart;\n    while (renderDays) {\n        var week = document.createElement('div');\n        week.classList.add(this.CssClasses_.WEEK);\n        for (var i = 0; i <= 6; i++) {\n            currentDay.setDate(currentDayInt);\n            if (currentDayInt > lastDay.getDate()) {\n                renderDays = false;\n                break;\n            }\n            var weekDay = document.createElement('button');\n            weekDay.classList.add(this.CssClasses_.DATE);\n            if (currentDay.getDay() === weekStart && currentDay.getDate() <= lastDay.getDate()) {\n                weekDay.innerHTML = currentDayInt;\n                weekDay.setAttribute('data-date', currentDayInt);\n                weekDay.setAttribute('type', 'button');\n                currentDayInt++;\n                if (!this.isInRange_(currentDay)) {\n                    weekDay.classList.add(this.CssClasses_.DATE_DISABLED);\n                }\n                // Bind select date event\n                if (!weekDay.classList.contains(this.CssClasses_.DATE_DISABLED)) {\n                    if (this.isToday_(currentDay)) {\n                        weekDay.classList.add(this.CssClasses_.DATE_TODAY);\n                    }\n                    // Check if current day is selected\n                    if (this.isPickedDate_(currentDay)) {\n                        weekDay.classList.add(this.CssClasses_.DATE_SELECTED);\n                    }\n                    this.boundPickDateHandler = this.pickDateHandler_.bind(this);\n                    weekDay.addEventListener('click', this.boundPickDateHandler, true);\n                }\n            } else {\n                // Render empty date\n                weekDay.classList.add(this.CssClasses_.DATE_EMPTY);\n            }\n            weekStart += 1;\n            if (weekStart > 6) {\n                weekStart = 0;\n            }\n            week.appendChild(weekDay);\n        }\n        month.appendChild(week);\n    }\n    return month;\n};\n/**\n   * Render year picker\n   * @private\n   * @return {Element} Date picker \"year picker\" element\n   */\nMaterialDatePicker.prototype.renderYearPicker_ = function () {\n    var year;\n    var yearButton;\n    if (this.yearPickerElement_) {\n        // Year picker already rendered, just need to update state\n        var yearButtons = this.yearPickerElement_.querySelectorAll('.' + this.CssClasses_.YEAR);\n        for (var i = 0; i < yearButtons.length; i++) {\n            yearButton = null;\n            yearButton = yearButtons[i];\n            var existingYear = parseInt(yearButton.getAttribute('data-year'), 10);\n            if (this.isYearInRange_(existingYear)) {\n                if (yearButton.classList.contains(this.CssClasses_.YEAR_DISABLED)) {\n                    yearButton.classList.remove(this.CssClasses_.YEAR_DISABLED);\n                }\n                // First try remove, then add event listener again to avoid duplication\n                yearButton.removeEventListener('click', this.boundPickYearHandler);\n                yearButton.addEventListener('click', this.boundPickYearHandler);\n            } else {\n                yearButton.removeEventListener('click', this.boundPickYearHandler);\n                yearButton.classList.add(this.CssClasses_.YEAR_DISABLED);\n            }\n        }\n    } else {\n        this.yearPickerElement_ = document.createElement('div');\n        this.yearPickerElement_.classList.add(this.CssClasses_.YEAR_PICKER_ELEMENT);\n        var today = new Date();\n        var startYear = today.getFullYear() - 100;\n        var endYear = today.getFullYear() + 100;\n        this.boundPickYearHandler = this.pickYearHandler_.bind(this);\n        for (year = startYear; year <= endYear; year++) {\n            yearButton = document.createElement('button');\n            yearButton.classList.add(this.CssClasses_.YEAR);\n            yearButton.setAttribute('data-year', year);\n            yearButton.setAttribute('type', 'button');\n            yearButton.innerHTML = year;\n            if (this.isYearInRange_(year)) {\n                yearButton.addEventListener('click', this.boundPickYearHandler);\n                if (this.pickedDate_) {\n                    if (this.pickedDate_.getFullYear() === year) {\n                        yearButton.classList.add(this.CssClasses_.YEAR_SELECTED);\n                    }\n                }\n            } else {\n                yearButton.classList.add(this.CssClasses_.YEAR_DISABLED);\n            }\n            this.yearPickerElement_.appendChild(yearButton);\n        }\n    }\n    return this.yearPickerElement_;\n};\n/**\n   * Render date picker actions\n   * @private\n   * @return {Element} Date picker actions element\n   */\nMaterialDatePicker.prototype.renderActions_ = function () {\n    if (!this.actionsElement_) {\n        this.actionsElement_ = document.createElement('div');\n        this.actionsElement_.classList.add(this.CssClasses_.ACTIONS);\n        // Cancel button\n        this.cancelElement_ = document.createElement('button');\n        this.cancelElement_.classList.add('mdl-button');\n        this.cancelElement_.classList.add('mdl-js-button');\n        this.cancelElement_.classList.add('mdl-button--accent');\n        this.cancelElement_.classList.add(this.CssClasses_.ACTION_CANCEL);\n        this.cancelElement_.setAttribute('type', 'button');\n        this.cancelElement_.innerHTML = this.locales.actions.cancel || 'Cancel';\n        // OK button\n        this.okElement_ = document.createElement('button');\n        this.okElement_.classList.add('mdl-button');\n        this.okElement_.classList.add('mdl-js-button');\n        this.okElement_.classList.add('mdl-button--accent');\n        this.okElement_.classList.add(this.CssClasses_.ACTION_OK);\n        this.okElement_.setAttribute('type', 'button');\n        this.okElement_.innerHTML = this.locales.actions.ok || 'OK';\n        // Bind events\n        this.boundCancelActionHandler = this.cancelHandler_.bind(this);\n        this.boundOkActionHandler = this.okHandler_.bind(this);\n        this.cancelElement_.addEventListener('click', this.boundCancelActionHandler, true);\n        this.okElement_.addEventListener('click', this.boundOkActionHandler, true);\n        this.actionsElement_.appendChild(this.cancelElement_);\n        this.actionsElement_.appendChild(this.okElement_);\n        componentHandler.upgradeElement(this.cancelElement_);\n        componentHandler.upgradeElement(this.okElement_);\n    }\n    return this.actionsElement_;\n};\n/**\n   * Destroy all properties and widget elements\n   * @private\n   * @return {void}\n   */\nMaterialDatePicker.prototype.destroy_ = function () {\n    var i = 0;\n    if (this.yearPickerElement_) {\n        var yearButtons = this.yearPickerElement_.querySelectorAll('.' + this.CssClasses_.YEAR);\n        for (i = 0; i < yearButtons.length; i++) {\n            var yearButton = yearButtons[i];\n            yearButton.removeEventListener('click', this.boundPickYearHandler);\n        }\n    }\n    if (this.currentMonthElement_) {\n        var dateButtons = this.currentMonthElement_.querySelectorAll('.' + this.CssClasses_.DATE);\n        for (i = 0; i < dateButtons.length; i++) {\n            var dateButton = dateButtons[i];\n            dateButton.removeEventListener('click', this.boundPickDateHandler);\n        }\n    }\n    if (this.cancelElement_) {\n        componentHandler.downgradeElements(this.cancelElement_);\n        this.cancelElement_.removeEventListener('click', this.boundCancelActionHandler);\n    }\n    if (this.okElement_) {\n        componentHandler.downgradeElements(this.okElement_);\n        this.okElement_.removeEventListener('click', this.boundOkActionHandler);\n    }\n    if (this.actionsElement_) {\n        this.actionsElement_ = null;\n    }\n    if (this.navigationElement_) {\n        var previousMonth = this.navigationElement_.querySelector('.' + this.CssClasses_.MONTH_PREVIOUS);\n        var nextMonth = this.navigationElement_.querySelector('.' + this.CssClasses_.MONTH_NEXT);\n        if (previousMonth) {\n            previousMonth.removeEventListener('click', this.boundPreviousMonthHandler);\n        }\n        if (nextMonth) {\n            nextMonth.removeEventListener('click', this.boundNextMonthHandler);\n        }\n        this.navigationElement_ = null;\n    }\n    if (this.headerDateElement_) {\n        this.headerDateElement_.removeEventListener('click', this.boundHeaderDateClickHandler);\n        this.headerDateElement_ = null;\n    }\n    if (this.headerYearElement_) {\n        this.headerYearElement_.removeEventListener('click', this.boundHeaderYearClickHandler);\n        this.headerYearElement_ = null;\n    }\n    if (this.headerElement_) {\n        this.headerElement_ = null;\n    }\n    if (this.weekDaysElement_) {\n        this.weekDaysElement_ = null;\n    }\n    if (this.calendarElement_) {\n        this.calendarElement_ = null;\n    }\n    if (this.widgetElement_) {\n        if (this.widgetElement_.remove) {\n            this.widgetElement_.remove();\n        } else {\n            this.widgetElement_.parentNode.removeChild(this.widgetElement_);\n        }\n        this.widgetElement_ = null;\n    }\n};\n/**\n   * Open date picker dialog\n   * @public\n   * @return {void}\n   */\nMaterialDatePicker.prototype.open = function () {\n    // Date picker widget already opened\n    if (this.widgetElement_ && this.widgetElement_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n        return;\n    }\n    if (!this.widgetElement_) {\n        this.render_();\n    }\n    if (!this.element_.classList.contains(this.CssClasses_.IS_FOCUSED)) {\n        this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n    }\n    // Slightly delay picker show to enable animation\n    setTimeout(function () {\n        if (this.backdrop_) {\n            this.backdrop_.style.display = 'block';\n        }\n        this.widgetElement_.classList.add(this.CssClasses_.IS_VISIBLE);\n        this.element_.classList.add(this.CssClasses_.IS_VISIBLE);\n        this.triggerEvent_('open');\n    }.bind(this), 0);\n};\nMaterialDatePicker.prototype['open'] = MaterialDatePicker.prototype.open;\n/**\n   * Close date picker dialog\n   *\n   * @public\n   * @return {void}\n   */\nMaterialDatePicker.prototype.close = function () {\n    // Inline styles can't be closed.\n    // @TODO: This should be reviewed with Google guys\n    if (this.element_.classList.contains(this.CssClasses_.INLINE)) {\n        return;\n    }\n    // Date picker widget already closed\n    if (!this.widgetElement_ || !this.widgetElement_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n        return;\n    }\n    if (this.element_.classList.contains(this.CssClasses_.IS_FOCUSED)) {\n        this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n    }\n    if (this.widgetElement_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n        if (this.backdrop_) {\n            this.backdrop_.style.display = 'none';\n        }\n        this.widgetElement_.classList.remove(this.CssClasses_.IS_VISIBLE);\n        this.element_.classList.remove(this.CssClasses_.IS_VISIBLE);\n        this.triggerEvent_('close');\n        setTimeout(function () {\n            // Destroy all properties and widget elements after close\n            this.destroy_();\n        }.bind(this), 200);\n    }\n};\nMaterialDatePicker.prototype['close'] = MaterialDatePicker.prototype.close;\n/**\n   * Get selected date to datepicker\n   * @public\n   * @return {Date} Current selected date\n   */\nMaterialDatePicker.prototype.getSelectedDate = function () {\n    return this.selectedDate_;\n};\nMaterialDatePicker.prototype['getSelectedDate'] = MaterialDatePicker.prototype.getSelectedDate;\n/**\n   * Set selected date to datepicker\n   *\n   * @param  {Date} selectedDate Date object to be set as selected in picker\n   * @public\n   * @return {Date} Current selected date\n   */\nMaterialDatePicker.prototype.setSelectedDate = function (selectedDate) {\n    if (selectedDate && this.isInRange_(selectedDate)) {\n        this.pickedDate_ = selectedDate;\n        this.currentMonth_ = selectedDate;\n        this.selectedDate_ = selectedDate;\n        this.render_();\n        if (this.input_) {\n            this.input_.value = this.formatInputDate_(this.selectedDate_);\n            if (this.element_.MaterialTextfield) {\n                this.element_.MaterialTextfield.checkValidity();\n            }\n        }\n        this.element_.classList.add(this.CssClasses_.IS_DIRTY);\n    }\n    return this.getSelectedDate();\n};\nMaterialDatePicker.prototype['setSelectedDate'] = MaterialDatePicker.prototype.setSelectedDate;\n/**\n   * Set allowed date picker range. Dates outside of the range can't be selected.\n   * @param {Date} minDate Minimum date\n   * @param {Date} maxDate Maximum date\n   */\nMaterialDatePicker.prototype.setRange = function (minDate, maxDate) {\n    if (minDate && minDate instanceof Date) {\n        // Set minimum lowest possible value of the date\n        minDate.setHours(0);\n        minDate.setMinutes(0);\n        minDate.setSeconds(0);\n        minDate.setMilliseconds(0);\n    }\n    this.minDate_ = minDate || null;\n    if (maxDate && maxDate instanceof Date) {\n        // Set maximum highest possible value of the date\n        maxDate.setHours(23);\n        maxDate.setMinutes(59);\n        maxDate.setSeconds(59);\n        maxDate.setMilliseconds(999);\n    }\n    this.maxDate_ = maxDate || null;\n    // Means that widget exists and is opened\n    if (this.widgetElement_) {\n        this.changeCurrentMonth_(this.currentMonth_);\n        this.renderYearPicker_();\n    }\n};\nMaterialDatePicker.prototype['setRange'] = MaterialDatePicker.prototype.setRange;\n/**\n   * Initialize element.\n   */\nMaterialDatePicker.prototype.init = function () {\n    if (this.element_) {\n        // Load default configuration\n        this.locales = Object.create(MaterialDatePicker.locales);\n        this.input_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n        if (this.input_) {\n            if (!this.element_.getAttribute('upgraded')) {\n                componentHandler.upgradeElement(this.element_, 'MaterialTextfield');\n            }\n            // Bind input events\n            this.boundInputFocusHandler = this.inputFocusHandler_.bind(this);\n            this.boundInputBlurHandler = this.inputBlurHandler_.bind(this);\n            this.input_.addEventListener('focus', this.boundInputFocusHandler, true);\n            this.input_.addEventListener('focusout', this.boundInputBlurHandler, true);\n        }\n        // Setup properties default values.\n        this.pickedDate_ = new Date();\n        this.currentMonth_ = new Date();\n        this.selectedDate_ = null;\n        if (this.element_.classList.contains(this.CssClasses_.FIXED)) {\n            this.backdrop_ = document.createElement('div');\n            this.backdrop_.classList.add(this.CssClasses_.BACKDROP);\n            this.backdrop_.style.display = 'none';\n            this.backdrop_.setAttribute('tabindex', -1);\n            document.body.appendChild(this.backdrop_);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n            // Hide datepicker until it is fully rendered\n            this.element_.classList.remove(this.CssClasses_.IS_VISIBLE);\n            // Once rendered, show datepicker\n            this.open();\n        }\n        // Set private isInitialized_ property for internal tracking\n        this.isInitialized_ = true;\n        // Add \"is-updated\" class\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n/**\n   * Downgrade datepicker component\n   * @return {void}\n   */\nMaterialDatePicker.prototype.mdlDowngrade_ = function () {\n    if (this.input_) {\n        this.input_.removeEventListener('focus', this.boundInputFocusHandler, true);\n        this.input_.removeEventListener('focusout', this.boundInputBlurHandler, true);\n    }\n    this.destroy_();\n    if (this.backdrop_) {\n        if (this.backdrop_.remove) {\n            this.backdrop_.remove();\n        } else {\n            this.backdrop_.parentNode.removeChild(this.backdrop_);\n        }\n    }\n    // Trigger \"destroy\" event for all those who are listening\n    // for other component events\n    this.triggerEvent_('destroy');\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialDatePicker,\n    classAsString: 'MaterialDatePicker',\n    cssClass: 'mdl-js-datepicker',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Ripple MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialRipple = function MaterialRipple(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialRipple'] = MaterialRipple;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialRipple.prototype.Constant_ = {\n    INITIAL_SCALE: 'scale(0.0001, 0.0001)',\n    INITIAL_SIZE: '1px',\n    INITIAL_OPACITY: '0.4',\n    FINAL_OPACITY: '0',\n    FINAL_SCALE: ''\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialRipple.prototype.CssClasses_ = {\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE: 'mdl-ripple',\n    IS_ANIMATING: 'is-animating',\n    IS_VISIBLE: 'is-visible'\n};\n/**\n   * Handle mouse / finger down on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRipple.prototype.downHandler_ = function (event) {\n    if (!this.rippleElement_.style.width && !this.rippleElement_.style.height) {\n        var rect = this.element_.getBoundingClientRect();\n        this.boundHeight = rect.height;\n        this.boundWidth = rect.width;\n        this.rippleSize_ = Math.sqrt(rect.width * rect.width + rect.height * rect.height) * 2 + 2;\n        this.rippleElement_.style.width = this.rippleSize_ + 'px';\n        this.rippleElement_.style.height = this.rippleSize_ + 'px';\n    }\n    this.rippleElement_.classList.add(this.CssClasses_.IS_VISIBLE);\n    if (event.type === 'mousedown' && this.ignoringMouseDown_) {\n        this.ignoringMouseDown_ = false;\n    } else {\n        if (event.type === 'touchstart') {\n            this.ignoringMouseDown_ = true;\n        }\n        var frameCount = this.getFrameCount();\n        if (frameCount > 0) {\n            return;\n        }\n        this.setFrameCount(1);\n        var bound = event.currentTarget.getBoundingClientRect();\n        var x;\n        var y;\n        // Check if we are handling a keyboard click.\n        if (event.clientX === 0 && event.clientY === 0) {\n            x = Math.round(bound.width / 2);\n            y = Math.round(bound.height / 2);\n        } else {\n            var clientX = event.clientX ? event.clientX : event.touches[0].clientX;\n            var clientY = event.clientY ? event.clientY : event.touches[0].clientY;\n            x = Math.round(clientX - bound.left);\n            y = Math.round(clientY - bound.top);\n        }\n        this.setRippleXY(x, y);\n        this.setRippleStyles(true);\n        requestAnimationFrame(this.animFrameHandler.bind(this));\n    }\n};\n/**\n   * Handle mouse / finger up on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRipple.prototype.upHandler_ = function (event) {\n    // Don't fire for the artificial \"mouseup\" generated by a double-click.\n    if (event && event.detail !== 2) {\n        // Allow a repaint to occur before removing this class, so the animation\n        // shows for tap events, which seem to trigger a mouseup too soon after\n        // mousedown.\n        window.setTimeout(function () {\n            this.rippleElement_.classList.remove(this.CssClasses_.IS_VISIBLE);\n        }.bind(this), 0);\n    }\n};\n/**\n   * Initialize element.\n   */\nMaterialRipple.prototype.init = function () {\n    if (this.element_) {\n        var recentering = this.element_.classList.contains(this.CssClasses_.RIPPLE_CENTER);\n        if (!this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT_IGNORE_EVENTS)) {\n            this.rippleElement_ = this.element_.querySelector('.' + this.CssClasses_.RIPPLE);\n            this.frameCount_ = 0;\n            this.rippleSize_ = 0;\n            this.x_ = 0;\n            this.y_ = 0;\n            // Touch start produces a compat mouse down event, which would cause a\n            // second ripples. To avoid that, we use this property to ignore the first\n            // mouse down after a touch start.\n            this.ignoringMouseDown_ = false;\n            this.boundDownHandler = this.downHandler_.bind(this);\n            this.element_.addEventListener('mousedown', this.boundDownHandler);\n            this.element_.addEventListener('touchstart', this.boundDownHandler);\n            this.boundUpHandler = this.upHandler_.bind(this);\n            this.element_.addEventListener('mouseup', this.boundUpHandler);\n            this.element_.addEventListener('mouseleave', this.boundUpHandler);\n            this.element_.addEventListener('touchend', this.boundUpHandler);\n            this.element_.addEventListener('blur', this.boundUpHandler);\n            /**\n         * Getter for frameCount_.\n         * @return {number} the frame count.\n         */\n            this.getFrameCount = function () {\n                return this.frameCount_;\n            };\n            /**\n         * Setter for frameCount_.\n         * @param {number} fC the frame count.\n         */\n            this.setFrameCount = function (fC) {\n                this.frameCount_ = fC;\n            };\n            /**\n         * Getter for rippleElement_.\n         * @return {Element} the ripple element.\n         */\n            this.getRippleElement = function () {\n                return this.rippleElement_;\n            };\n            /**\n         * Sets the ripple X and Y coordinates.\n         * @param  {number} newX the new X coordinate\n         * @param  {number} newY the new Y coordinate\n         */\n            this.setRippleXY = function (newX, newY) {\n                this.x_ = newX;\n                this.y_ = newY;\n            };\n            /**\n         * Sets the ripple styles.\n         * @param  {boolean} start whether or not this is the start frame.\n         */\n            this.setRippleStyles = function (start) {\n                if (this.rippleElement_ !== null) {\n                    var transformString;\n                    var scale;\n                    var offset = 'translate(' + this.x_ + 'px, ' + this.y_ + 'px)';\n                    if (start) {\n                        scale = this.Constant_.INITIAL_SCALE;\n                    } else {\n                        scale = this.Constant_.FINAL_SCALE;\n                        if (recentering) {\n                            offset = 'translate(' + this.boundWidth / 2 + 'px, ' + this.boundHeight / 2 + 'px)';\n                        }\n                    }\n                    transformString = 'translate(-50%, -50%) ' + offset + scale;\n                    this.rippleElement_.style.webkitTransform = transformString;\n                    this.rippleElement_.style.msTransform = transformString;\n                    this.rippleElement_.style.transform = transformString;\n                    if (start) {\n                        this.rippleElement_.classList.remove(this.CssClasses_.IS_ANIMATING);\n                    } else {\n                        this.rippleElement_.classList.add(this.CssClasses_.IS_ANIMATING);\n                    }\n                }\n            };\n            /**\n         * Handles an animation frame.\n         */\n            this.animFrameHandler = function () {\n                if (this.frameCount_-- > 0) {\n                    requestAnimationFrame(this.animFrameHandler.bind(this));\n                } else {\n                    this.setRippleStyles(false);\n                }\n            };\n        }\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialRipple,\n    classAsString: 'MaterialRipple',\n    cssClass: 'mdl-js-ripple-effect',\n    widget: false\n});\n}());\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A component handler interface using the revealing module design pattern.\n * More details on this design pattern here:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n *\n * @author Jason Mayes.\n */\n/* exported componentHandler */\n\n// Pre-defining the componentHandler interface, for closure documentation and\n// static verification.\nvar componentHandler = {\n  /**\n   * Searches existing DOM for elements of our component type and upgrades them\n   * if they have not already been upgraded.\n   *\n   * @param {string=} optJsClass the programatic name of the element class we\n   * need to create a new instance of.\n   * @param {string=} optCssClass the name of the CSS class elements of this\n   * type will have.\n   */\n  upgradeDom: function(optJsClass, optCssClass) {}, // eslint-disable-line\n  /**\n   * Upgrades a specific element rather than all in the DOM.\n   *\n   * @param {!Element} element The element we wish to upgrade.\n   * @param {string=} optJsClass Optional name of the class we want to upgrade\n   * the element to.\n   */\n  upgradeElement: function(element, optJsClass) {}, // eslint-disable-line\n  /**\n   * Upgrades a specific list of elements rather than all in the DOM.\n   *\n   * @param {!Element|!Array<!Element>|!NodeList|!HTMLCollection} elements\n   * The elements we wish to upgrade.\n   */\n  upgradeElements: function(elements) {}, // eslint-disable-line\n  /**\n   * Upgrades all registered components found in the current DOM. This is\n   * automatically called on window load.\n   */\n  upgradeAllRegistered: function() {},\n  /**\n   * Allows user to be alerted to any upgrades that are performed for a given\n   * component type\n   *\n   * @param {string} jsClass The class name of the MDL component we wish\n   * to hook into for any upgrades performed.\n   * @param {function(!HTMLElement)} callback The function to call upon an\n   * upgrade. This function should expect 1 parameter - the HTMLElement which\n   * got upgraded.\n   */\n  registerUpgradedCallback: function(jsClass, callback) {}, // eslint-disable-line\n  /**\n   * Registers a class for future use and attempts to upgrade existing DOM.\n   *\n   * @param {componentHandler.ComponentConfigPublic} config the registration configuration\n   */\n  register: function(config) {}, // eslint-disable-line\n  /**\n   * Downgrade either a given node, an array of nodes, or a NodeList.\n   *\n   * @param {!Node|!Array<!Node>|!NodeList} nodes The list of nodes.\n   */\n  downgradeElements: function(nodes) {} // eslint-disable-line\n};\n\ncomponentHandler = (function() {\n  'use strict';\n\n  /** @type {!Array<componentHandler.ComponentConfig>} */\n  var registeredComponents_ = [];\n\n  /** @type {!Array<componentHandler.Component>} */\n  var createdComponents_ = [];\n\n  var componentConfigProperty_ = 'mdlComponentConfigInternal_';\n\n  /**\n   * Searches registered components for a class we are interested in using.\n   * Optionally replaces a match with passed object if specified.\n   *\n   * @param {string} name The name of a class we want to use.\n   * @param {componentHandler.ComponentConfig=} optReplace Optional object to replace match with.\n   * @return {!Object|boolean} Registered components.\n   * @private\n   */\n  function findRegisteredClass_(name, optReplace) {\n    for (var i = 0; i < registeredComponents_.length; i++) {\n      if (registeredComponents_[i].className === name) {\n        if (typeof optReplace !== 'undefined') {\n          registeredComponents_[i] = optReplace;\n        }\n        return registeredComponents_[i];\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Returns an array of the classNames of the upgraded classes on the element.\n   *\n   * @param {!Element} element The element to fetch data from.\n   * @return {!Array<string>} Array of classNames.\n   * @private\n   */\n  function getUpgradedListOfElement_(element) {\n    var dataUpgraded = element.getAttribute('data-upgraded');\n    // Use `['']` as default value to conform the `,name,name...` style.\n    return dataUpgraded === null ? [''] : dataUpgraded.split(',');\n  }\n\n  /**\n   * Returns true if the given element has already been upgraded for the given\n   * class.\n   *\n   * @param {!Element} element The element we want to check.\n   * @param {string} jsClass The class to check for.\n   * @return {boolean} Whether the element is upgraded.\n   * @private\n   */\n  function isElementUpgraded_(element, jsClass) {\n    var upgradedList = getUpgradedListOfElement_(element);\n    return upgradedList.indexOf(jsClass) !== -1;\n  }\n\n  /**\n   * Searches existing DOM for elements of our component type and upgrades them\n   * if they have not already been upgraded.\n   *\n   * @param {string=} optJsClass the programatic name of the element class we\n   * need to create a new instance of.\n   * @param {string=} optCssClass the name of the CSS class elements of this\n   * type will have.\n   */\n  function upgradeDomInternal(optJsClass, optCssClass) {\n    if (typeof optJsClass === 'undefined' &&\n        typeof optCssClass === 'undefined') {\n      for (var i = 0; i < registeredComponents_.length; i++) {\n        upgradeDomInternal(registeredComponents_[i].className,\n            registeredComponents_[i].cssClass);\n      }\n    } else {\n      var jsClass = /** @type {string} */ (optJsClass);\n      if (typeof optCssClass === 'undefined') {\n        var registeredClass = findRegisteredClass_(jsClass);\n        if (registeredClass) {\n          optCssClass = registeredClass.cssClass;\n        }\n      }\n\n      var elements = document.querySelectorAll('.' + optCssClass);\n      for (var n = 0; n < elements.length; n++) {\n        upgradeElementInternal(elements[n], jsClass);\n      }\n    }\n  }\n\n  /**\n   * Upgrades a specific element rather than all in the DOM.\n   *\n   * @param {!Element} element The element we wish to upgrade.\n   * @param {string=} optJsClass Optional name of the class we want to upgrade\n   * the element to.\n   */\n  function upgradeElementInternal(element, optJsClass) {\n    // Verify argument type.\n    if (!(typeof element === 'object' && element instanceof Element)) {\n      throw new Error('Invalid argument provided to upgrade MDL element.');\n    }\n    var upgradedList = getUpgradedListOfElement_(element);\n    var classesToUpgrade = [];\n    // If jsClass is not provided scan the registered components to find the\n    // ones matching the element's CSS classList.\n    if (!optJsClass) {\n      var classList = element.classList;\n      registeredComponents_.forEach(function(component) {\n        // Match CSS & Not to be upgraded & Not upgraded.\n        if (classList.contains(component.cssClass) &&\n            classesToUpgrade.indexOf(component) === -1 &&\n            !isElementUpgraded_(element, component.className)) {\n          classesToUpgrade.push(component);\n        }\n      });\n    } else if (!isElementUpgraded_(element, optJsClass)) {\n      classesToUpgrade.push(findRegisteredClass_(optJsClass));\n    }\n\n    // Upgrade the element for each classes.\n    for (var i = 0, n = classesToUpgrade.length, registeredClass; i < n; i++) {\n      registeredClass = classesToUpgrade[i];\n      if (registeredClass) {\n        // Mark element as upgraded.\n        upgradedList.push(registeredClass.className);\n        element.setAttribute('data-upgraded', upgradedList.join(','));\n        var instance = new registeredClass.classConstructor(element); // eslint-disable-line\n        instance[componentConfigProperty_] = registeredClass;\n        createdComponents_.push(instance);\n        // Call any callbacks the user has registered with this component type.\n        for (var j = 0, m = registeredClass.callbacks.length; j < m; j++) {\n          registeredClass.callbacks[j](element);\n        }\n\n        if (registeredClass.widget) {\n          // Assign per element instance for control over API\n          element[registeredClass.className] = instance;\n        }\n      } else {\n        throw new Error(\n          'Unable to find a registered component for the given class.');\n      }\n\n      var ev = document.createEvent('Events');\n      ev.initEvent('mdl-componentupgraded', true, true);\n      element.dispatchEvent(ev);\n    }\n  }\n\n  /**\n   * Upgrades a specific list of elements rather than all in the DOM.\n   *\n   * @param {!Element|!Array<!Element>|!NodeList|!HTMLCollection} elements\n   * The elements we wish to upgrade.\n   */\n  function upgradeElementsInternal(elements) {\n    if (!Array.isArray(elements)) {\n      if (typeof elements.item === 'function') {\n        elements = Array.prototype.slice.call(/** @type {Array} */ (elements));\n      } else {\n        elements = [elements];\n      }\n    }\n    for (var i = 0, n = elements.length, element; i < n; i++) {\n      element = elements[i];\n      if (element instanceof HTMLElement) {\n        upgradeElementInternal(element);\n        if (element.children.length > 0) {\n          upgradeElementsInternal(element.children);\n        }\n      }\n    }\n  }\n\n  /**\n   * Registers a class for future use and attempts to upgrade existing DOM.\n   *\n   * @param {componentHandler.ComponentConfigPublic} config The configuration.\n   */\n  function registerInternal(config) {\n    // In order to support both Closure-compiled and uncompiled code accessing\n    // this method, we need to allow for both the dot and array syntax for\n    // property access. You'll therefore see the `foo.bar || foo['bar']`\n    // pattern repeated across this method.\n    var widgetMissing = (typeof config.widget === 'undefined' &&\n        typeof config['widget'] === 'undefined');\n    var widget = true;\n\n    if (!widgetMissing) {\n      widget = config.widget || config['widget'];\n    }\n\n    var newConfig = /** @type {componentHandler.ComponentConfig} */ ({\n      classConstructor: config.constructor || config['constructor'],\n      className: config.classAsString || config['classAsString'],\n      cssClass: config.cssClass || config['cssClass'],\n      widget: widget,\n      callbacks: []\n    });\n\n    registeredComponents_.forEach(function(item) {\n      if (item.cssClass === newConfig.cssClass) {\n        throw new Error('The provided cssClass has already been registered: ' +\n            item.cssClass);\n      }\n      if (item.className === newConfig.className) {\n        throw new Error('The provided className has already been registered');\n      }\n    });\n\n    if (config.constructor.prototype\n        .hasOwnProperty(componentConfigProperty_)) {\n      throw new Error(\n          'MDL component classes must not have ' + componentConfigProperty_ +\n          ' defined as a property.');\n    }\n\n    var found = findRegisteredClass_(config.classAsString, newConfig);\n\n    if (!found) {\n      registeredComponents_.push(newConfig);\n    }\n  }\n\n  /**\n   * Allows user to be alerted to any upgrades that are performed for a given\n   * component type\n   *\n   * @param {string} jsClass The class name of the MDL component we wish\n   * to hook into for any upgrades performed.\n   * @param {function(!HTMLElement)} callback The function to call upon an\n   * upgrade. This function should expect 1 parameter - the HTMLElement which\n   * got upgraded.\n   */\n  function registerUpgradedCallbackInternal(jsClass, callback) {\n    var regClass = findRegisteredClass_(jsClass);\n    if (regClass) {\n      regClass.callbacks.push(callback);\n    }\n  }\n\n  /**\n   * Upgrades all registered components found in the current DOM. This is\n   * automatically called on window load.\n   */\n  function upgradeAllRegisteredInternal() {\n    for (var n = 0; n < registeredComponents_.length; n++) {\n      upgradeDomInternal(registeredComponents_[n].className);\n    }\n  }\n\n  /**\n   * Check the component for the downgrade method.\n   * Execute if found.\n   * Remove component from createdComponents list.\n   *\n   * @param {?componentHandler.Component} component The component to downgrade.\n   */\n  function deconstructComponentInternal(component) {\n    if (component) {\n      var componentIndex = createdComponents_.indexOf(component);\n      createdComponents_.splice(componentIndex, 1);\n\n      var upgrades =\n          component.element_.getAttribute('data-upgraded').split(',');\n      var componentPlace =\n          upgrades.indexOf(component[componentConfigProperty_].classAsString);\n      upgrades.splice(componentPlace, 1);\n      component.element_.setAttribute('data-upgraded', upgrades.join(','));\n\n      var ev = document.createEvent('Events');\n      ev.initEvent('mdl-componentdowngraded', true, true);\n      component.element_.dispatchEvent(ev);\n    }\n  }\n\n  /**\n   * Downgrade either a given node, an array of nodes, or a NodeList.\n   *\n   * @param {!Node|!Array<!Node>|!NodeList} nodes The list of nodes.\n   */\n  function downgradeNodesInternal(nodes) {\n    /**\n     * Auxiliary function to downgrade a single node.\n     * @param  {!Node} node the node to be downgraded\n     */\n    var downgradeNode = function(node) {\n      createdComponents_.filter(function(item) {\n        return item.element_ === node;\n      }).forEach(deconstructComponentInternal);\n    };\n    if (nodes instanceof Array || nodes instanceof NodeList) {\n      for (var n = 0; n < nodes.length; n++) {\n        downgradeNode(nodes[n]);\n      }\n    } else if (nodes instanceof Node) {\n      downgradeNode(nodes);\n    } else {\n      throw new Error('Invalid argument provided to downgrade MDL nodes.');\n    }\n  }\n\n  // Now return the functions that should be made public with their publicly\n  // facing names...\n  return {\n    upgradeDom: upgradeDomInternal,\n    upgradeElement: upgradeElementInternal,\n    upgradeElements: upgradeElementsInternal,\n    upgradeAllRegistered: upgradeAllRegisteredInternal,\n    registerUpgradedCallback: registerUpgradedCallbackInternal,\n    register: registerInternal,\n    downgradeElements: downgradeNodesInternal\n  };\n})();\n\n/**\n * Describes the type of a registered component type managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   constructor: Function,\n *   classAsString: string,\n *   cssClass: string,\n *   widget: (string|boolean|undefined)\n * }}\n */\ncomponentHandler.ComponentConfigPublic; // eslint-disable-line\n\n/**\n * Describes the type of a registered component type managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   constructor: !Function,\n *   className: string,\n *   cssClass: string,\n *   widget: (string|boolean),\n *   callbacks: !Array<function(!HTMLElement)>\n * }}\n */\ncomponentHandler.ComponentConfig; // eslint-disable-line\n\n/**\n * Created component (i.e., upgraded element) type as managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   element_: !HTMLElement,\n *   className: string,\n *   classAsString: string,\n *   cssClass: string,\n *   widget: string\n * }}\n */\ncomponentHandler.Component; // eslint-disable-line\n\n// Export all symbols, for the benefit of Closure compiler.\n// No effect on uncompiled code.\ncomponentHandler['upgradeDom'] = componentHandler.upgradeDom;\ncomponentHandler['upgradeElement'] = componentHandler.upgradeElement;\ncomponentHandler['upgradeElements'] = componentHandler.upgradeElements;\ncomponentHandler['upgradeAllRegistered'] =\n    componentHandler.upgradeAllRegistered;\ncomponentHandler['registerUpgradedCallback'] =\n    componentHandler.registerUpgradedCallback;\ncomponentHandler['register'] = componentHandler.register;\ncomponentHandler['downgradeElements'] = componentHandler.downgradeElements;\nwindow.componentHandler = componentHandler;\nwindow['componentHandler'] = componentHandler;\n\nwindow.addEventListener('load', function() {\n  'use strict';\n\n  /**\n   * Performs a \"Cutting the mustard\" test. If the browser supports the features\n   * tested, adds a mdl-js class to the <html> element. It then upgrades all MDL\n   * components requiring JavaScript.\n   */\n  if (\n      'classList' in document.documentElement &&\n      'querySelector' in document &&\n      'addEventListener' in window &&\n      'forEach' in Array.prototype) {\n    document.documentElement.classList.add('mdl-js');\n    componentHandler.upgradeAllRegistered();\n  } else {\n    /**\n     * Dummy function to avoid JS errors.\n     */\n    componentHandler.upgradeElement = function() {};\n    /**\n     * Dummy function to avoid JS errors.\n     */\n    componentHandler.register = function() {};\n  }\n});\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Tabs MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {Element} element The element that will be upgraded.\n   */\nvar MaterialTabs = function MaterialTabs(element) {\n    // Stores the HTML element.\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialTabs'] = MaterialTabs;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialTabs.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialTabs.prototype.CssClasses_ = {\n    TAB_CLASS: 'mdl-tabs__tab',\n    PANEL_CLASS: 'mdl-tabs__panel',\n    ACTIVE_CLASS: 'is-active',\n    UPGRADED_CLASS: 'is-upgraded',\n    MDL_JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    MDL_RIPPLE_CONTAINER: 'mdl-tabs__ripple-container',\n    MDL_RIPPLE: 'mdl-ripple',\n    MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events'\n};\n/**\n   * Handle clicks to a tabs component\n   *\n   * @private\n   */\nMaterialTabs.prototype.initTabs_ = function () {\n    if (this.element_.classList.contains(this.CssClasses_.MDL_JS_RIPPLE_EFFECT)) {\n        this.element_.classList.add(this.CssClasses_.MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS);\n    }\n    // Select element tabs, document panels\n    this.tabs_ = this.element_.querySelectorAll('.' + this.CssClasses_.TAB_CLASS);\n    this.panels_ = this.element_.querySelectorAll('.' + this.CssClasses_.PANEL_CLASS);\n    // Create new tabs for each tab element\n    for (var i = 0; i < this.tabs_.length; i++) {\n        new MaterialTab(this.tabs_[i], this);\n    }\n    this.element_.classList.add(this.CssClasses_.UPGRADED_CLASS);\n};\n/**\n   * Reset tab state, dropping active classes\n   *\n   * @private\n   */\nMaterialTabs.prototype.resetTabState_ = function () {\n    for (var k = 0; k < this.tabs_.length; k++) {\n        this.tabs_[k].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n    }\n};\n/**\n   * Reset panel state, droping active classes\n   *\n   * @private\n   */\nMaterialTabs.prototype.resetPanelState_ = function () {\n    for (var j = 0; j < this.panels_.length; j++) {\n        this.panels_[j].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n    }\n};\n/**\n   * Initialize element.\n   */\nMaterialTabs.prototype.init = function () {\n    if (this.element_) {\n        this.initTabs_();\n    }\n};\n/**\n   * Constructor for an individual tab.\n   *\n   * @constructor\n   * @param {Element} tab The HTML element for the tab.\n   * @param {MaterialTabs} ctx The MaterialTabs object that owns the tab.\n   */\nfunction MaterialTab(tab, ctx) {\n    if (tab) {\n        if (ctx.element_.classList.contains(ctx.CssClasses_.MDL_JS_RIPPLE_EFFECT)) {\n            var rippleContainer = document.createElement('span');\n            rippleContainer.classList.add(ctx.CssClasses_.MDL_RIPPLE_CONTAINER);\n            rippleContainer.classList.add(ctx.CssClasses_.MDL_JS_RIPPLE_EFFECT);\n            var ripple = document.createElement('span');\n            ripple.classList.add(ctx.CssClasses_.MDL_RIPPLE);\n            rippleContainer.appendChild(ripple);\n            tab.appendChild(rippleContainer);\n        }\n        tab.addEventListener('click', function (e) {\n            e.preventDefault();\n            var href = tab.href.split('#')[1];\n            var panel = ctx.element_.querySelector('#' + href);\n            ctx.resetTabState_();\n            ctx.resetPanelState_();\n            tab.classList.add(ctx.CssClasses_.ACTIVE_CLASS);\n            panel.classList.add(ctx.CssClasses_.ACTIVE_CLASS);\n        });\n    }\n}\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialTabs,\n    classAsString: 'MaterialTabs',\n    cssClass: 'mdl-js-tabs'\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Layout MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialLayout = function MaterialLayout(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialLayout'] = MaterialLayout;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialLayout.prototype.Constant_ = {\n    MAX_WIDTH: '(max-width: 1024px)',\n    TAB_SCROLL_PIXELS: 100,\n    RESIZE_TIMEOUT: 100,\n    MENU_ICON: '&#xE5D2;',\n    CHEVRON_LEFT: 'chevron_left',\n    CHEVRON_RIGHT: 'chevron_right'\n};\n/**\n   * Keycodes, for code readability.\n   *\n   * @enum {number}\n   * @private\n   */\nMaterialLayout.prototype.Keycodes_ = {\n    ENTER: 13,\n    ESCAPE: 27,\n    SPACE: 32\n};\n/**\n   * Modes.\n   *\n   * @enum {number}\n   * @private\n   */\nMaterialLayout.prototype.Mode_ = {\n    STANDARD: 0,\n    SEAMED: 1,\n    WATERFALL: 2,\n    SCROLL: 3\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialLayout.prototype.CssClasses_ = {\n    CONTAINER: 'mdl-layout__container',\n    HEADER: 'mdl-layout__header',\n    DRAWER: 'mdl-layout__drawer',\n    CONTENT: 'mdl-layout__content',\n    DRAWER_BTN: 'mdl-layout__drawer-button',\n    ICON: 'material-icons',\n    JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_CONTAINER: 'mdl-layout__tab-ripple-container',\n    RIPPLE: 'mdl-ripple',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    HEADER_SEAMED: 'mdl-layout__header--seamed',\n    HEADER_WATERFALL: 'mdl-layout__header--waterfall',\n    HEADER_SCROLL: 'mdl-layout__header--scroll',\n    FIXED_HEADER: 'mdl-layout--fixed-header',\n    OBFUSCATOR: 'mdl-layout__obfuscator',\n    TAB_BAR: 'mdl-layout__tab-bar',\n    TAB_CONTAINER: 'mdl-layout__tab-bar-container',\n    TAB: 'mdl-layout__tab',\n    TAB_BAR_BUTTON: 'mdl-layout__tab-bar-button',\n    TAB_BAR_LEFT_BUTTON: 'mdl-layout__tab-bar-left-button',\n    TAB_BAR_RIGHT_BUTTON: 'mdl-layout__tab-bar-right-button',\n    PANEL: 'mdl-layout__tab-panel',\n    HAS_DRAWER: 'has-drawer',\n    HAS_TABS: 'has-tabs',\n    HAS_SCROLLING_HEADER: 'has-scrolling-header',\n    CASTING_SHADOW: 'is-casting-shadow',\n    IS_COMPACT: 'is-compact',\n    IS_SMALL_SCREEN: 'is-small-screen',\n    IS_DRAWER_OPEN: 'is-visible',\n    IS_ACTIVE: 'is-active',\n    IS_UPGRADED: 'is-upgraded',\n    IS_ANIMATING: 'is-animating',\n    ON_LARGE_SCREEN: 'mdl-layout--large-screen-only',\n    ON_SMALL_SCREEN: 'mdl-layout--small-screen-only'\n};\n/**\n   * Handles scrolling on the content.\n   *\n   * @private\n   */\nMaterialLayout.prototype.contentScrollHandler_ = function () {\n    if (this.header_.classList.contains(this.CssClasses_.IS_ANIMATING)) {\n        return;\n    }\n    var headerVisible = !this.element_.classList.contains(this.CssClasses_.IS_SMALL_SCREEN) || this.element_.classList.contains(this.CssClasses_.FIXED_HEADER);\n    if (this.content_.scrollTop > 0 && !this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n        this.header_.classList.add(this.CssClasses_.CASTING_SHADOW);\n        this.header_.classList.add(this.CssClasses_.IS_COMPACT);\n        if (headerVisible) {\n            this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n        }\n    } else if (this.content_.scrollTop <= 0 && this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n        this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n        this.header_.classList.remove(this.CssClasses_.IS_COMPACT);\n        if (headerVisible) {\n            this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n        }\n    }\n};\n/**\n   * Handles a keyboard event on the drawer.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialLayout.prototype.keyboardEventHandler_ = function (evt) {\n    // Only react when the drawer is open.\n    if (evt.keyCode === this.Keycodes_.ESCAPE && this.drawer_.classList.contains(this.CssClasses_.IS_DRAWER_OPEN)) {\n        this.toggleDrawer();\n    }\n};\n/**\n   * Handles changes in screen size.\n   *\n   * @private\n   */\nMaterialLayout.prototype.screenSizeHandler_ = function () {\n    if (this.screenSizeMediaQuery_.matches) {\n        this.element_.classList.add(this.CssClasses_.IS_SMALL_SCREEN);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_SMALL_SCREEN);\n        // Collapse drawer (if any) when moving to a large screen size.\n        if (this.drawer_) {\n            this.drawer_.classList.remove(this.CssClasses_.IS_DRAWER_OPEN);\n            this.obfuscator_.classList.remove(this.CssClasses_.IS_DRAWER_OPEN);\n        }\n    }\n};\n/**\n   * Handles events of drawer button.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialLayout.prototype.drawerToggleHandler_ = function (evt) {\n    if (evt && evt.type === 'keydown') {\n        if (evt.keyCode === this.Keycodes_.SPACE || evt.keyCode === this.Keycodes_.ENTER) {\n            // prevent scrolling in drawer nav\n            evt.preventDefault();\n        } else {\n            // prevent other keys\n            return;\n        }\n    }\n    this.toggleDrawer();\n};\n/**\n   * Handles (un)setting the `is-animating` class\n   *\n   * @private\n   */\nMaterialLayout.prototype.headerTransitionEndHandler_ = function () {\n    this.header_.classList.remove(this.CssClasses_.IS_ANIMATING);\n};\n/**\n   * Handles expanding the header on click\n   *\n   * @private\n   */\nMaterialLayout.prototype.headerClickHandler_ = function () {\n    if (this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n        this.header_.classList.remove(this.CssClasses_.IS_COMPACT);\n        this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n    }\n};\n/**\n   * Reset tab state, dropping active classes\n   *\n   * @param {NodeList} tabs The tabs to reset.\n   * @private\n   */\nMaterialLayout.prototype.resetTabState_ = function (tabs) {\n    for (var k = 0; k < tabs.length; k++) {\n        tabs[k].classList.remove(this.CssClasses_.IS_ACTIVE);\n    }\n};\n/**\n   * Reset panel state, droping active classes\n   *\n   * @param {NodeList} panels The panels to reset.\n   * @private\n   */\nMaterialLayout.prototype.resetPanelState_ = function (panels) {\n    for (var j = 0; j < panels.length; j++) {\n        panels[j].classList.remove(this.CssClasses_.IS_ACTIVE);\n    }\n};\n/**\n  * Toggle drawer state\n  *\n  * @public\n  */\nMaterialLayout.prototype.toggleDrawer = function () {\n    var drawerButton = this.element_.querySelector('.' + this.CssClasses_.DRAWER_BTN);\n    this.drawer_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN);\n    this.obfuscator_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN);\n    // Set accessibility properties.\n    if (this.drawer_.classList.contains(this.CssClasses_.IS_DRAWER_OPEN)) {\n        this.drawer_.setAttribute('aria-hidden', 'false');\n        drawerButton.setAttribute('aria-expanded', 'true');\n    } else {\n        this.drawer_.setAttribute('aria-hidden', 'true');\n        drawerButton.setAttribute('aria-expanded', 'false');\n    }\n};\nMaterialLayout.prototype['toggleDrawer'] = MaterialLayout.prototype.toggleDrawer;\n/**\n   * Initialize element.\n   */\nMaterialLayout.prototype.init = function () {\n    if (this.element_) {\n        var container = document.createElement('div');\n        container.classList.add(this.CssClasses_.CONTAINER);\n        var focusedElement = this.element_.querySelector(':focus');\n        this.element_.parentElement.insertBefore(container, this.element_);\n        this.element_.parentElement.removeChild(this.element_);\n        container.appendChild(this.element_);\n        if (focusedElement) {\n            focusedElement.focus();\n        }\n        var directChildren = this.element_.childNodes;\n        var numChildren = directChildren.length;\n        for (var c = 0; c < numChildren; c++) {\n            var child = directChildren[c];\n            if (child.classList && child.classList.contains(this.CssClasses_.HEADER)) {\n                this.header_ = child;\n            }\n            if (child.classList && child.classList.contains(this.CssClasses_.DRAWER)) {\n                this.drawer_ = child;\n            }\n            if (child.classList && child.classList.contains(this.CssClasses_.CONTENT)) {\n                this.content_ = child;\n            }\n        }\n        window.addEventListener('pageshow', function (e) {\n            if (e.persisted) {\n                // when page is loaded from back/forward cache\n                // trigger repaint to let layout scroll in safari\n                this.element_.style.overflowY = 'hidden';\n                requestAnimationFrame(function () {\n                    this.element_.style.overflowY = '';\n                }.bind(this));\n            }\n        }.bind(this), false);\n        if (this.header_) {\n            this.tabBar_ = this.header_.querySelector('.' + this.CssClasses_.TAB_BAR);\n        }\n        var mode = this.Mode_.STANDARD;\n        if (this.header_) {\n            if (this.header_.classList.contains(this.CssClasses_.HEADER_SEAMED)) {\n                mode = this.Mode_.SEAMED;\n            } else if (this.header_.classList.contains(this.CssClasses_.HEADER_WATERFALL)) {\n                mode = this.Mode_.WATERFALL;\n                this.header_.addEventListener('transitionend', this.headerTransitionEndHandler_.bind(this));\n                this.header_.addEventListener('click', this.headerClickHandler_.bind(this));\n            } else if (this.header_.classList.contains(this.CssClasses_.HEADER_SCROLL)) {\n                mode = this.Mode_.SCROLL;\n                container.classList.add(this.CssClasses_.HAS_SCROLLING_HEADER);\n            }\n            if (mode === this.Mode_.STANDARD) {\n                this.header_.classList.add(this.CssClasses_.CASTING_SHADOW);\n                if (this.tabBar_) {\n                    this.tabBar_.classList.add(this.CssClasses_.CASTING_SHADOW);\n                }\n            } else if (mode === this.Mode_.SEAMED || mode === this.Mode_.SCROLL) {\n                this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n                if (this.tabBar_) {\n                    this.tabBar_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n                }\n            } else if (mode === this.Mode_.WATERFALL) {\n                // Add and remove shadows depending on scroll position.\n                // Also add/remove auxiliary class for styling of the compact version of\n                // the header.\n                this.content_.addEventListener('scroll', this.contentScrollHandler_.bind(this));\n                this.contentScrollHandler_();\n            }\n        }\n        // Add drawer toggling button to our layout, if we have an openable drawer.\n        if (this.drawer_) {\n            var drawerButton = this.element_.querySelector('.' + this.CssClasses_.DRAWER_BTN);\n            if (!drawerButton) {\n                drawerButton = document.createElement('div');\n                drawerButton.setAttribute('aria-expanded', 'false');\n                drawerButton.setAttribute('role', 'button');\n                drawerButton.setAttribute('tabindex', '0');\n                drawerButton.classList.add(this.CssClasses_.DRAWER_BTN);\n                var drawerButtonIcon = document.createElement('i');\n                drawerButtonIcon.classList.add(this.CssClasses_.ICON);\n                drawerButtonIcon.innerHTML = this.Constant_.MENU_ICON;\n                drawerButton.appendChild(drawerButtonIcon);\n            }\n            if (this.drawer_.classList.contains(this.CssClasses_.ON_LARGE_SCREEN)) {\n                // If drawer has ON_LARGE_SCREEN class then add it to the drawer toggle button as well.\n                drawerButton.classList.add(this.CssClasses_.ON_LARGE_SCREEN);\n            } else if (this.drawer_.classList.contains(this.CssClasses_.ON_SMALL_SCREEN)) {\n                // If drawer has ON_SMALL_SCREEN class then add it to the drawer toggle button as well.\n                drawerButton.classList.add(this.CssClasses_.ON_SMALL_SCREEN);\n            }\n            drawerButton.addEventListener('click', this.drawerToggleHandler_.bind(this));\n            drawerButton.addEventListener('keydown', this.drawerToggleHandler_.bind(this));\n            // Add a class if the layout has a drawer, for altering the left padding.\n            // Adds the HAS_DRAWER to the elements since this.header_ may or may\n            // not be present.\n            this.element_.classList.add(this.CssClasses_.HAS_DRAWER);\n            // If we have a fixed header, add the button to the header rather than\n            // the layout.\n            if (this.element_.classList.contains(this.CssClasses_.FIXED_HEADER)) {\n                this.header_.insertBefore(drawerButton, this.header_.firstChild);\n            } else {\n                this.element_.insertBefore(drawerButton, this.content_);\n            }\n            var obfuscator = document.createElement('div');\n            obfuscator.classList.add(this.CssClasses_.OBFUSCATOR);\n            this.element_.appendChild(obfuscator);\n            obfuscator.addEventListener('click', this.drawerToggleHandler_.bind(this));\n            this.obfuscator_ = obfuscator;\n            this.drawer_.addEventListener('keydown', this.keyboardEventHandler_.bind(this));\n            this.drawer_.setAttribute('aria-hidden', 'true');\n        }\n        // Keep an eye on screen size, and add/remove auxiliary class for styling\n        // of small screens.\n        this.screenSizeMediaQuery_ = window.matchMedia(this.Constant_.MAX_WIDTH);\n        this.screenSizeMediaQuery_.addListener(this.screenSizeHandler_.bind(this));\n        this.screenSizeHandler_();\n        // Initialize tabs, if any.\n        if (this.header_ && this.tabBar_) {\n            this.element_.classList.add(this.CssClasses_.HAS_TABS);\n            var tabContainer = document.createElement('div');\n            tabContainer.classList.add(this.CssClasses_.TAB_CONTAINER);\n            this.header_.insertBefore(tabContainer, this.tabBar_);\n            this.header_.removeChild(this.tabBar_);\n            var leftButton = document.createElement('div');\n            leftButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);\n            leftButton.classList.add(this.CssClasses_.TAB_BAR_LEFT_BUTTON);\n            var leftButtonIcon = document.createElement('i');\n            leftButtonIcon.classList.add(this.CssClasses_.ICON);\n            leftButtonIcon.textContent = this.Constant_.CHEVRON_LEFT;\n            leftButton.appendChild(leftButtonIcon);\n            leftButton.addEventListener('click', function () {\n                this.tabBar_.scrollLeft -= this.Constant_.TAB_SCROLL_PIXELS;\n            }.bind(this));\n            var rightButton = document.createElement('div');\n            rightButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);\n            rightButton.classList.add(this.CssClasses_.TAB_BAR_RIGHT_BUTTON);\n            var rightButtonIcon = document.createElement('i');\n            rightButtonIcon.classList.add(this.CssClasses_.ICON);\n            rightButtonIcon.textContent = this.Constant_.CHEVRON_RIGHT;\n            rightButton.appendChild(rightButtonIcon);\n            rightButton.addEventListener('click', function () {\n                this.tabBar_.scrollLeft += this.Constant_.TAB_SCROLL_PIXELS;\n            }.bind(this));\n            tabContainer.appendChild(leftButton);\n            tabContainer.appendChild(this.tabBar_);\n            tabContainer.appendChild(rightButton);\n            // Add and remove tab buttons depending on scroll position and total\n            // window size.\n            var tabUpdateHandler = function () {\n                if (this.tabBar_.scrollLeft > 0) {\n                    leftButton.classList.add(this.CssClasses_.IS_ACTIVE);\n                } else {\n                    leftButton.classList.remove(this.CssClasses_.IS_ACTIVE);\n                }\n                if (this.tabBar_.scrollLeft < this.tabBar_.scrollWidth - this.tabBar_.offsetWidth) {\n                    rightButton.classList.add(this.CssClasses_.IS_ACTIVE);\n                } else {\n                    rightButton.classList.remove(this.CssClasses_.IS_ACTIVE);\n                }\n            }.bind(this);\n            this.tabBar_.addEventListener('scroll', tabUpdateHandler);\n            tabUpdateHandler();\n            // Update tabs when the window resizes.\n            var windowResizeHandler = function () {\n                // Use timeouts to make sure it doesn't happen too often.\n                if (this.resizeTimeoutId_) {\n                    clearTimeout(this.resizeTimeoutId_);\n                }\n                this.resizeTimeoutId_ = setTimeout(function () {\n                    tabUpdateHandler();\n                    this.resizeTimeoutId_ = null;\n                }.bind(this), this.Constant_.RESIZE_TIMEOUT);\n            }.bind(this);\n            window.addEventListener('resize', windowResizeHandler);\n            if (this.tabBar_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {\n                this.tabBar_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            }\n            // Select element tabs, document panels\n            var tabs = this.tabBar_.querySelectorAll('.' + this.CssClasses_.TAB);\n            var panels = this.content_.querySelectorAll('.' + this.CssClasses_.PANEL);\n            // Create new tabs for each tab element\n            for (var i = 0; i < tabs.length; i++) {\n                new MaterialLayoutTab(tabs[i], tabs, panels, this);\n            }\n        }\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n/**\n   * Constructor for an individual tab.\n   *\n   * @constructor\n   * @param {HTMLElement} tab The HTML element for the tab.\n   * @param {!NodeList} tabs Array with HTML elements for all tabs.\n   * @param {!NodeList} panels Array with HTML elements for all panels.\n   * @param {MaterialLayout} layout The MaterialLayout object that owns the tab.\n   */\nfunction MaterialLayoutTab(tab, tabs, panels, layout) {\n    /**\n     * Auxiliary method to programmatically select a tab in the UI.\n     */\n    function selectTab() {\n        var href = tab.href.split('#')[1];\n        var panel = layout.content_.querySelector('#' + href);\n        layout.resetTabState_(tabs);\n        layout.resetPanelState_(panels);\n        tab.classList.add(layout.CssClasses_.IS_ACTIVE);\n        panel.classList.add(layout.CssClasses_.IS_ACTIVE);\n    }\n    if (layout.tabBar_.classList.contains(layout.CssClasses_.JS_RIPPLE_EFFECT)) {\n        var rippleContainer = document.createElement('span');\n        rippleContainer.classList.add(layout.CssClasses_.RIPPLE_CONTAINER);\n        rippleContainer.classList.add(layout.CssClasses_.JS_RIPPLE_EFFECT);\n        var ripple = document.createElement('span');\n        ripple.classList.add(layout.CssClasses_.RIPPLE);\n        rippleContainer.appendChild(ripple);\n        tab.appendChild(rippleContainer);\n    }\n    tab.addEventListener('click', function (e) {\n        if (tab.getAttribute('href').charAt(0) === '#') {\n            e.preventDefault();\n            selectTab();\n        }\n    });\n    tab.show = selectTab;\n    tab.addEventListener('click', function (e) {\n        e.preventDefault();\n        var href = tab.href.split('#')[1];\n        var panel = layout.content_.querySelector('#' + href);\n        layout.resetTabState_(tabs);\n        layout.resetPanelState_(panels);\n        tab.classList.add(layout.CssClasses_.IS_ACTIVE);\n        panel.classList.add(layout.CssClasses_.IS_ACTIVE);\n    });\n}\nwindow['MaterialLayoutTab'] = MaterialLayoutTab;\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialLayout,\n    classAsString: 'MaterialLayout',\n    cssClass: 'mdl-js-layout'\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Button MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialButton = function MaterialButton(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialButton'] = MaterialButton;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialButton.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialButton.prototype.CssClasses_ = {\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_CONTAINER: 'mdl-button__ripple-container',\n    RIPPLE: 'mdl-ripple'\n};\n/**\n   * Handle blur of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialButton.prototype.blurHandler_ = function (event) {\n    if (event) {\n        this.element_.blur();\n    }\n};\n// Public methods.\n/**\n   * Disable button.\n   *\n   * @public\n   */\nMaterialButton.prototype.disable = function () {\n    this.element_.disabled = true;\n};\nMaterialButton.prototype['disable'] = MaterialButton.prototype.disable;\n/**\n   * Enable button.\n   *\n   * @public\n   */\nMaterialButton.prototype.enable = function () {\n    this.element_.disabled = false;\n};\nMaterialButton.prototype['enable'] = MaterialButton.prototype.enable;\n/**\n   * Initialize element.\n   */\nMaterialButton.prototype.init = function () {\n    if (this.element_) {\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            var rippleContainer = document.createElement('span');\n            rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            this.rippleElement_ = document.createElement('span');\n            this.rippleElement_.classList.add(this.CssClasses_.RIPPLE);\n            rippleContainer.appendChild(this.rippleElement_);\n            this.boundRippleBlurHandler = this.blurHandler_.bind(this);\n            this.rippleElement_.addEventListener('mouseup', this.boundRippleBlurHandler);\n            this.element_.appendChild(rippleContainer);\n        }\n        this.boundButtonBlurHandler = this.blurHandler_.bind(this);\n        this.element_.addEventListener('mouseup', this.boundButtonBlurHandler);\n        this.element_.addEventListener('mouseleave', this.boundButtonBlurHandler);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialButton,\n    classAsString: 'MaterialButton',\n    cssClass: 'mdl-js-button',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Checkbox MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialCheckbox = function MaterialCheckbox(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialCheckbox'] = MaterialCheckbox;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialCheckbox.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialCheckbox.prototype.CssClasses_ = {\n    INPUT: 'mdl-checkbox__input',\n    BOX_OUTLINE: 'mdl-checkbox__box-outline',\n    FOCUS_HELPER: 'mdl-checkbox__focus-helper',\n    TICK_OUTLINE: 'mdl-checkbox__tick-outline',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-checkbox__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked',\n    IS_UPGRADED: 'is-upgraded'\n};\n/**\n   * Handle change of state.\n   *\n   * @private\n   */\nMaterialCheckbox.prototype.onChange_ = function () {\n    this.updateClasses_();\n};\n/**\n   * Handle focus of element.\n   *\n   * @private\n   */\nMaterialCheckbox.prototype.onFocus_ = function () {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus of element.\n   *\n   * @private\n   */\nMaterialCheckbox.prototype.onBlur_ = function () {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle mouseup.\n   *\n   * @private\n   */\nMaterialCheckbox.prototype.onMouseUp_ = function () {\n    this.blur_();\n};\n/**\n   * Handle class updates.\n   *\n   * @private\n   */\nMaterialCheckbox.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n};\n/**\n   * Add blur.\n   *\n   * @private\n   */\nMaterialCheckbox.prototype.blur_ = function () {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n        this.inputElement_.blur();\n    }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n// Public methods.\n/**\n   * Check the inputs toggle state and update display.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.checkToggleState = function () {\n    if (this.inputElement_.checked) {\n        this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n};\nMaterialCheckbox.prototype['checkToggleState'] = MaterialCheckbox.prototype.checkToggleState;\n/**\n   * Check the inputs disabled state and update display.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.checkDisabled = function () {\n    if (this.inputElement_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\nMaterialCheckbox.prototype['checkDisabled'] = MaterialCheckbox.prototype.checkDisabled;\n/**\n   * Disable checkbox.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.disable = function () {\n    this.inputElement_.disabled = true;\n    this.updateClasses_();\n};\nMaterialCheckbox.prototype['disable'] = MaterialCheckbox.prototype.disable;\n/**\n   * Enable checkbox.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.enable = function () {\n    this.inputElement_.disabled = false;\n    this.updateClasses_();\n};\nMaterialCheckbox.prototype['enable'] = MaterialCheckbox.prototype.enable;\n/**\n   * Check checkbox.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.check = function () {\n    this.inputElement_.checked = true;\n    this.updateClasses_();\n};\nMaterialCheckbox.prototype['check'] = MaterialCheckbox.prototype.check;\n/**\n   * Uncheck checkbox.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.uncheck = function () {\n    this.inputElement_.checked = false;\n    this.updateClasses_();\n};\nMaterialCheckbox.prototype['uncheck'] = MaterialCheckbox.prototype.uncheck;\n/**\n   * Initialize element.\n   */\nMaterialCheckbox.prototype.init = function () {\n    if (this.element_) {\n        this.inputElement_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n        var boxOutline = document.createElement('span');\n        boxOutline.classList.add(this.CssClasses_.BOX_OUTLINE);\n        var tickContainer = document.createElement('span');\n        tickContainer.classList.add(this.CssClasses_.FOCUS_HELPER);\n        var tickOutline = document.createElement('span');\n        tickOutline.classList.add(this.CssClasses_.TICK_OUTLINE);\n        boxOutline.appendChild(tickOutline);\n        this.element_.appendChild(tickContainer);\n        this.element_.appendChild(boxOutline);\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            this.rippleContainerElement_ = document.createElement('span');\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n            this.boundRippleMouseUp = this.onMouseUp_.bind(this);\n            this.rippleContainerElement_.addEventListener('mouseup', this.boundRippleMouseUp);\n            var ripple = document.createElement('span');\n            ripple.classList.add(this.CssClasses_.RIPPLE);\n            this.rippleContainerElement_.appendChild(ripple);\n            this.element_.appendChild(this.rippleContainerElement_);\n        }\n        this.boundInputOnChange = this.onChange_.bind(this);\n        this.boundInputOnFocus = this.onFocus_.bind(this);\n        this.boundInputOnBlur = this.onBlur_.bind(this);\n        this.boundElementMouseUp = this.onMouseUp_.bind(this);\n        this.inputElement_.addEventListener('change', this.boundInputOnChange);\n        this.inputElement_.addEventListener('focus', this.boundInputOnFocus);\n        this.inputElement_.addEventListener('blur', this.boundInputOnBlur);\n        this.element_.addEventListener('mouseup', this.boundElementMouseUp);\n        this.updateClasses_();\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialCheckbox,\n    classAsString: 'MaterialCheckbox',\n    cssClass: 'mdl-js-checkbox',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for icon toggle MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialIconToggle = function MaterialIconToggle(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialIconToggle'] = MaterialIconToggle;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialIconToggle.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialIconToggle.prototype.CssClasses_ = {\n    INPUT: 'mdl-icon-toggle__input',\n    JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-icon-toggle__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked'\n};\n/**\n   * Handle change of state.\n   *\n   * @private\n   */\nMaterialIconToggle.prototype.onChange_ = function () {\n    this.updateClasses_();\n};\n/**\n   * Handle focus of element.\n   *\n   * @private\n   */\nMaterialIconToggle.prototype.onFocus_ = function () {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus of element.\n   *\n   * @private\n   */\nMaterialIconToggle.prototype.onBlur_ = function () {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle mouseup.\n   *\n   * @private\n   */\nMaterialIconToggle.prototype.onMouseUp_ = function () {\n    this.blur_();\n};\n/**\n   * Handle class updates.\n   *\n   * @private\n   */\nMaterialIconToggle.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n};\n/**\n   * Add blur.\n   *\n   * @private\n   */\nMaterialIconToggle.prototype.blur_ = function () {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n        this.inputElement_.blur();\n    }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n// Public methods.\n/**\n   * Check the inputs toggle state and update display.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.checkToggleState = function () {\n    if (this.inputElement_.checked) {\n        this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n};\nMaterialIconToggle.prototype['checkToggleState'] = MaterialIconToggle.prototype.checkToggleState;\n/**\n   * Check the inputs disabled state and update display.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.checkDisabled = function () {\n    if (this.inputElement_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\nMaterialIconToggle.prototype['checkDisabled'] = MaterialIconToggle.prototype.checkDisabled;\n/**\n   * Disable icon toggle.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.disable = function () {\n    this.inputElement_.disabled = true;\n    this.updateClasses_();\n};\nMaterialIconToggle.prototype['disable'] = MaterialIconToggle.prototype.disable;\n/**\n   * Enable icon toggle.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.enable = function () {\n    this.inputElement_.disabled = false;\n    this.updateClasses_();\n};\nMaterialIconToggle.prototype['enable'] = MaterialIconToggle.prototype.enable;\n/**\n   * Check icon toggle.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.check = function () {\n    this.inputElement_.checked = true;\n    this.updateClasses_();\n};\nMaterialIconToggle.prototype['check'] = MaterialIconToggle.prototype.check;\n/**\n   * Uncheck icon toggle.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.uncheck = function () {\n    this.inputElement_.checked = false;\n    this.updateClasses_();\n};\nMaterialIconToggle.prototype['uncheck'] = MaterialIconToggle.prototype.uncheck;\n/**\n   * Initialize element.\n   */\nMaterialIconToggle.prototype.init = function () {\n    if (this.element_) {\n        this.inputElement_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n        if (this.element_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            this.rippleContainerElement_ = document.createElement('span');\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.JS_RIPPLE_EFFECT);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n            this.boundRippleMouseUp = this.onMouseUp_.bind(this);\n            this.rippleContainerElement_.addEventListener('mouseup', this.boundRippleMouseUp);\n            var ripple = document.createElement('span');\n            ripple.classList.add(this.CssClasses_.RIPPLE);\n            this.rippleContainerElement_.appendChild(ripple);\n            this.element_.appendChild(this.rippleContainerElement_);\n        }\n        this.boundInputOnChange = this.onChange_.bind(this);\n        this.boundInputOnFocus = this.onFocus_.bind(this);\n        this.boundInputOnBlur = this.onBlur_.bind(this);\n        this.boundElementOnMouseUp = this.onMouseUp_.bind(this);\n        this.inputElement_.addEventListener('change', this.boundInputOnChange);\n        this.inputElement_.addEventListener('focus', this.boundInputOnFocus);\n        this.inputElement_.addEventListener('blur', this.boundInputOnBlur);\n        this.element_.addEventListener('mouseup', this.boundElementOnMouseUp);\n        this.updateClasses_();\n        this.element_.classList.add('is-upgraded');\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialIconToggle,\n    classAsString: 'MaterialIconToggle',\n    cssClass: 'mdl-js-icon-toggle',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for dropdown MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialMenu = function MaterialMenu(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialMenu'] = MaterialMenu;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialMenu.prototype.Constant_ = {\n    // Total duration of the menu animation.\n    TRANSITION_DURATION_SECONDS: 0.3,\n    // The fraction of the total duration we want to use for menu item animations.\n    TRANSITION_DURATION_FRACTION: 0.8,\n    // How long the menu stays open after choosing an option (so the user can see\n    // the ripple).\n    CLOSE_TIMEOUT: 150\n};\n/**\n   * Keycodes, for code readability.\n   *\n   * @enum {number}\n   * @private\n   */\nMaterialMenu.prototype.Keycodes_ = {\n    ENTER: 13,\n    ESCAPE: 27,\n    SPACE: 32,\n    UP_ARROW: 38,\n    DOWN_ARROW: 40\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialMenu.prototype.CssClasses_ = {\n    CONTAINER: 'mdl-menu__container',\n    OUTLINE: 'mdl-menu__outline',\n    ITEM: 'mdl-menu__item',\n    ITEM_RIPPLE_CONTAINER: 'mdl-menu__item-ripple-container',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE: 'mdl-ripple',\n    // Statuses\n    IS_UPGRADED: 'is-upgraded',\n    IS_VISIBLE: 'is-visible',\n    IS_ANIMATING: 'is-animating',\n    // Alignment options\n    BOTTOM_LEFT: 'mdl-menu--bottom-left',\n    // This is the default.\n    BOTTOM_RIGHT: 'mdl-menu--bottom-right',\n    TOP_LEFT: 'mdl-menu--top-left',\n    TOP_RIGHT: 'mdl-menu--top-right',\n    UNALIGNED: 'mdl-menu--unaligned'\n};\n/**\n   * Initialize element.\n   */\nMaterialMenu.prototype.init = function () {\n    if (this.element_) {\n        // Create container for the menu.\n        var container = document.createElement('div');\n        container.classList.add(this.CssClasses_.CONTAINER);\n        this.element_.parentElement.insertBefore(container, this.element_);\n        this.element_.parentElement.removeChild(this.element_);\n        container.appendChild(this.element_);\n        this.container_ = container;\n        // Create outline for the menu (shadow and background).\n        var outline = document.createElement('div');\n        outline.classList.add(this.CssClasses_.OUTLINE);\n        this.outline_ = outline;\n        container.insertBefore(outline, this.element_);\n        // Find the \"for\" element and bind events to it.\n        var forElId = this.element_.getAttribute('for') || this.element_.getAttribute('data-mdl-for');\n        var forEl = null;\n        if (forElId) {\n            forEl = document.getElementById(forElId);\n            if (forEl) {\n                this.forElement_ = forEl;\n                forEl.addEventListener('click', this.handleForClick_.bind(this));\n                forEl.addEventListener('keydown', this.handleForKeyboardEvent_.bind(this));\n            }\n        }\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n        this.boundItemKeydown_ = this.handleItemKeyboardEvent_.bind(this);\n        this.boundItemClick_ = this.handleItemClick_.bind(this);\n        for (var i = 0; i < items.length; i++) {\n            // Add a listener to each menu item.\n            items[i].addEventListener('click', this.boundItemClick_);\n            // Add a tab index to each menu item.\n            items[i].tabIndex = '-1';\n            // Add a keyboard listener to each menu item.\n            items[i].addEventListener('keydown', this.boundItemKeydown_);\n        }\n        // Add ripple classes to each item, if the user has enabled ripples.\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            for (var j = 0; j < items.length; j++) {\n                var item = items[j];\n                var rippleContainer = document.createElement('span');\n                rippleContainer.classList.add(this.CssClasses_.ITEM_RIPPLE_CONTAINER);\n                var ripple = document.createElement('span');\n                ripple.classList.add(this.CssClasses_.RIPPLE);\n                rippleContainer.appendChild(ripple);\n                item.appendChild(rippleContainer);\n                item.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n            }\n        }\n        // Copy alignment classes to the container, so the outline can use them.\n        if (this.element_.classList.contains(this.CssClasses_.BOTTOM_LEFT)) {\n            this.outline_.classList.add(this.CssClasses_.BOTTOM_LEFT);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n            this.outline_.classList.add(this.CssClasses_.BOTTOM_RIGHT);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n            this.outline_.classList.add(this.CssClasses_.TOP_LEFT);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n            this.outline_.classList.add(this.CssClasses_.TOP_RIGHT);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n            this.outline_.classList.add(this.CssClasses_.UNALIGNED);\n        }\n        container.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n/**\n   * Handles a click on the \"for\" element, by positioning the menu and then\n   * toggling it.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialMenu.prototype.handleForClick_ = function (evt) {\n    if (this.element_ && this.forElement_) {\n        var rect = this.forElement_.getBoundingClientRect();\n        var forRect = this.forElement_.parentElement.getBoundingClientRect();\n        if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n        } else if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n            // Position below the \"for\" element, aligned to its right.\n            this.container_.style.right = forRect.right - rect.right + 'px';\n            this.container_.style.top = this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';\n        } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n            // Position above the \"for\" element, aligned to its left.\n            this.container_.style.left = this.forElement_.offsetLeft + 'px';\n            this.container_.style.bottom = forRect.bottom - rect.top + 'px';\n        } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n            // Position above the \"for\" element, aligned to its right.\n            this.container_.style.right = forRect.right - rect.right + 'px';\n            this.container_.style.bottom = forRect.bottom - rect.top + 'px';\n        } else {\n            // Default: position below the \"for\" element, aligned to its left.\n            this.container_.style.left = this.forElement_.offsetLeft + 'px';\n            this.container_.style.top = this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';\n        }\n    }\n    this.toggle(evt);\n};\n/**\n   * Handles a keyboard event on the \"for\" element.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialMenu.prototype.handleForKeyboardEvent_ = function (evt) {\n    if (this.element_ && this.container_ && this.forElement_) {\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM + ':not([disabled])');\n        if (items && items.length > 0 && this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n            if (evt.keyCode === this.Keycodes_.UP_ARROW) {\n                evt.preventDefault();\n                items[items.length - 1].focus();\n            } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {\n                evt.preventDefault();\n                items[0].focus();\n            }\n        }\n    }\n};\n/**\n   * Handles a keyboard event on an item.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialMenu.prototype.handleItemKeyboardEvent_ = function (evt) {\n    if (this.element_ && this.container_) {\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM + ':not([disabled])');\n        if (items && items.length > 0 && this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n            var currentIndex = Array.prototype.slice.call(items).indexOf(evt.target);\n            if (evt.keyCode === this.Keycodes_.UP_ARROW) {\n                evt.preventDefault();\n                if (currentIndex > 0) {\n                    items[currentIndex - 1].focus();\n                } else {\n                    items[items.length - 1].focus();\n                }\n            } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {\n                evt.preventDefault();\n                if (items.length > currentIndex + 1) {\n                    items[currentIndex + 1].focus();\n                } else {\n                    items[0].focus();\n                }\n            } else if (evt.keyCode === this.Keycodes_.SPACE || evt.keyCode === this.Keycodes_.ENTER) {\n                evt.preventDefault();\n                // Send mousedown and mouseup to trigger ripple.\n                var e = new MouseEvent('mousedown');\n                evt.target.dispatchEvent(e);\n                e = new MouseEvent('mouseup');\n                evt.target.dispatchEvent(e);\n                // Send click.\n                evt.target.click();\n            } else if (evt.keyCode === this.Keycodes_.ESCAPE) {\n                evt.preventDefault();\n                this.hide();\n            }\n        }\n    }\n};\n/**\n   * Handles a click event on an item.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialMenu.prototype.handleItemClick_ = function (evt) {\n    if (evt.target.hasAttribute('disabled')) {\n        evt.stopPropagation();\n    } else {\n        // Wait some time before closing menu, so the user can see the ripple.\n        this.closing_ = true;\n        window.setTimeout(function () {\n            this.hide();\n            this.closing_ = false;\n        }.bind(this), this.Constant_.CLOSE_TIMEOUT);\n    }\n};\n/**\n   * Calculates the initial clip (for opening the menu) or final clip (for closing\n   * it), and applies it. This allows us to animate from or to the correct point,\n   * that is, the point it's aligned to in the \"for\" element.\n   *\n   * @param {number} height Height of the clip rectangle\n   * @param {number} width Width of the clip rectangle\n   * @private\n   */\nMaterialMenu.prototype.applyClip_ = function (height, width) {\n    if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n        // Do not clip.\n        this.element_.style.clip = '';\n    } else if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n        // Clip to the top right corner of the menu.\n        this.element_.style.clip = 'rect(0 ' + width + 'px 0 ' + width + 'px)';\n    } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n        // Clip to the bottom left corner of the menu.\n        this.element_.style.clip = 'rect(' + height + 'px 0 ' + height + 'px 0)';\n    } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n        // Clip to the bottom right corner of the menu.\n        this.element_.style.clip = 'rect(' + height + 'px ' + width + 'px ' + height + 'px ' + width + 'px)';\n    } else {\n        // Default: do not clip (same as clipping to the top left corner).\n        this.element_.style.clip = '';\n    }\n};\n/**\n   * Cleanup function to remove animation listeners.\n   *\n   * @param {Event} evt The event being handled.\n   * @private\n   */\nMaterialMenu.prototype.removeAnimationEndListener_ = function (evt) {\n    evt.target.classList.remove(MaterialMenu.prototype.CssClasses_.IS_ANIMATING);\n};\n/**\n   * Adds an event listener to clean up after the animation ends.\n   *\n   * @private\n   */\nMaterialMenu.prototype.addAnimationEndListener_ = function () {\n    this.element_.addEventListener('transitionend', this.removeAnimationEndListener_);\n    this.element_.addEventListener('webkitTransitionEnd', this.removeAnimationEndListener_);\n};\n/**\n   * Displays the menu.\n   *\n   * @param {Event} evt The event being handled.\n   * @public\n   */\nMaterialMenu.prototype.show = function (evt) {\n    if (this.element_ && this.container_ && this.outline_) {\n        // Measure the inner element.\n        var height = this.element_.getBoundingClientRect().height;\n        var width = this.element_.getBoundingClientRect().width;\n        // Apply the inner element's size to the container and outline.\n        this.container_.style.width = width + 'px';\n        this.container_.style.height = height + 'px';\n        this.outline_.style.width = width + 'px';\n        this.outline_.style.height = height + 'px';\n        var transitionDuration = this.Constant_.TRANSITION_DURATION_SECONDS * this.Constant_.TRANSITION_DURATION_FRACTION;\n        // Calculate transition delays for individual menu items, so that they fade\n        // in one at a time.\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n        for (var i = 0; i < items.length; i++) {\n            var itemDelay = null;\n            if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT) || this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n                itemDelay = (height - items[i].offsetTop - items[i].offsetHeight) / height * transitionDuration + 's';\n            } else {\n                itemDelay = items[i].offsetTop / height * transitionDuration + 's';\n            }\n            items[i].style.transitionDelay = itemDelay;\n        }\n        // Apply the initial clip to the text before we start animating.\n        this.applyClip_(height, width);\n        // Wait for the next frame, turn on animation, and apply the final clip.\n        // Also make it visible. This triggers the transitions.\n        requestAnimationFrame(function () {\n            this.element_.classList.add(this.CssClasses_.IS_ANIMATING);\n            this.element_.style.clip = 'rect(0 ' + width + 'px ' + height + 'px 0)';\n            this.container_.classList.add(this.CssClasses_.IS_VISIBLE);\n        }.bind(this));\n        // Clean up after the animation is complete.\n        this.addAnimationEndListener_();\n        // Add a click listener to the document, to close the menu.\n        var callback = function (e) {\n            // Check to see if the document is processing the same event that\n            // displayed the menu in the first place. If so, do nothing.\n            // Also check to see if the menu is in the process of closing itself, and\n            // do nothing in that case.\n            // Also check if the clicked element is a menu item\n            // if so, do nothing.\n            if (e !== evt && !this.closing_ && e.target.parentNode !== this.element_) {\n                document.removeEventListener('click', callback);\n                this.hide();\n            }\n        }.bind(this);\n        document.addEventListener('click', callback);\n    }\n};\nMaterialMenu.prototype['show'] = MaterialMenu.prototype.show;\n/**\n   * Hides the menu.\n   *\n   * @public\n   */\nMaterialMenu.prototype.hide = function () {\n    if (this.element_ && this.container_ && this.outline_) {\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n        // Remove all transition delays; menu items fade out concurrently.\n        for (var i = 0; i < items.length; i++) {\n            items[i].style.removeProperty('transition-delay');\n        }\n        // Measure the inner element.\n        var rect = this.element_.getBoundingClientRect();\n        var height = rect.height;\n        var width = rect.width;\n        // Turn on animation, and apply the final clip. Also make invisible.\n        // This triggers the transitions.\n        this.element_.classList.add(this.CssClasses_.IS_ANIMATING);\n        this.applyClip_(height, width);\n        this.container_.classList.remove(this.CssClasses_.IS_VISIBLE);\n        // Clean up after the animation is complete.\n        this.addAnimationEndListener_();\n    }\n};\nMaterialMenu.prototype['hide'] = MaterialMenu.prototype.hide;\n/**\n   * Displays or hides the menu, depending on current state.\n   *\n   * @param {Event} evt The event being handled.\n   * @public\n   */\nMaterialMenu.prototype.toggle = function (evt) {\n    if (this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n        this.hide();\n    } else {\n        this.show(evt);\n    }\n};\nMaterialMenu.prototype['toggle'] = MaterialMenu.prototype.toggle;\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialMenu,\n    classAsString: 'MaterialMenu',\n    cssClass: 'mdl-js-menu',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Progress MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialProgress = function MaterialProgress(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialProgress'] = MaterialProgress;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialProgress.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialProgress.prototype.CssClasses_ = { INDETERMINATE_CLASS: 'mdl-progress__indeterminate' };\n/**\n   * Set the current progress of the progressbar.\n   *\n   * @param {number} p Percentage of the progress (0-100)\n   * @public\n   */\nMaterialProgress.prototype.setProgress = function (p) {\n    if (this.element_.classList.contains(this.CssClasses_.INDETERMINATE_CLASS)) {\n        return;\n    }\n    this.progressbar_.style.width = p + '%';\n};\nMaterialProgress.prototype['setProgress'] = MaterialProgress.prototype.setProgress;\n/**\n   * Set the current progress of the buffer.\n   *\n   * @param {number} p Percentage of the buffer (0-100)\n   * @public\n   */\nMaterialProgress.prototype.setBuffer = function (p) {\n    this.bufferbar_.style.width = p + '%';\n    this.auxbar_.style.width = 100 - p + '%';\n};\nMaterialProgress.prototype['setBuffer'] = MaterialProgress.prototype.setBuffer;\n/**\n   * Initialize element.\n   */\nMaterialProgress.prototype.init = function () {\n    if (this.element_) {\n        var el = document.createElement('div');\n        el.className = 'progressbar bar bar1';\n        this.element_.appendChild(el);\n        this.progressbar_ = el;\n        el = document.createElement('div');\n        el.className = 'bufferbar bar bar2';\n        this.element_.appendChild(el);\n        this.bufferbar_ = el;\n        el = document.createElement('div');\n        el.className = 'auxbar bar bar3';\n        this.element_.appendChild(el);\n        this.auxbar_ = el;\n        this.progressbar_.style.width = '0%';\n        this.bufferbar_.style.width = '100%';\n        this.auxbar_.style.width = '0%';\n        this.element_.classList.add('is-upgraded');\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialProgress,\n    classAsString: 'MaterialProgress',\n    cssClass: 'mdl-js-progress',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Radio MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialRadio = function MaterialRadio(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialRadio'] = MaterialRadio;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialRadio.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialRadio.prototype.CssClasses_ = {\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked',\n    IS_UPGRADED: 'is-upgraded',\n    JS_RADIO: 'mdl-js-radio',\n    RADIO_BTN: 'mdl-radio__button',\n    RADIO_OUTER_CIRCLE: 'mdl-radio__outer-circle',\n    RADIO_INNER_CIRCLE: 'mdl-radio__inner-circle',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-radio__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple'\n};\n/**\n   * Handle change of state.\n   *\n   * @private\n   */\nMaterialRadio.prototype.onChange_ = function () {\n    // Since other radio buttons don't get change events, we need to look for\n    // them to update their classes.\n    var radios = document.getElementsByClassName(this.CssClasses_.JS_RADIO);\n    for (var i = 0; i < radios.length; i++) {\n        var button = radios[i].querySelector('.' + this.CssClasses_.RADIO_BTN);\n        // Different name == different group, so no point updating those.\n        if (button.getAttribute('name') === this.btnElement_.getAttribute('name')) {\n            radios[i]['MaterialRadio'].updateClasses_();\n        }\n    }\n};\n/**\n   * Handle focus.\n   *\n   * @private\n   */\nMaterialRadio.prototype.onFocus_ = function () {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus.\n   *\n   * @private\n   */\nMaterialRadio.prototype.onBlur_ = function () {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle mouseup.\n   *\n   * @private\n   */\nMaterialRadio.prototype.onMouseup_ = function () {\n    this.blur_();\n};\n/**\n   * Update classes.\n   *\n   * @private\n   */\nMaterialRadio.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n};\n/**\n   * Add blur.\n   *\n   * @private\n   */\nMaterialRadio.prototype.blur_ = function () {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n        this.btnElement_.blur();\n    }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n// Public methods.\n/**\n   * Check the components disabled state.\n   *\n   * @public\n   */\nMaterialRadio.prototype.checkDisabled = function () {\n    if (this.btnElement_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\nMaterialRadio.prototype['checkDisabled'] = MaterialRadio.prototype.checkDisabled;\n/**\n   * Check the components toggled state.\n   *\n   * @public\n   */\nMaterialRadio.prototype.checkToggleState = function () {\n    if (this.btnElement_.checked) {\n        this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n};\nMaterialRadio.prototype['checkToggleState'] = MaterialRadio.prototype.checkToggleState;\n/**\n   * Disable radio.\n   *\n   * @public\n   */\nMaterialRadio.prototype.disable = function () {\n    this.btnElement_.disabled = true;\n    this.updateClasses_();\n};\nMaterialRadio.prototype['disable'] = MaterialRadio.prototype.disable;\n/**\n   * Enable radio.\n   *\n   * @public\n   */\nMaterialRadio.prototype.enable = function () {\n    this.btnElement_.disabled = false;\n    this.updateClasses_();\n};\nMaterialRadio.prototype['enable'] = MaterialRadio.prototype.enable;\n/**\n   * Check radio.\n   *\n   * @public\n   */\nMaterialRadio.prototype.check = function () {\n    this.btnElement_.checked = true;\n    this.updateClasses_();\n};\nMaterialRadio.prototype['check'] = MaterialRadio.prototype.check;\n/**\n   * Uncheck radio.\n   *\n   * @public\n   */\nMaterialRadio.prototype.uncheck = function () {\n    this.btnElement_.checked = false;\n    this.updateClasses_();\n};\nMaterialRadio.prototype['uncheck'] = MaterialRadio.prototype.uncheck;\n/**\n   * Initialize element.\n   */\nMaterialRadio.prototype.init = function () {\n    if (this.element_) {\n        this.btnElement_ = this.element_.querySelector('.' + this.CssClasses_.RADIO_BTN);\n        this.boundChangeHandler_ = this.onChange_.bind(this);\n        this.boundFocusHandler_ = this.onChange_.bind(this);\n        this.boundBlurHandler_ = this.onBlur_.bind(this);\n        this.boundMouseUpHandler_ = this.onMouseup_.bind(this);\n        var outerCircle = document.createElement('span');\n        outerCircle.classList.add(this.CssClasses_.RADIO_OUTER_CIRCLE);\n        var innerCircle = document.createElement('span');\n        innerCircle.classList.add(this.CssClasses_.RADIO_INNER_CIRCLE);\n        this.element_.appendChild(outerCircle);\n        this.element_.appendChild(innerCircle);\n        var rippleContainer;\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            rippleContainer = document.createElement('span');\n            rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            rippleContainer.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n            rippleContainer.classList.add(this.CssClasses_.RIPPLE_CENTER);\n            rippleContainer.addEventListener('mouseup', this.boundMouseUpHandler_);\n            var ripple = document.createElement('span');\n            ripple.classList.add(this.CssClasses_.RIPPLE);\n            rippleContainer.appendChild(ripple);\n            this.element_.appendChild(rippleContainer);\n        }\n        this.btnElement_.addEventListener('change', this.boundChangeHandler_);\n        this.btnElement_.addEventListener('focus', this.boundFocusHandler_);\n        this.btnElement_.addEventListener('blur', this.boundBlurHandler_);\n        this.element_.addEventListener('mouseup', this.boundMouseUpHandler_);\n        this.updateClasses_();\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialRadio,\n    classAsString: 'MaterialRadio',\n    cssClass: 'mdl-js-radio',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Slider MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialSlider = function MaterialSlider(element) {\n    this.element_ = element;\n    // Browser feature detection.\n    this.isIE_ = window.navigator.msPointerEnabled;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialSlider'] = MaterialSlider;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialSlider.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialSlider.prototype.CssClasses_ = {\n    IE_CONTAINER: 'mdl-slider__ie-container',\n    SLIDER_CONTAINER: 'mdl-slider__container',\n    BACKGROUND_FLEX: 'mdl-slider__background-flex',\n    BACKGROUND_LOWER: 'mdl-slider__background-lower',\n    BACKGROUND_UPPER: 'mdl-slider__background-upper',\n    IS_LOWEST_VALUE: 'is-lowest-value',\n    IS_UPGRADED: 'is-upgraded'\n};\n/**\n   * Handle input on element.\n   *\n   * @private\n   */\nMaterialSlider.prototype.onInput_ = function () {\n    this.updateValueStyles_();\n};\n/**\n   * Handle change on element.\n   *\n   * @private\n   */\nMaterialSlider.prototype.onChange_ = function () {\n    this.updateValueStyles_();\n};\n/**\n   * Handle mouseup on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSlider.prototype.onMouseUp_ = function (event) {\n    event.target.blur();\n};\n/**\n   * Handle mousedown on container element.\n   * This handler is purpose is to not require the use to click\n   * exactly on the 2px slider element, as FireFox seems to be very\n   * strict about this.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   * @suppress {missingProperties}\n   */\nMaterialSlider.prototype.onContainerMouseDown_ = function (event) {\n    // If this click is not on the parent element (but rather some child)\n    // ignore. It may still bubble up.\n    if (event.target !== this.element_.parentElement) {\n        return;\n    }\n    // Discard the original event and create a new event that\n    // is on the slider element.\n    event.preventDefault();\n    var newEvent = new MouseEvent('mousedown', {\n        target: event.target,\n        buttons: event.buttons,\n        clientX: event.clientX,\n        clientY: this.element_.getBoundingClientRect().y\n    });\n    this.element_.dispatchEvent(newEvent);\n};\n/**\n   * Handle updating of values.\n   *\n   * @private\n   */\nMaterialSlider.prototype.updateValueStyles_ = function () {\n    // Calculate and apply percentages to div structure behind slider.\n    var fraction = (this.element_.value - this.element_.min) / (this.element_.max - this.element_.min);\n    if (fraction === 0) {\n        this.element_.classList.add(this.CssClasses_.IS_LOWEST_VALUE);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_LOWEST_VALUE);\n    }\n    if (!this.isIE_) {\n        this.backgroundLower_.style.flex = fraction;\n        this.backgroundLower_.style.webkitFlex = fraction;\n        this.backgroundUpper_.style.flex = 1 - fraction;\n        this.backgroundUpper_.style.webkitFlex = 1 - fraction;\n    }\n};\n// Public methods.\n/**\n   * Disable slider.\n   *\n   * @public\n   */\nMaterialSlider.prototype.disable = function () {\n    this.element_.disabled = true;\n};\nMaterialSlider.prototype['disable'] = MaterialSlider.prototype.disable;\n/**\n   * Enable slider.\n   *\n   * @public\n   */\nMaterialSlider.prototype.enable = function () {\n    this.element_.disabled = false;\n};\nMaterialSlider.prototype['enable'] = MaterialSlider.prototype.enable;\n/**\n   * Update slider value.\n   *\n   * @param {number} value The value to which to set the control (optional).\n   * @public\n   */\nMaterialSlider.prototype.change = function (value) {\n    if (typeof value !== 'undefined') {\n        this.element_.value = value;\n    }\n    this.updateValueStyles_();\n};\nMaterialSlider.prototype['change'] = MaterialSlider.prototype.change;\n/**\n   * Initialize element.\n   */\nMaterialSlider.prototype.init = function () {\n    if (this.element_) {\n        if (this.isIE_) {\n            // Since we need to specify a very large height in IE due to\n            // implementation limitations, we add a parent here that trims it down to\n            // a reasonable size.\n            var containerIE = document.createElement('div');\n            containerIE.classList.add(this.CssClasses_.IE_CONTAINER);\n            this.element_.parentElement.insertBefore(containerIE, this.element_);\n            this.element_.parentElement.removeChild(this.element_);\n            containerIE.appendChild(this.element_);\n        } else {\n            // For non-IE browsers, we need a div structure that sits behind the\n            // slider and allows us to style the left and right sides of it with\n            // different colors.\n            var container = document.createElement('div');\n            container.classList.add(this.CssClasses_.SLIDER_CONTAINER);\n            this.element_.parentElement.insertBefore(container, this.element_);\n            this.element_.parentElement.removeChild(this.element_);\n            container.appendChild(this.element_);\n            var backgroundFlex = document.createElement('div');\n            backgroundFlex.classList.add(this.CssClasses_.BACKGROUND_FLEX);\n            container.appendChild(backgroundFlex);\n            this.backgroundLower_ = document.createElement('div');\n            this.backgroundLower_.classList.add(this.CssClasses_.BACKGROUND_LOWER);\n            backgroundFlex.appendChild(this.backgroundLower_);\n            this.backgroundUpper_ = document.createElement('div');\n            this.backgroundUpper_.classList.add(this.CssClasses_.BACKGROUND_UPPER);\n            backgroundFlex.appendChild(this.backgroundUpper_);\n        }\n        this.boundInputHandler = this.onInput_.bind(this);\n        this.boundChangeHandler = this.onChange_.bind(this);\n        this.boundMouseUpHandler = this.onMouseUp_.bind(this);\n        this.boundContainerMouseDownHandler = this.onContainerMouseDown_.bind(this);\n        this.element_.addEventListener('input', this.boundInputHandler);\n        this.element_.addEventListener('change', this.boundChangeHandler);\n        this.element_.addEventListener('mouseup', this.boundMouseUpHandler);\n        this.element_.parentElement.addEventListener('mousedown', this.boundContainerMouseDownHandler);\n        this.updateValueStyles_();\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialSlider,\n    classAsString: 'MaterialSlider',\n    cssClass: 'mdl-js-slider',\n    widget: true\n});","/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Snackbar MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialSnackbar = function MaterialSnackbar(element) {\n    this.element_ = element;\n    this.textElement_ = this.element_.querySelector('.' + this.cssClasses_.MESSAGE);\n    this.actionElement_ = this.element_.querySelector('.' + this.cssClasses_.ACTION);\n    if (!this.textElement_) {\n        throw new Error('There must be a message element for a snackbar.');\n    }\n    if (!this.actionElement_) {\n        throw new Error('There must be an action element for a snackbar.');\n    }\n    this.active = false;\n    this.actionHandler_ = undefined;\n    this.message_ = undefined;\n    this.actionText_ = undefined;\n    this.queuedNotifications_ = [];\n    this.setActionHidden_(true);\n};\nwindow['MaterialSnackbar'] = MaterialSnackbar;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialSnackbar.prototype.Constant_ = {\n    // The duration of the snackbar show/hide animation, in ms.\n    ANIMATION_LENGTH: 250\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialSnackbar.prototype.cssClasses_ = {\n    SNACKBAR: 'mdl-snackbar',\n    MESSAGE: 'mdl-snackbar__text',\n    ACTION: 'mdl-snackbar__action',\n    ACTIVE: 'mdl-snackbar--active'\n};\n/**\n   * Display the snackbar.\n   *\n   * @private\n   */\nMaterialSnackbar.prototype.displaySnackbar_ = function () {\n    this.element_.setAttribute('aria-hidden', 'true');\n    if (this.actionHandler_) {\n        this.actionElement_.textContent = this.actionText_;\n        this.actionElement_.addEventListener('click', this.actionHandler_);\n        this.setActionHidden_(false);\n    }\n    this.textElement_.textContent = this.message_;\n    this.element_.classList.add(this.cssClasses_.ACTIVE);\n    this.element_.setAttribute('aria-hidden', 'false');\n    setTimeout(this.cleanup_.bind(this), this.timeout_);\n};\n/**\n   * Show the snackbar.\n   *\n   * @param {Object} data The data for the notification.\n   * @public\n   */\nMaterialSnackbar.prototype.showSnackbar = function (data) {\n    if (data === undefined) {\n        throw new Error('Please provide a data object with at least a message to display.');\n    }\n    if (data['message'] === undefined) {\n        throw new Error('Please provide a message to be displayed.');\n    }\n    if (data['actionHandler'] && !data['actionText']) {\n        throw new Error('Please provide action text with the handler.');\n    }\n    if (this.active) {\n        this.queuedNotifications_.push(data);\n    } else {\n        this.active = true;\n        this.message_ = data['message'];\n        if (data['timeout']) {\n            this.timeout_ = data['timeout'];\n        } else {\n            this.timeout_ = 2750;\n        }\n        if (data['actionHandler']) {\n            this.actionHandler_ = data['actionHandler'];\n        }\n        if (data['actionText']) {\n            this.actionText_ = data['actionText'];\n        }\n        this.displaySnackbar_();\n    }\n};\nMaterialSnackbar.prototype['showSnackbar'] = MaterialSnackbar.prototype.showSnackbar;\n/**\n   * Check if the queue has items within it.\n   * If it does, display the next entry.\n   *\n   * @private\n   */\nMaterialSnackbar.prototype.checkQueue_ = function () {\n    if (this.queuedNotifications_.length > 0) {\n        this.showSnackbar(this.queuedNotifications_.shift());\n    }\n};\n/**\n   * Cleanup the snackbar event listeners and accessiblity attributes.\n   *\n   * @private\n   */\nMaterialSnackbar.prototype.cleanup_ = function () {\n    this.element_.classList.remove(this.cssClasses_.ACTIVE);\n    setTimeout(function () {\n        this.element_.setAttribute('aria-hidden', 'true');\n        this.textElement_.textContent = '';\n        if (!this.actionElement_.getAttribute('aria-hidden')) {\n            this.setActionHidden_(true);\n            this.actionElement_.textContent = '';\n            this.actionElement_.removeEventListener('click', this.actionHandler_);\n        }\n        this.actionHandler_ = undefined;\n        this.message_ = undefined;\n        this.actionText_ = undefined;\n        this.active = false;\n        this.checkQueue_();\n    }.bind(this), this.Constant_.ANIMATION_LENGTH);\n};\n/**\n   * Set the action handler hidden state.\n   *\n   * @param {boolean} value Whether or not to set to 'hidden'.\n   * @private\n   */\nMaterialSnackbar.prototype.setActionHidden_ = function (value) {\n    if (value) {\n        this.actionElement_.setAttribute('aria-hidden', 'true');\n    } else {\n        this.actionElement_.removeAttribute('aria-hidden');\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialSnackbar,\n    classAsString: 'MaterialSnackbar',\n    cssClass: 'mdl-js-snackbar',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Spinner MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   * @constructor\n   */\nvar MaterialSpinner = function MaterialSpinner(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialSpinner'] = MaterialSpinner;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialSpinner.prototype.Constant_ = { MDL_SPINNER_LAYER_COUNT: 4 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialSpinner.prototype.CssClasses_ = {\n    MDL_SPINNER_LAYER: 'mdl-spinner__layer',\n    MDL_SPINNER_CIRCLE_CLIPPER: 'mdl-spinner__circle-clipper',\n    MDL_SPINNER_CIRCLE: 'mdl-spinner__circle',\n    MDL_SPINNER_GAP_PATCH: 'mdl-spinner__gap-patch',\n    MDL_SPINNER_LEFT: 'mdl-spinner__left',\n    MDL_SPINNER_RIGHT: 'mdl-spinner__right'\n};\n/**\n   * Auxiliary method to create a spinner layer.\n   *\n   * @param {number} index Index of the layer to be created.\n   * @public\n   */\nMaterialSpinner.prototype.createLayer = function (index) {\n    var layer = document.createElement('div');\n    layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER);\n    layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER + '-' + index);\n    var leftClipper = document.createElement('div');\n    leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);\n    leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_LEFT);\n    var gapPatch = document.createElement('div');\n    gapPatch.classList.add(this.CssClasses_.MDL_SPINNER_GAP_PATCH);\n    var rightClipper = document.createElement('div');\n    rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);\n    rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_RIGHT);\n    var circleOwners = [\n        leftClipper,\n        gapPatch,\n        rightClipper\n    ];\n    for (var i = 0; i < circleOwners.length; i++) {\n        var circle = document.createElement('div');\n        circle.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE);\n        circleOwners[i].appendChild(circle);\n    }\n    layer.appendChild(leftClipper);\n    layer.appendChild(gapPatch);\n    layer.appendChild(rightClipper);\n    this.element_.appendChild(layer);\n};\nMaterialSpinner.prototype['createLayer'] = MaterialSpinner.prototype.createLayer;\n/**\n   * Stops the spinner animation.\n   * Public method for users who need to stop the spinner for any reason.\n   *\n   * @public\n   */\nMaterialSpinner.prototype.stop = function () {\n    this.element_.classList.remove('is-active');\n};\nMaterialSpinner.prototype['stop'] = MaterialSpinner.prototype.stop;\n/**\n   * Starts the spinner animation.\n   * Public method for users who need to manually start the spinner for any reason\n   * (instead of just adding the 'is-active' class to their markup).\n   *\n   * @public\n   */\nMaterialSpinner.prototype.start = function () {\n    this.element_.classList.add('is-active');\n};\nMaterialSpinner.prototype['start'] = MaterialSpinner.prototype.start;\n/**\n   * Initialize element.\n   */\nMaterialSpinner.prototype.init = function () {\n    if (this.element_) {\n        for (var i = 1; i <= this.Constant_.MDL_SPINNER_LAYER_COUNT; i++) {\n            this.createLayer(i);\n        }\n        this.element_.classList.add('is-upgraded');\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialSpinner,\n    classAsString: 'MaterialSpinner',\n    cssClass: 'mdl-js-spinner',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Checkbox MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialSwitch = function MaterialSwitch(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialSwitch'] = MaterialSwitch;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialSwitch.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialSwitch.prototype.CssClasses_ = {\n    INPUT: 'mdl-switch__input',\n    TRACK: 'mdl-switch__track',\n    THUMB: 'mdl-switch__thumb',\n    FOCUS_HELPER: 'mdl-switch__focus-helper',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-switch__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked'\n};\n/**\n   * Handle change of state.\n   *\n   * @private\n   */\nMaterialSwitch.prototype.onChange_ = function () {\n    this.updateClasses_();\n};\n/**\n   * Handle focus of element.\n   *\n   * @private\n   */\nMaterialSwitch.prototype.onFocus_ = function () {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus of element.\n   *\n   * @private\n   */\nMaterialSwitch.prototype.onBlur_ = function () {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle mouseup.\n   *\n   * @private\n   */\nMaterialSwitch.prototype.onMouseUp_ = function () {\n    this.blur_();\n};\n/**\n   * Handle class updates.\n   *\n   * @private\n   */\nMaterialSwitch.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n};\n/**\n   * Add blur.\n   *\n   * @private\n   */\nMaterialSwitch.prototype.blur_ = function () {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n        this.inputElement_.blur();\n    }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n// Public methods.\n/**\n   * Check the components disabled state.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.checkDisabled = function () {\n    if (this.inputElement_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\nMaterialSwitch.prototype['checkDisabled'] = MaterialSwitch.prototype.checkDisabled;\n/**\n   * Check the components toggled state.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.checkToggleState = function () {\n    if (this.inputElement_.checked) {\n        this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n};\nMaterialSwitch.prototype['checkToggleState'] = MaterialSwitch.prototype.checkToggleState;\n/**\n   * Disable switch.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.disable = function () {\n    this.inputElement_.disabled = true;\n    this.updateClasses_();\n};\nMaterialSwitch.prototype['disable'] = MaterialSwitch.prototype.disable;\n/**\n   * Enable switch.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.enable = function () {\n    this.inputElement_.disabled = false;\n    this.updateClasses_();\n};\nMaterialSwitch.prototype['enable'] = MaterialSwitch.prototype.enable;\n/**\n   * Activate switch.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.on = function () {\n    this.inputElement_.checked = true;\n    this.updateClasses_();\n};\nMaterialSwitch.prototype['on'] = MaterialSwitch.prototype.on;\n/**\n   * Deactivate switch.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.off = function () {\n    this.inputElement_.checked = false;\n    this.updateClasses_();\n};\nMaterialSwitch.prototype['off'] = MaterialSwitch.prototype.off;\n/**\n   * Initialize element.\n   */\nMaterialSwitch.prototype.init = function () {\n    if (this.element_) {\n        this.inputElement_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n        var track = document.createElement('div');\n        track.classList.add(this.CssClasses_.TRACK);\n        var thumb = document.createElement('div');\n        thumb.classList.add(this.CssClasses_.THUMB);\n        var focusHelper = document.createElement('span');\n        focusHelper.classList.add(this.CssClasses_.FOCUS_HELPER);\n        thumb.appendChild(focusHelper);\n        this.element_.appendChild(track);\n        this.element_.appendChild(thumb);\n        this.boundMouseUpHandler = this.onMouseUp_.bind(this);\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            this.rippleContainerElement_ = document.createElement('span');\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n            this.rippleContainerElement_.addEventListener('mouseup', this.boundMouseUpHandler);\n            var ripple = document.createElement('span');\n            ripple.classList.add(this.CssClasses_.RIPPLE);\n            this.rippleContainerElement_.appendChild(ripple);\n            this.element_.appendChild(this.rippleContainerElement_);\n        }\n        this.boundChangeHandler = this.onChange_.bind(this);\n        this.boundFocusHandler = this.onFocus_.bind(this);\n        this.boundBlurHandler = this.onBlur_.bind(this);\n        this.inputElement_.addEventListener('change', this.boundChangeHandler);\n        this.inputElement_.addEventListener('focus', this.boundFocusHandler);\n        this.inputElement_.addEventListener('blur', this.boundBlurHandler);\n        this.element_.addEventListener('mouseup', this.boundMouseUpHandler);\n        this.updateClasses_();\n        this.element_.classList.add('is-upgraded');\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialSwitch,\n    classAsString: 'MaterialSwitch',\n    cssClass: 'mdl-js-switch',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Textfield MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialTextfield = function MaterialTextfield(element) {\n    this.element_ = element;\n    this.maxRows = this.Constant_.NO_MAX_ROWS;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialTextfield'] = MaterialTextfield;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialTextfield.prototype.Constant_ = {\n    NO_MAX_ROWS: -1,\n    MAX_ROWS_ATTRIBUTE: 'maxrows'\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialTextfield.prototype.CssClasses_ = {\n    LABEL: 'mdl-textfield__label',\n    INPUT: 'mdl-textfield__input',\n    IS_DIRTY: 'is-dirty',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_INVALID: 'is-invalid',\n    IS_UPGRADED: 'is-upgraded',\n    HAS_PLACEHOLDER: 'has-placeholder'\n};\n/**\n   * Handle input being entered.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTextfield.prototype.onKeyDown_ = function (event) {\n    var currentRowCount = event.target.value.split('\\n').length;\n    if (event.keyCode === 13) {\n        if (currentRowCount >= this.maxRows) {\n            event.preventDefault();\n        }\n    }\n};\n/**\n   * Handle focus.\n   *\n   * @private\n   */\nMaterialTextfield.prototype.onFocus_ = function () {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus.\n   *\n   * @private\n   */\nMaterialTextfield.prototype.onBlur_ = function () {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle reset event from out side.\n   *\n   * @private\n   */\nMaterialTextfield.prototype.onReset_ = function () {\n    this.updateClasses_();\n};\n/**\n   * Handle class updates.\n   *\n   * @private\n   */\nMaterialTextfield.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkValidity();\n    this.checkDirty();\n    this.checkFocus();\n};\n// Public methods.\n/**\n   * Check the disabled state and update field accordingly.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.checkDisabled = function () {\n    if (this.input_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\nMaterialTextfield.prototype['checkDisabled'] = MaterialTextfield.prototype.checkDisabled;\n/**\n  * Check the focus state and update field accordingly.\n  *\n  * @public\n  */\nMaterialTextfield.prototype.checkFocus = function () {\n    if (this.element_.querySelector(':focus')) {\n        this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n    }\n};\nMaterialTextfield.prototype['checkFocus'] = MaterialTextfield.prototype.checkFocus;\n/**\n   * Check the validity state and update field accordingly.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.checkValidity = function () {\n    if (this.input_.validity) {\n        if (this.input_.validity.valid) {\n            this.element_.classList.remove(this.CssClasses_.IS_INVALID);\n        } else {\n            this.element_.classList.add(this.CssClasses_.IS_INVALID);\n        }\n    }\n};\nMaterialTextfield.prototype['checkValidity'] = MaterialTextfield.prototype.checkValidity;\n/**\n   * Check the dirty state and update field accordingly.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.checkDirty = function () {\n    if (this.input_.value && this.input_.value.length > 0) {\n        this.element_.classList.add(this.CssClasses_.IS_DIRTY);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DIRTY);\n    }\n};\nMaterialTextfield.prototype['checkDirty'] = MaterialTextfield.prototype.checkDirty;\n/**\n   * Disable text field.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.disable = function () {\n    this.input_.disabled = true;\n    this.updateClasses_();\n};\nMaterialTextfield.prototype['disable'] = MaterialTextfield.prototype.disable;\n/**\n   * Enable text field.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.enable = function () {\n    this.input_.disabled = false;\n    this.updateClasses_();\n};\nMaterialTextfield.prototype['enable'] = MaterialTextfield.prototype.enable;\n/**\n   * Update text field value.\n   *\n   * @param {string} value The value to which to set the control (optional).\n   * @public\n   */\nMaterialTextfield.prototype.change = function (value) {\n    this.input_.value = value || '';\n    this.updateClasses_();\n};\nMaterialTextfield.prototype['change'] = MaterialTextfield.prototype.change;\n/**\n   * Focus text field.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.focus = function () {\n    this.input_.focus();\n    this.updateClasses_();\n};\nMaterialTextfield.prototype['focus'] = MaterialTextfield.prototype.focus;\n/**\n   * Blur text field.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.blur = function () {\n    this.input_.blur();\n    this.updateClasses_();\n};\nMaterialTextfield.prototype['blur'] = MaterialTextfield.prototype.blur;\n/**\n   * Initialize element.\n   */\nMaterialTextfield.prototype.init = function () {\n    if (this.element_) {\n        this.label_ = this.element_.querySelector('.' + this.CssClasses_.LABEL);\n        this.input_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n        if (this.input_) {\n            if (this.input_.hasAttribute(this.Constant_.MAX_ROWS_ATTRIBUTE)) {\n                this.maxRows = parseInt(this.input_.getAttribute(this.Constant_.MAX_ROWS_ATTRIBUTE), 10);\n                if (isNaN(this.maxRows)) {\n                    this.maxRows = this.Constant_.NO_MAX_ROWS;\n                }\n            }\n            if (this.input_.hasAttribute('placeholder')) {\n                this.element_.classList.add(this.CssClasses_.HAS_PLACEHOLDER);\n            }\n            this.boundUpdateClassesHandler = this.updateClasses_.bind(this);\n            this.boundFocusHandler = this.onFocus_.bind(this);\n            this.boundBlurHandler = this.onBlur_.bind(this);\n            this.boundResetHandler = this.onReset_.bind(this);\n            this.input_.addEventListener('input', this.boundUpdateClassesHandler);\n            this.input_.addEventListener('focus', this.boundFocusHandler);\n            this.input_.addEventListener('blur', this.boundBlurHandler);\n            this.input_.addEventListener('reset', this.boundResetHandler);\n            if (this.maxRows !== this.Constant_.NO_MAX_ROWS) {\n                // TODO: This should handle pasting multi line text.\n                // Currently doesn't.\n                this.boundKeyDownHandler = this.onKeyDown_.bind(this);\n                this.input_.addEventListener('keydown', this.boundKeyDownHandler);\n            }\n            var invalid = this.element_.classList.contains(this.CssClasses_.IS_INVALID);\n            this.updateClasses_();\n            this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n            if (invalid) {\n                this.element_.classList.add(this.CssClasses_.IS_INVALID);\n            }\n            if (this.input_.hasAttribute('autofocus')) {\n                this.element_.focus();\n                this.checkFocus();\n            }\n        }\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialTextfield,\n    classAsString: 'MaterialTextfield',\n    cssClass: 'mdl-js-textfield',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * MaterialSelectfield class\n   * @param {Element} element_ DOM element on which selectfield is attached\n   */\nvar MaterialSelectfield = function MaterialSelectfield(element_) {\n    this.element_ = element_;\n    // Initialize component\n    this.init();\n};\nwindow['MaterialSelectfield'] = MaterialSelectfield;\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialSelectfield.prototype.CssClasses_ = {\n    LABEL: 'mdl-selectfield__label',\n    SELECT: 'mdl-selectfield__select',\n    SELECTED_OPTION: 'mdl-selectfield__selected-option',\n    SELECTED_OPTION_TITLE: 'mdl-selectfield__selected-option-title',\n    MENU: 'mdl-selectfield__menu',\n    MENU_ITEM: 'mdl-selectfield__menu-item',\n    MENU_ITEM_ICON_CHECKED: 'mdl-selectfield__menu-item-icon-checked',\n    MENU_ITEM_ICON_UNCHECKED: 'mdl-selectfield__menu-item-icon-unchecked',\n    BACKDROP: 'mdl-selectfield__backdrop',\n    RIPPLE: 'mdl-ripple',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_CONTAINER: 'mdl-button__ripple-container',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    IS_UPGRADED: 'is-upgraded',\n    IS_DISABLED: 'is-disabled',\n    IS_FOCUSED: 'is-focused',\n    IS_OPENED: 'is-opened',\n    IS_SELECTED: 'is-selected',\n    IS_ACTIVE: 'is-active',\n    IS_DIRTY: 'is-dirty',\n    IS_INVALID: 'is-invalid',\n    FIXED: 'mdl-selectfield--fixed'\n};\n/**\n   * Keycode used in Selectfield component\n   *\n   * @enum {Number}\n   * @private\n   */\nMaterialSelectfield.prototype.KeyCodes_ = {\n    ENTER: 13,\n    ESCAPE: 27,\n    KEY_UP: 38,\n    KEY_DOWN: 40\n};\n/**\n   * Check Selectfield classe states\n   * @private\n   * @return {void}\n   */\nMaterialSelectfield.prototype.checkClasses_ = function () {\n    this.checkDirty_();\n    this.checkValidity_();\n    this.checkDisabled_();\n};\n/**\n   * Check if selectfield has value\n   * @private\n   * @return {void}\n   */\nMaterialSelectfield.prototype.checkDirty_ = function () {\n    if (this.select_.value) {\n        this.element_.classList.add(this.CssClasses_.IS_DIRTY);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DIRTY);\n    }\n};\n/**\n   * Check select validity\n   * @private\n   * @return {void}\n   */\nMaterialSelectfield.prototype.checkValidity_ = function () {\n    if (this.select_.validity.valid) {\n        this.element_.classList.remove(this.CssClasses_.IS_INVALID);\n    } else {\n        this.element_.classList.add(this.CssClasses_.IS_INVALID);\n    }\n};\n/**\n   * Check if selectfield is disabled\n   * @private\n   * @return {void}\n   */\nMaterialSelectfield.prototype.checkDisabled_ = function () {\n    if (this.select_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\n/**\n   * Check for selected option value\n   * @private\n   * @return {void}\n   */\nMaterialSelectfield.prototype.checkSelectedOption_ = function () {\n    if (!this.element_.classList.contains(this.CssClasses_.IS_DIRTY)) {\n        return;\n    }\n    if (this.select_.validity.valueMissing) {\n        this.selectedOptionValueElement_.innerText = '';\n    } else {\n        var options = this.select_.querySelectorAll('option');\n        var index = this.select_.selectedIndex;\n        this.selectedOptionValueElement_.innerText = options[index].innerHTML;\n    }\n};\n/**\n   * Trigger document click event to close all other selectfield elements\n   * except currently active\n   * @private\n   * @return {void}\n   */\nMaterialSelectfield.prototype.triggerDocumentClickEvent_ = function () {\n    var evt;\n    if (window.CustomEvent) {\n        try {\n            evt = new CustomEvent('click', {\n                sourceElement: this.selectedOptionElement_,\n                bubbles: false\n            });\n            document.body.dispatchEvent(evt);\n        } catch (e) {\n        }\n    } else {\n        evt = document.createEvent('CustomEvent');\n        evt.initEvent('click', false, false);\n        document.body.fireEvent(evt);\n    }\n};\n/**\n   * Element click handler\n   * @param  {Event} e Element event object\n   * @private\n   * @return {void}\n   */\nMaterialSelectfield.prototype.elementClickHandler_ = function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n};\n/**\n   * Element focus handler\n   * @private\n   * @return {void}\n   */\nMaterialSelectfield.prototype.elementFocusHandler_ = function () {\n    if (this.element_.classList.contains(this.CssClasses_.IS_DISABLED)) {\n        return;\n    }\n    if (!this.element_.classList.contains(this.CssClasses_.IS_FOCUSED)) {\n        this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n        this.element_.addEventListener('keydown', this.boundElementKeydownHandler);\n        this.element_.addEventListener('focusout', this.boundElementFocusoutHandler);\n        this.triggerDocumentClickEvent_();\n    }\n};\n/**\n   * Element focus handler\n   * @private\n   * @return {void}\n   */\nMaterialSelectfield.prototype.elementFocusoutHandler_ = function () {\n    if (this.menuElement_) {\n        return;\n    }\n    if (this.element_.classList.contains(this.CssClasses_.IS_FOCUSED)) {\n        this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n        this.element_.removeEventListener('keydown', this.boundElementKeydownHandler);\n        this.element_.removeEventListener('focusout', this.boundElementFocusoutHandler);\n    }\n};\n/**\n   * Element keydown handler\n   * @param  {Event} e Element event object\n   * @private\n   * @return {void}\n   */\nMaterialSelectfield.prototype.elementKeydownHandler_ = function (e) {\n    if (this.menuElement_) {\n        return;\n    }\n    var keyCode = e.keyCode;\n    if (keyCode === this.KeyCodes_.ENTER) {\n        e.preventDefault();\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n        this.open();\n    } else if (keyCode === this.KeyCodes_.KEY_UP) {\n        if (!this.menuElement_) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.stopImmediatePropagation();\n            this.open();\n            this.activateSelectedMenuItem_();\n        }\n    } else if (keyCode === this.KeyCodes_.KEY_DOWN) {\n        if (!this.menuElement_) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.stopImmediatePropagation();\n            this.open();\n            this.activateSelectedMenuItem_();\n        }\n    }\n};\n/**\n   * Select keydown handler\n   * @param  {Event} e Element event object\n   * @private\n   * @return {void}\n   */\nMaterialSelectfield.prototype.selectKeydownHandler_ = function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n};\n/**\n   * Menu item click handler\n   * @param  {Event} e Current menu item event object\n   * @private\n   * @return {void}\n   */\nMaterialSelectfield.prototype.menuItemClickHandler_ = function (e) {\n    var selectedItem;\n    var timeout = 0;\n    if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n        selectedItem = e.target.parentNode;\n        if (selectedItem.classList.contains(this.CssClasses_.RIPPLE_CONTAINER)) {\n            selectedItem = selectedItem.parentNode;\n        }\n        timeout = 100;\n    } else {\n        selectedItem = e.target;\n    }\n    setTimeout(function () {\n        var index = null;\n        if (selectedItem.getAttribute) {\n            index = selectedItem.getAttribute('data-index');\n        } else {\n            index = selectedItem.attributes.getNamedItem('data-index').value;\n        }\n        if (index !== null) {\n            this.selectOption_(index);\n            if (!this.select_.multiple) {\n                this.close();\n            }\n        }\n    }.bind(this), timeout);\n};\n/**\n   * Document click handler\n   * @param {Event} e document click event object\n   * @private\n   * @return {void}\n   */\nMaterialSelectfield.prototype.documentClickHandler_ = function (e) {\n    if (this.selectedOptionElement_ === e.target) {\n        return e.stopPropagation();\n    }\n    if (this.selectedOptionElement_ === e.target.parentNode) {\n        return e.stopPropagation();\n    }\n    if (e.target.classList.contains(this.CssClasses_.MENU_ITEM)) {\n        return e.stopPropagation();\n    }\n    if (e.target.parentNode.classList.contains(this.CssClasses_.MENU_ITEM)) {\n        return e.stopPropagation();\n    }\n    if (this.element_.classList.contains(this.CssClasses_.IS_OPENED)) {\n        e.stopPropagation();\n    }\n    this.close();\n};\n/**\n   * Escape key keyup handler\n   * @param  {Event} e Keyup event object\n   * @return {void}\n   */\nMaterialSelectfield.prototype.keyboardNavigationHandler_ = function (e) {\n    var keyCode = e.keyCode;\n    if (keyCode === this.KeyCodes_.ESCAPE) {\n        e.preventDefault();\n        this.close();\n    } else if (keyCode === this.KeyCodes_.KEY_UP) {\n        e.preventDefault();\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n        this.menuItemUp_();\n    } else if (keyCode === this.KeyCodes_.KEY_DOWN) {\n        e.preventDefault();\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n        this.menuItemDown_();\n    } else if (keyCode === this.KeyCodes_.ENTER) {\n        e.preventDefault();\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n        this.menuItemSelect_();\n    }\n};\n/**\n   * Selected option click handler\n   * @param {Event} e Selected option click event object\n   * @private\n   * @return {void}\n   */\nMaterialSelectfield.prototype.selectedOptionClickHandler_ = function (e) {\n    e.preventDefault();\n    if (this.element_.classList.contains(this.CssClasses_.IS_OPENED)) {\n        this.close();\n    } else {\n        this.triggerDocumentClickEvent_();\n        this.open();\n    }\n};\n/**\n   * Return  currently active menu item index\n   * @return {Number} Current active menu item index\n   */\nMaterialSelectfield.prototype.getActiveMenuItemIndex_ = function () {\n    var index = -1;\n    if (this.menuElement_) {\n        var menuItems = this.menuElement_.querySelectorAll('.' + this.CssClasses_.MENU_ITEM);\n        for (var i = 0; i < menuItems.length; i++) {\n            var menuItem = menuItems[i];\n            if (menuItem.classList.contains(this.CssClasses_.IS_ACTIVE)) {\n                index = i;\n                break;\n            }\n        }\n    }\n    if (index < 0 && !this.select_.multiple) {\n        index = this.select_.selectedIndex;\n    }\n    return index;\n};\n/**\n   * Get focus menu item for currently active menu item. Focus item is the one\n   * to scroll menu element to so that active item is in the middle (3rd item).\n   * @param  {Element} menuItem Menu item element\n   * @return {Element}          Focus menu item element\n   */\nMaterialSelectfield.prototype.getFocusMenuItem_ = function (menuItem) {\n    var focusMenuItem = menuItem;\n    for (var i = 0; i < 2; i++) {\n        if (focusMenuItem.previousSibling) {\n            focusMenuItem = focusMenuItem.previousSibling;\n        }\n    }\n    return focusMenuItem;\n};\n/**\n   * Switch current active menu item to one above if exists.\n   * If current one is first, switch to last.\n   * @private\n   * @return {void}\n   */\nMaterialSelectfield.prototype.menuItemUp_ = function () {\n    if (!this.menuElement_) {\n        return;\n    }\n    var activeIndex = this.getActiveMenuItemIndex_();\n    if (activeIndex < 0) {\n        activeIndex = 0;\n    }\n    var upIndex = activeIndex - 1;\n    if (upIndex < 0) {\n        upIndex = this.select_.options.length - 1;\n    }\n    var menuItems = this.menuElement_.querySelectorAll('.' + this.CssClasses_.MENU_ITEM);\n    if (menuItems[activeIndex]) {\n        menuItems[activeIndex].classList.remove(this.CssClasses_.IS_ACTIVE);\n    }\n    if (menuItems[upIndex]) {\n        menuItems[upIndex].classList.add(this.CssClasses_.IS_ACTIVE);\n        menuItems[upIndex].focus();\n        var focusItem = this.getFocusMenuItem_(menuItems[upIndex]);\n        this.menuElement_.scrollTop = focusItem.offsetTop - 8;\n    }\n};\n/**\n   * Switch current active menu item to one below if exists.\n   * If current one is last, switch to first.\n   * @private\n   * @return {void}\n   */\nMaterialSelectfield.prototype.menuItemDown_ = function () {\n    if (!this.menuElement_) {\n        return;\n    }\n    var activeIndex = this.getActiveMenuItemIndex_();\n    if (activeIndex < 0) {\n        activeIndex = this.select_.options.length - 1;\n    }\n    var downIndex = activeIndex + 1;\n    if (downIndex >= this.select_.options.length) {\n        downIndex = 0;\n    }\n    var menuItems = this.menuElement_.querySelectorAll('.' + this.CssClasses_.MENU_ITEM);\n    if (menuItems[activeIndex]) {\n        menuItems[activeIndex].classList.remove(this.CssClasses_.IS_ACTIVE);\n    }\n    if (menuItems[downIndex]) {\n        menuItems[downIndex].classList.add(this.CssClasses_.IS_ACTIVE);\n        menuItems[downIndex].focus();\n        var focusItem = this.getFocusMenuItem_(menuItems[downIndex]);\n        this.menuElement_.scrollTop = focusItem.offsetTop - 8;\n    }\n};\n/**\n   * Activate currently selected menu item\n   * @return {void}\n   */\nMaterialSelectfield.prototype.activateSelectedMenuItem_ = function () {\n    var activeIndex;\n    var menuItems;\n    activeIndex = this.getActiveMenuItemIndex_();\n    menuItems = this.menuElement_.querySelectorAll('.' + this.CssClasses_.MENU_ITEM);\n    if (menuItems[activeIndex]) {\n        menuItems[activeIndex].classList.remove(this.CssClasses_.IS_ACTIVE);\n    }\n    if (menuItems[this.select_.selectedIndex]) {\n        menuItems[this.select_.selectedIndex].classList.remove(this.CssClasses_.IS_ACTIVE);\n    }\n};\n/**\n   * Select current active menu item.\n   * @private\n   * @return {void}\n   */\nMaterialSelectfield.prototype.menuItemSelect_ = function () {\n    var activeIndex = this.getActiveMenuItemIndex_();\n    if (activeIndex >= 0 && activeIndex < this.select_.options.length) {\n        this.selectOption_(activeIndex);\n        if (!this.select_.multiple) {\n            this.close();\n        }\n    }\n};\n/**\n   * Render selectfield component\n   * @private\n   * @return {void}\n   */\nMaterialSelectfield.prototype.render_ = function () {\n    if (this.menuElement_) {\n        return;\n    }\n    // Render selectfield menu\n    this.renderMenu_();\n    if (this.element_.classList.contains(this.CssClasses_.FIXED)) {\n        this.backdropElement_ = document.createElement('div');\n        this.backdropElement_.classList.add(this.CssClasses_.BACKDROP);\n        document.appendChild(this.backdropElement_);\n        document.body.appendChild(this.menuElement_);\n    } else {\n        this.element_.appendChild(this.menuElement_);\n    }\n    if (this.element_.classList.contains(this.CssClasses_.IS_DIRTY)) {\n        var index = this.select_.selectedIndex;\n        var menuItems = this.menuElement_.querySelectorAll('.' + this.CssClasses_.MENU_ITEM);\n        var selectedMenuItem = this.menuElement_.querySelector('.' + this.CssClasses_.MENU_ITEM + '.' + this.CssClasses_.IS_SELECTED);\n        var menuItemsCount = menuItems.length;\n        // Calculate top offset\n        var topOffset = 0;\n        if (index < 2) {\n            topOffset = -(index * 48);\n        } else if (index > menuItemsCount - 1 - 2) {\n            if (index === menuItemsCount - 1) {\n                topOffset = -(4 * 48);\n            } else if (index === menuItemsCount - 2) {\n                topOffset = -(3 * 48);\n            } else {\n                topOffset = -(2 * 48);\n            }\n        } else {\n            topOffset = -(2 * 48);\n        }\n        if (topOffset < 0) {\n            this.menuElement_.style.top = topOffset + 'px';\n        }\n        if (selectedMenuItem) {\n            // Calculate which menu item is in click ofcus\n            var focusMenuItem = selectedMenuItem;\n            for (var i = 0; i < 2; i++) {\n                if (focusMenuItem.previousSibling) {\n                    focusMenuItem = focusMenuItem.previousSibling;\n                }\n            }\n            this.menuElement_.scrollTop = focusMenuItem.offsetTop - 8;\n        } else {\n            this.menuElement_.style.top = '0px';\n        }\n    } else {\n        this.menuElement_.style.top = '0px';\n    }\n};\n/**\n   * Render selectfield menu\n   * @private\n   * @return {Element} Selectfield menu\n   */\nMaterialSelectfield.prototype.renderMenu_ = function () {\n    if (!this.menuElement_) {\n        this.menuElement_ = document.createElement('div');\n        this.menuElement_.classList.add(this.CssClasses_.MENU);\n        var options = this.select_.querySelectorAll('option');\n        for (var i = 0; i < options.length; i++) {\n            var option = options[i];\n            var menuItem = this.renderMenuItem_(option);\n            if (menuItem.setAttribute) {\n                menuItem.setAttribute('data-index', i);\n                menuItem.setAttribute('data-value', option.value);\n            } else {\n                var indexAttr = document.createAttribute('data-index');\n                indexAttr.value = i;\n                var valueAttr = document.createAttribute('data-value');\n                valueAttr.value = option.value;\n                menuItem.attributes.setNamedItem(indexAttr);\n                menuItem.attributes.setNamedItem(valueAttr);\n            }\n            // Check if current option is selected\n            if (this.select_.selectedIndex === i) {\n                menuItem.classList.add(this.CssClasses_.IS_SELECTED);\n            }\n            this.menuElement_.appendChild(menuItem);\n        }\n    }\n    return this.menuElement_;\n};\n/**\n   * Render selectfield menu item\n   * @param  {Element} option Select option element\n   * @private\n   * @return {Element}        Rendered menu item element\n   */\nMaterialSelectfield.prototype.renderMenuItem_ = function (option) {\n    var menuItem = document.createElement('div');\n    menuItem.classList.add(this.CssClasses_.MENU_ITEM);\n    if (option.selected) {\n        menuItem.classList.add(this.CssClasses_.IS_SELECTED);\n    }\n    menuItem.innerHTML = option.innerHTML;\n    if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n        menuItem.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n        var rippleContainer = document.createElement('span');\n        rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n        var rippleElement = document.createElement('span');\n        rippleElement.classList.add(this.CssClasses_.RIPPLE);\n        rippleContainer.appendChild(rippleElement);\n        rippleContainer.addEventListener('mouseup', this.boundMenuItemClickHandler);\n        menuItem.appendChild(rippleContainer);\n        componentHandler.upgradeElement(menuItem, 'MaterialRipple');\n    } else {\n        menuItem.addEventListener('click', this.boundMenuItemClickHandler);\n    }\n    return menuItem;\n};\n/**\n   * Select option in hidden select element.\n   * Since this method can be called using API, we must check\n   * if menuElement_ exists to do the necesarry logic. This can be\n   * bypassed by ensuring that menuElement_ always exist, but since we didn't\n   * want to contain unnecesary DOM elements this is must-have.\n   * @param  {number} index Selected menu item index\n   * @private\n   * @return {void}\n   */\nMaterialSelectfield.prototype.selectOption_ = function (index) {\n    var iterator = 0;\n    var option;\n    var menuItems;\n    var selectedItem;\n    var selectedOption;\n    index = parseInt(index, 10);\n    if (!this.select_.multiple && this.select_.selectedIndex === index) {\n        // Currently selected option is selected again, do nothing\n        return;\n    }\n    if (!this.select_.options[index]) {\n        // We assume that select menu is cleared using API\n        if (this.select_.multiple) {\n            if (this.menuElement_) {\n                menuItems = this.menuElement_.querySelectorAll('.' + this.CssClasses_.MENU_ITEM);\n            }\n            for (iterator = 0; iterator < this.select_.options.length; iterator++) {\n                option = this.select_.options[iterator];\n                option.selected = false;\n                if (menuItems[index]) {\n                    menuItems[index].classList.remove(this.CssClasses_.IS_SELECTED);\n                }\n            }\n        } else {\n            this.select_.selectedIndex = index;\n            if (this.menuElement_) {\n                selectedItem = this.menuElement_.querySelector('.' + this.CssClasses_.IS_SELECTED);\n                if (selectedItem) {\n                    selectedItem.classList.remove(this.CssClasses_.IS_SELECTED);\n                }\n            }\n        }\n    }\n    if (this.select_.multiple) {\n        selectedOption = this.select_.options[index];\n        // Currently selected option is already selected, unselect it since this\n        // is multiple options select input\n        if (selectedOption) {\n            if (selectedOption.selected) {\n                selectedOption.selected = false;\n            } else {\n                selectedOption.selected = true;\n            }\n        }\n        if (this.menuElement_) {\n            menuItems = this.menuElement_.querySelectorAll('.' + this.CssClasses_.MENU_ITEM);\n            if (menuItems[index]) {\n                if (selectedOption.selected) {\n                    menuItems[index].classList.add(this.CssClasses_.IS_SELECTED);\n                } else {\n                    menuItems[index].classList.remove(this.CssClasses_.IS_SELECTED);\n                }\n            }\n        }\n        var selectedValues = [];\n        for (iterator = 0; iterator < this.select_.options.length; iterator++) {\n            option = this.select_.options[iterator];\n            if (option && option.selected) {\n                selectedValues.push(option.label);\n            }\n        }\n        this.selectedOptionValueElement_.innerHTML = selectedValues.join(', ');\n    } else {\n        this.select_.selectedIndex = index;\n        if (this.menuElement_) {\n            selectedItem = this.menuElement_.querySelector('.' + this.CssClasses_.IS_SELECTED);\n            if (selectedItem) {\n                selectedItem.classList.remove(this.CssClasses_.IS_SELECTED);\n            }\n            menuItems = this.menuElement_.querySelectorAll('.' + this.CssClasses_.MENU_ITEM);\n            if (menuItems[index]) {\n                menuItems[index].classList.add(this.CssClasses_.IS_SELECTED);\n                this.selectedOptionValueElement_.innerHTML = menuItems[index].innerHTML;\n            } else {\n                this.selectedOptionValueElement_.innerHTML = '';\n            }\n        }\n        var selectOptions = this.select_.options;\n        if (selectOptions[index]) {\n            this.selectedOptionValueElement_.innerHTML = selectOptions[index].label;\n        } else {\n            this.selectedOptionValueElement_.innerHTML = '';\n        }\n    }\n    this.checkClasses_();\n    var changeEvent;\n    if (window.Event) {\n        try {\n            changeEvent = new Event('change', { bubbles: false });\n            this.element_.dispatchEvent(changeEvent);\n            this.select_.dispatchEvent(changeEvent);\n        } catch (e) {\n        }\n    } else {\n        changeEvent = document.createEvent('Event');\n        changeEvent.initEvent('click', false, false);\n        this.select_.fireEvent(changeEvent);\n    }\n};\n/**\n   * Open selectfield component widget\n   * @public\n   * @return {void}\n   */\nMaterialSelectfield.prototype.open = function () {\n    if (this.element_.classList.contains(this.CssClasses_.IS_OPENED)) {\n        return;\n    }\n    this.render_();\n    document.body.addEventListener('click', this.boundDocumentClickHandler);\n    document.body.addEventListener('keydown', this.boundKeyboardNavigationHandler);\n    setTimeout(function () {\n        this.element_.classList.add(this.CssClasses_.IS_OPENED);\n        this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n    }.bind(this));\n};\nMaterialSelectfield.prototype['open'] = MaterialSelectfield.prototype.open;\n/**\n   * Close selectfield component widget\n   * @public\n   * @return {void} [description]\n   */\nMaterialSelectfield.prototype.close = function () {\n    if (!this.element_.classList.contains(this.CssClasses_.IS_OPENED)) {\n        return;\n    }\n    this.element_.classList.remove(this.CssClasses_.IS_OPENED);\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n    document.body.removeEventListener('click', this.boundDocumentClickHandler);\n    document.body.removeEventListener('keydown', this.boundKeyboardNavigationHandler);\n    setTimeout(function () {\n        if (this.menuElement_.remove) {\n            this.menuElement_.remove();\n        } else {\n            this.menuElement_.parentNode.removeChild(this.menuElement_);\n        }\n        this.menuElement_ = null;\n    }.bind(this), 200);\n};\nMaterialSelectfield.prototype['close'] = MaterialSelectfield.prototype.close;\n/**\n   * Enable selectfield\n   * @public\n   * @return {void}\n   */\nMaterialSelectfield.prototype.enable = function () {\n    this.select_.disabled = false;\n    this.element_.tabIndex = 0;\n    this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    this.selectedOptionElement_.addEventListener('click', this.boundSelectedOptionClickHandler);\n};\nMaterialSelectfield.prototype['enable'] = MaterialSelectfield.prototype.enable;\n/**\n   * Disable selectfield\n   * @public\n   * @return {void}\n   */\nMaterialSelectfield.prototype.disable = function () {\n    this.select_.disabled = true;\n    this.element_.tabIndex = -1;\n    this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    this.selectedOptionElement_.removeEventListener('click', this.boundSelectedOptionClickHandler);\n};\nMaterialSelectfield.prototype['disable'] = MaterialSelectfield.prototype.disable;\n/**\n   * Set currently selected index in select element\n   * @param {Number} index Selected index\n   */\nMaterialSelectfield.prototype.setSelectedIndex = function (index) {\n    this.selectOption_(index);\n};\nMaterialSelectfield.prototype['setSelectedIndex'] = MaterialSelectfield.prototype.setSelectedIndex;\n/**\n   * Set currently selected value in select element\n   * @param {Number} value Selected value\n   */\nMaterialSelectfield.prototype.setSelectedValue = function (value) {\n    console.log(value);\n};\nMaterialSelectfield.prototype['setSelectedValue'] = MaterialSelectfield.prototype.setSelectedValue;\n/**\n   * Initialize component\n   * @return {void}\n   */\nMaterialSelectfield.prototype.init = function () {\n    if (this.element_) {\n        this.select_ = this.element_.querySelector('.' + this.CssClasses_.SELECT);\n        if (!this.select_) {\n            throw new Error('Component must have select element as a child');\n        }\n        if (this.element_.tabIndex < 0) {\n            this.element_.setAttribute('tabindex', 0);\n        }\n        // Prepare event handlers\n        this.boundElementClickHandler = this.elementClickHandler_.bind(this);\n        this.boundElementFocusHandler = this.elementFocusHandler_.bind(this);\n        this.boundElementFocusoutHandler = this.elementFocusoutHandler_.bind(this);\n        this.boundElementKeydownHandler = this.elementKeydownHandler_.bind(this);\n        this.boundSelectKeydownHandler = this.selectKeydownHandler_.bind(this);\n        this.boundSelectedOptionClickHandler = this.selectedOptionClickHandler_.bind(this);\n        this.boundDocumentClickHandler = this.documentClickHandler_.bind(this);\n        this.boundKeyboardNavigationHandler = this.keyboardNavigationHandler_.bind(this);\n        this.boundMenuItemClickHandler = this.menuItemClickHandler_.bind(this);\n        this.element_.addEventListener('focus', this.boundElementFocusHandler);\n        this.selectedOptionValueElement_ = document.createElement('span');\n        this.selectedOptionValueElement_.classList.add(this.CssClasses_.SELECTED_OPTION_TITLE);\n        this.selectedOptionElement_ = document.createElement('div');\n        this.selectedOptionElement_.classList.add(this.CssClasses_.SELECTED_OPTION);\n        this.selectedOptionElement_.appendChild(this.selectedOptionValueElement_);\n        var arrowIcon = document.createElement('i');\n        arrowIcon.classList.add('material-icons');\n        arrowIcon.innerHTML = 'arrow_drop_down';\n        this.selectedOptionElement_.appendChild(arrowIcon);\n        this.element_.appendChild(this.selectedOptionElement_);\n        var options = this.select_.options;\n        if (this.select_.multiple) {\n            var option;\n            var values = [];\n            for (var i = 0; i < options.length; i++) {\n                option = options[i];\n                if (option.selected) {\n                    values.push(option.label);\n                }\n            }\n            this.selectedOptionValueElement_.innerHTML = values.join(', ');\n        } else {\n            this.selectedOptionValueElement_.innerText = '';\n            if (options[this.select_.selectedIndex]) {\n                this.selectedOptionValueElement_.innerText = options[this.select_.selectedIndex].innerText;\n            }\n        }\n        if (this.select_.disabled) {\n            this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.IS_DISABLED)) {\n            this.disable();\n        } else {\n            this.enable();\n            this.element_.addEventListener('click', this.boundElementClickHandler);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n        }\n        // @TODO: Remove after initial development\n        // this.open();\n        this.checkClasses_();\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialSelectfield,\n    classAsString: 'MaterialSelectfield',\n    cssClass: 'mdl-js-selectfield',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Tooltip MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialTooltip = function MaterialTooltip(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialTooltip'] = MaterialTooltip;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialTooltip.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialTooltip.prototype.CssClasses_ = {\n    IS_ACTIVE: 'is-active',\n    BOTTOM: 'mdl-tooltip--bottom',\n    LEFT: 'mdl-tooltip--left',\n    RIGHT: 'mdl-tooltip--right',\n    TOP: 'mdl-tooltip--top'\n};\n/**\n   * Handle mouseenter for tooltip.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTooltip.prototype.handleMouseEnter_ = function (event) {\n    var props = event.target.getBoundingClientRect();\n    var left = props.left + props.width / 2;\n    var top = props.top + props.height / 2;\n    var marginLeft = -1 * (this.element_.offsetWidth / 2);\n    var marginTop = -1 * (this.element_.offsetHeight / 2);\n    if (this.element_.classList.contains(this.CssClasses_.LEFT) || this.element_.classList.contains(this.CssClasses_.RIGHT)) {\n        left = props.width / 2;\n        if (top + marginTop < 0) {\n            this.element_.style.top = 0;\n            this.element_.style.marginTop = 0;\n        } else {\n            this.element_.style.top = top + 'px';\n            this.element_.style.marginTop = marginTop + 'px';\n        }\n    } else if (left + marginLeft < 0) {\n        this.element_.style.left = 0;\n        this.element_.style.marginLeft = 0;\n    } else {\n        this.element_.style.left = left + 'px';\n        this.element_.style.marginLeft = marginLeft + 'px';\n    }\n    if (this.element_.classList.contains(this.CssClasses_.TOP)) {\n        this.element_.style.top = props.top - this.element_.offsetHeight - 10 + 'px';\n    } else if (this.element_.classList.contains(this.CssClasses_.RIGHT)) {\n        this.element_.style.left = props.left + props.width + 10 + 'px';\n    } else if (this.element_.classList.contains(this.CssClasses_.LEFT)) {\n        this.element_.style.left = props.left - this.element_.offsetWidth - 10 + 'px';\n    } else {\n        this.element_.style.top = props.top + props.height + 10 + 'px';\n    }\n    this.element_.classList.add(this.CssClasses_.IS_ACTIVE);\n};\n/**\n   * Handle mouseleave for tooltip.\n   *\n   * @private\n   */\nMaterialTooltip.prototype.handleMouseLeave_ = function () {\n    this.element_.classList.remove(this.CssClasses_.IS_ACTIVE);\n};\n/**\n   * Initialize element.\n   */\nMaterialTooltip.prototype.init = function () {\n    if (this.element_) {\n        var forElId = this.element_.getAttribute('for');\n        if (forElId) {\n            this.forElement_ = document.getElementById(forElId);\n        }\n        if (this.forElement_) {\n            // It's left here because it prevents accidental text selection on Android\n            if (!this.forElement_.hasAttribute('tabindex')) {\n                this.forElement_.setAttribute('tabindex', '0');\n            }\n            this.boundMouseEnterHandler = this.handleMouseEnter_.bind(this);\n            this.boundMouseLeaveHandler = this.handleMouseLeave_.bind(this);\n            this.forElement_.addEventListener('mouseenter', this.boundMouseEnterHandler, false);\n            this.forElement_.addEventListener('touchend', this.boundMouseEnterHandler, false);\n            this.forElement_.addEventListener('mouseleave', this.boundMouseLeaveHandler, false);\n            window.addEventListener('touchstart', this.boundMouseLeaveHandler);\n        }\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialTooltip,\n    classAsString: 'MaterialTooltip',\n    cssClass: 'mdl-tooltip'\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Data Table Card MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {Element} element The element that will be upgraded.\n   */\nvar MaterialDataTable = function MaterialDataTable(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialDataTable'] = MaterialDataTable;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialDataTable.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialDataTable.prototype.CssClasses_ = {\n    DATA_TABLE: 'mdl-data-table',\n    SELECTABLE: 'mdl-data-table--selectable',\n    SELECT_ELEMENT: 'mdl-data-table__select',\n    IS_SELECTED: 'is-selected',\n    IS_UPGRADED: 'is-upgraded'\n};\n/**\n   * Generates and returns a function that toggles the selection state of a\n   * single row (or multiple rows).\n   *\n   * @param {Element} checkbox Checkbox that toggles the selection state.\n   * @param {Element} row Row to toggle when checkbox changes.\n   * @param {(Array<Object>|NodeList)=} optRows Rows to toggle when checkbox changes.\n   * @return {?function()} a function to toggle the selection state of the row(s).\n   * @private\n   */\nMaterialDataTable.prototype.selectRow_ = function (checkbox, row, optRows) {\n    if (row) {\n        return function () {\n            if (checkbox.checked) {\n                row.classList.add(this.CssClasses_.IS_SELECTED);\n            } else {\n                row.classList.remove(this.CssClasses_.IS_SELECTED);\n            }\n        }.bind(this);\n    }\n    if (optRows) {\n        return function () {\n            var i;\n            var el;\n            if (checkbox.checked) {\n                for (i = 0; i < optRows.length; i++) {\n                    el = optRows[i].querySelector('td').querySelector('.mdl-checkbox');\n                    el['MaterialCheckbox'].check();\n                    optRows[i].classList.add(this.CssClasses_.IS_SELECTED);\n                }\n            } else {\n                for (i = 0; i < optRows.length; i++) {\n                    el = optRows[i].querySelector('td').querySelector('.mdl-checkbox');\n                    el['MaterialCheckbox'].uncheck();\n                    optRows[i].classList.remove(this.CssClasses_.IS_SELECTED);\n                }\n            }\n        }.bind(this);\n    }\n    return null;\n};\n/**\n   * Creates a checkbox for a single or or multiple rows and hooks up the\n   * event handling.\n   *\n   * @param {Element} row Row to toggle when checkbox changes.\n   * @param {(Array<Object>|NodeList)=} optRows Rows to toggle when checkbox changes.\n   * @return {Element} the created parent label.\n   * @private\n   */\nMaterialDataTable.prototype.createCheckbox_ = function (row, optRows) {\n    var label = document.createElement('label');\n    var labelClasses = [\n        'mdl-checkbox',\n        'mdl-js-checkbox',\n        'mdl-js-ripple-effect',\n        this.CssClasses_.SELECT_ELEMENT\n    ];\n    label.className = labelClasses.join(' ');\n    var checkbox = document.createElement('input');\n    checkbox.type = 'checkbox';\n    checkbox.classList.add('mdl-checkbox__input');\n    if (row) {\n        checkbox.checked = row.classList.contains(this.CssClasses_.IS_SELECTED);\n        checkbox.addEventListener('change', this.selectRow_(checkbox, row));\n    } else if (optRows) {\n        checkbox.addEventListener('change', this.selectRow_(checkbox, null, optRows));\n    }\n    label.appendChild(checkbox);\n    componentHandler.upgradeElement(label, 'MaterialCheckbox');\n    return label;\n};\n/**\n   * Initialize element.\n   */\nMaterialDataTable.prototype.init = function () {\n    if (this.element_) {\n        var firstHeader = this.element_.querySelector('th');\n        var bodyRows = Array.prototype.slice.call(this.element_.querySelectorAll('tbody tr'));\n        var footRows = Array.prototype.slice.call(this.element_.querySelectorAll('tfoot tr'));\n        var rows = bodyRows.concat(footRows);\n        if (this.element_.classList.contains(this.CssClasses_.SELECTABLE)) {\n            var th = document.createElement('th');\n            var headerCheckbox = this.createCheckbox_(null, rows);\n            th.appendChild(headerCheckbox);\n            firstHeader.parentElement.insertBefore(th, firstHeader);\n            for (var i = 0; i < rows.length; i++) {\n                var firstCell = rows[i].querySelector('td');\n                if (firstCell) {\n                    var td = document.createElement('td');\n                    if (rows[i].parentNode.nodeName.toUpperCase() === 'TBODY') {\n                        var rowCheckbox = this.createCheckbox_(rows[i]);\n                        td.appendChild(rowCheckbox);\n                    }\n                    rows[i].insertBefore(td, firstCell);\n                }\n            }\n            this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n        }\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialDataTable,\n    classAsString: 'MaterialDataTable',\n    cssClass: 'mdl-js-data-table'\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for date picker MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialDatePicker = function MaterialDatePicker(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialDatePicker'] = MaterialDatePicker;\n/**\n   * Global date picker locales\n   * Currently allowed formats: ['mm/dd/yyyy', 'dd.mm.yyyy', 'yyyy-mm-dd']\n   * @type {Object}\n   * @public\n   */\nMaterialDatePicker.locales = {\n    /**\n     * Date format for input formatting\n     * @type {string}\n     */\n    format: 'yyyy-mm-dd',\n    weekStart: 0,\n    weekDays: [\n        'Sunday',\n        'Monday',\n        'Tuesday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday'\n    ],\n    weekDaysShort: [\n        'Sun',\n        'Mon',\n        'Tue',\n        'Wed',\n        'Thu',\n        'Fri',\n        'Sat'\n    ],\n    weekDaysLetter: [\n        'S',\n        'M',\n        'T',\n        'W',\n        'T',\n        'F',\n        'S'\n    ],\n    months: [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December'\n    ],\n    monthsShort: [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n        'Jul',\n        'Aug',\n        'Sep',\n        'Oct',\n        'Nov',\n        'Dec'\n    ],\n    actions: {\n        cancel: 'Cancel',\n        ok: 'Ok'\n    }\n};\n/**\n   * Instance based date picker locales.\n   * Overrides global date picker locales\n   *\n   * @type {Object}\n   * @public\n   */\nMaterialDatePicker.prototype.locales = {};\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialDatePicker.prototype.Constant_ = {};\n/**\n   * Store events in one place so they can be updated easily.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialDatePicker.prototype.Event_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialDatePicker.prototype.CssClasses_ = {\n    // General component classes\n    IS_UPGRADED: 'is-upgraded',\n    IS_VISIBLE: 'is-visible',\n    IS_ATTACHED: 'is-attached',\n    IS_INVALID: 'is-invalid',\n    IS_FOCUSED: 'is-focused',\n    IS_DIRTY: 'is-dirty',\n    IS_FIXED: 'is-fixed',\n    // Appearance classes\n    INLINE: 'mdl-datepicker--inline',\n    FIXED: 'mdl-datepicker--fixed',\n    LANDSCAPE: 'mdl-datepicker--landscape',\n    // Datepicker related classes\n    BACKDROP: 'mdl-datepicker__backdrop',\n    WIDGET: 'mdl-datepicker__widget',\n    INPUT: 'mdl-datepicker__input',\n    NAVIGATION: 'mdl-datepicker__navigation',\n    CALENDAR: 'mdl-datepicker__calendar',\n    YEAR: 'mdl-datepicker__year',\n    YEAR_SELECTED: 'is-selected',\n    YEAR_DISABLED: 'is-disabled',\n    YEAR_PICKER: 'is-year-picker',\n    YEAR_PICKER_ELEMENT: 'mdl-datepicker__year-picker',\n    MONTH: 'mdl-datepicker__month',\n    WEEKS: 'mdl-datepicker__weeks',\n    WEEK: 'mdl-datepicker__week',\n    WEEK_DAYS: 'mdl-datepicker__week-days',\n    DATE: 'mdl-datepicker__date',\n    DATE_TODAY: 'is-today',\n    DATE_SELECTED: 'is-selected',\n    DATE_EMPTY: 'is-empty',\n    DATE_DISABLED: 'is-disabled',\n    MONTH_CURRENT: 'mdl-datepicker__current-month',\n    MONTH_PREVIOUS: 'mdl-datepicker__previous-month',\n    MONTH_NEXT: 'mdl-datepicker__next-month',\n    HEADER: 'mdl-datepicker__header',\n    HEADER_YEAR: 'mdl-datepicker__header-year',\n    HEADER_DATE: 'mdl-datepicker__header-date',\n    CALENDAR_PREVIOUS: 'mdl-datepicker__calendar--previous',\n    CALENDAR_NEXT: 'mdl-datepicker__calendar--next',\n    ACTIONS: 'mdl-datepicker__actions',\n    ACTION_CANCEL: 'mdl-datepicker__cancel',\n    ACTION_OK: 'mdl-datepicker__ok'\n};\nMaterialDatePicker.prototype.isInitialized_ = null;\nMaterialDatePicker.prototype.currentDate_ = null;\nMaterialDatePicker.prototype.selectedDate_ = null;\nMaterialDatePicker.prototype.pickedDate_ = null;\nMaterialDatePicker.prototype.minDate_ = null;\nMaterialDatePicker.prototype.maxDate_ = null;\n/**\n   * Trigger date picker internal events\n   * @param {string} eventName  Event which will be triggered on component element\n   * @private\n   * @return {void}\n   */\nMaterialDatePicker.prototype.triggerEvent_ = function (eventName) {\n    var evt = document.createEvent('Events');\n    evt.initEvent(eventName, false, false);\n    this.element_.dispatchEvent(evt);\n};\n/**\n   * Cancel action click handler\n   * @param {Event} e click event object\n   * @private\n   * @return {void}\n   */\nMaterialDatePicker.prototype.cancelHandler_ = function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    this.close();\n    if (this.selectedDate_) {\n        this.pickedDate_.setFullYear(this.selectedDate_.getFullYear());\n        this.pickedDate_.setMonth(this.selectedDate_.getMonth());\n        this.pickedDate_.setDate(this.selectedDate_.getDate());\n    }\n    this.updateHeader_();\n    this.updateMonthTitle_();\n    this.changeCurrentMonth_(this.pickedDate_);\n    if (this.element_.classList.contains(this.CssClasses_.YEAR_PICKER)) {\n        this.element_.classList.remove(this.CssClasses_.YEAR_PICKER);\n    }\n};\n/**\n   * Ok action click handler\n   * @param {Event} e click event object\n   * @private\n   * @return {void}\n   */\nMaterialDatePicker.prototype.okHandler_ = function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    if (!this.selectedDate_) {\n        this.selectedDate_ = new Date();\n    }\n    this.selectedDate_.setFullYear(this.pickedDate_.getFullYear());\n    this.selectedDate_.setMonth(this.pickedDate_.getMonth());\n    this.selectedDate_.setDate(this.pickedDate_.getDate());\n    if (this.input_) {\n        this.input_.value = this.formatInputDate_(this.selectedDate_);\n        if (this.element_.MaterialTextfield) {\n            this.element_.MaterialTextfield.checkValidity();\n        }\n    }\n    this.element_.classList.add(this.CssClasses_.IS_DIRTY);\n    if (this.element_.classList.contains(this.CssClasses_.YEAR_PICKER)) {\n        this.element_.classList.remove(this.CssClasses_.YEAR_PICKER);\n    }\n    this.triggerEvent_('change');\n    this.close();\n};\n/**\n   * Date picker input focus handler\n   * @param {Event} e focus event object\n   * @private\n   * @return {void}\n   */\nMaterialDatePicker.prototype.inputFocusHandler_ = function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    this.input_.blur();\n    this.open();\n};\n/**\n   * Date picker input blur handler\n   * @param {Event} e focusout event object\n   * @private\n   * @return {void}\n   */\nMaterialDatePicker.prototype.inputBlurHandler_ = function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n};\n/**\n   * Header year click handler\n   * @param {Event} e Click event object\n   * @private\n   * @return {void}\n   */\nMaterialDatePicker.prototype.headerYearClickHandler_ = function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    if (this.widgetElement_ && !this.widgetElement_.classList.contains(this.CssClasses_.YEAR_PICKER)) {\n        this.widgetElement_.classList.add(this.CssClasses_.YEAR_PICKER);\n        var selectedYear = this.yearPickerElement_.querySelector('.' + this.CssClasses_.YEAR_SELECTED);\n        if (selectedYear) {\n            var focusYear = selectedYear;\n            for (var i = 0; i < 3; i++) {\n                if (focusYear.previousElementSibling) {\n                    focusYear = focusYear.previousElementSibling;\n                }\n            }\n            focusYear.parentNode.scrollTop = focusYear.offsetTop;\n        }\n    }\n};\n/**\n   * Header date click handler\n   * @param {Event} e Click event object\n   * @private\n   * @return {void}\n   */\nMaterialDatePicker.prototype.headerDateClickHandler_ = function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    if (this.widgetElement_ && this.widgetElement_.classList.contains(this.CssClasses_.YEAR_PICKER)) {\n        this.widgetElement_.classList.remove(this.CssClasses_.YEAR_PICKER);\n    }\n};\n/**\n   * Picker year click handler\n   * @private\n   * @param {Event} e Click event object\n   * @return {void}\n   */\nMaterialDatePicker.prototype.pickYearHandler_ = function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    var selectedYear = this.yearPickerElement_.querySelector('.' + this.CssClasses_.YEAR_SELECTED);\n    if (selectedYear && selectedYear.classList.contains(this.CssClasses_.YEAR_SELECTED)) {\n        selectedYear.classList.remove(this.CssClasses_.YEAR_SELECTED);\n    }\n    var currentYear = e.target;\n    currentYear.classList.add(this.CssClasses_.YEAR_SELECTED);\n    var currentYearInt = parseInt(currentYear.getAttribute('data-year'), 10);\n    this.pickedDate_.setFullYear(currentYearInt);\n    var pickedDate = new Date(this.pickedDate_.getTime());\n    if (!this.isInRange_(pickedDate)) {\n        if (this.minDate_ && !this.maxDate_ && pickedDate.getTime() < this.minDate_.getTime()) {\n            pickedDate.setFullYear(this.minDate_.getFullYear());\n            pickedDate.setMonth(this.minDate_.getMonth());\n            pickedDate.setDate(this.minDate_.getDate());\n        } else if (!this.minDate_ && this.maxDate_ && pickedDate.getTime() > this.maxDate_.getTime()) {\n            pickedDate.setFullYear(this.maxDate_.getFullYear());\n            pickedDate.setMonth(this.maxDate_.getMonth());\n            pickedDate.setDate(this.maxDate_.getDate());\n        } else {\n            pickedDate.setFullYear(this.minDate_.getFullYear());\n            pickedDate.setMonth(this.minDate_.getMonth());\n            pickedDate.setDate(this.minDate_.getDate());\n        }\n        this.pickedDate_.setFullYear(pickedDate.getFullYear());\n        this.pickedDate_.setMonth(pickedDate.getMonth());\n        this.pickedDate_.setDate(pickedDate.getDate());\n    }\n    this.currentMonth_.setFullYear(currentYearInt);\n    this.currentMonth_.setMonth(this.pickedDate_.getMonth());\n    this.currentMonth_.setDate(this.pickedDate_.getDate());\n    this.updateHeader_();\n    this.updateMonthTitle_();\n    this.changeCurrentMonth_(this.currentMonth_);\n};\n/**\n   * Select date action click handler\n   * @param {Event} e Click event object\n   * @private\n   * @return {void}\n   */\nMaterialDatePicker.prototype.pickDateHandler_ = function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    var previousDate = this.calendarElement_.querySelector('.' + this.CssClasses_.DATE + '.' + this.CssClasses_.DATE_SELECTED);\n    if (previousDate) {\n        previousDate.classList.remove(this.CssClasses_.DATE_SELECTED);\n    }\n    // Select current date\n    var pickedDate = e.target;\n    var pickedDateInt = pickedDate.getAttribute('data-date');\n    pickedDate.classList.add(this.CssClasses_.DATE_SELECTED);\n    var nextPickedDate = new Date(this.pickedDate_.getTime());\n    nextPickedDate.setFullYear(this.currentMonth_.getFullYear());\n    nextPickedDate.setMonth(this.currentMonth_.getMonth());\n    nextPickedDate.setDate(pickedDateInt);\n    if (this.isInRange_(nextPickedDate)) {\n        this.pickedDate_.setFullYear(this.currentMonth_.getFullYear());\n        this.pickedDate_.setMonth(this.currentMonth_.getMonth());\n        this.pickedDate_.setDate(pickedDateInt);\n        this.updateHeader_();\n        this.updateYearPicker_();\n    }\n};\n/**\n   * Previous date picker month handler\n   * @param {Event} e Click event object\n   * @private\n   * @return {void}\n   */\nMaterialDatePicker.prototype.previousMonthHandler_ = function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    var previousMonth = new Date(this.currentMonth_.getTime());\n    previousMonth.setDate(1);\n    previousMonth.setMonth(this.currentMonth_.getMonth() - 1);\n    this.changeCurrentMonth_(previousMonth);\n};\n/**\n   * Next date picker month handler\n   * @param {Event} e Click event object\n   * @private\n   * @return {void}\n   */\nMaterialDatePicker.prototype.nextMonthHandler_ = function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    var nextMonth = new Date(this.currentMonth_.getTime());\n    nextMonth.setDate(1);\n    nextMonth.setMonth(nextMonth.getMonth() + 1);\n    this.changeCurrentMonth_(nextMonth);\n};\n/**\n   * Format given date for input value\n   * @param  {Date} dateObject Date object to format\n   * @private\n   * @return {string} Formatted date string\n   */\nMaterialDatePicker.prototype.formatInputDate_ = function (dateObject) {\n    var dateFormatted;\n    // If given format is actually function,\n    // execute in global scope with selected date as parameter\n    if (typeof this.locales.format === 'function') {\n        var formatFunction = this.locales.format;\n        var selectedDate = this.selectedDate_;\n        return formatFunction.call(window, selectedDate);\n    }\n    /**\n     * Append leading zero if necessary\n     * @param {number} number Number to append leading zero\n     * @return {string} String containing leading zero if needed\n     */\n    var addLeadingZero = function (number) {\n        return ('0' + number).substr(-2, 2);\n    };\n    switch (this.locales.format) {\n    case 'dd.mm.yyyy':\n        dateFormatted = [\n            addLeadingZero(dateObject.getDate()),\n            addLeadingZero(dateObject.getMonth() + 1),\n            dateObject.getFullYear()\n        ].join('.');\n        break;\n    case 'yyyy-mm-dd':\n        dateFormatted = [\n            dateObject.getFullYear(),\n            addLeadingZero(dateObject.getMonth() + 1),\n            addLeadingZero(dateObject.getDate())\n        ].join('-');\n        break;\n    case 'mm/dd/yyyy':\n        dateFormatted = [\n            addLeadingZero(dateObject.getMonth() + 1),\n            addLeadingZero(dateObject.getDate()),\n            dateObject.getFullYear()\n        ].join('/');\n        break;\n    default:\n        dateFormatted = [\n            addLeadingZero(dateObject.getMonth() + 1),\n            addLeadingZero(dateObject.getDate()),\n            dateObject.getFullYear()\n        ].join('/');\n        break;\n    }\n    return dateFormatted;\n};\n/**\n   * Format given date for header display\n   * @param  {Date} date Current picked date object\n   * @return {string} Formatted date\n   */\nMaterialDatePicker.prototype.formatHeaderDate_ = function (date) {\n    return this.locales.weekDaysShort[date.getDay()] + ', ' + this.locales.monthsShort[date.getMonth()] + ' ' + date.getDate();\n};\n/**\n   * Check if given date is today\n   * @param  {Date} currentDate Date object to check \"is today\" state\n   * @return {boolean} Date \"is today\" status\n   */\nMaterialDatePicker.prototype.isToday_ = function (currentDate) {\n    var today = new Date();\n    if (today.getFullYear() !== currentDate.getFullYear()) {\n        return false;\n    }\n    if (today.getMonth() !== currentDate.getMonth()) {\n        return false;\n    }\n    if (today.getDate() !== currentDate.getDate()) {\n        return false;\n    }\n    return true;\n};\n/**\n   * Check if given date is selected date\n   * @param  {Date} currentDate Date object to check \"is picked\" state\n   * @return {boolean} Date \"is picked\" state\n   */\nMaterialDatePicker.prototype.isPickedDate_ = function (currentDate) {\n    if (!this.pickedDate_) {\n        return false;\n    }\n    if (this.pickedDate_.getFullYear() !== currentDate.getFullYear()) {\n        return false;\n    }\n    if (this.pickedDate_.getMonth() !== currentDate.getMonth()) {\n        return false;\n    }\n    if (this.pickedDate_.getDate() !== currentDate.getDate()) {\n        return false;\n    }\n    return true;\n};\n/**\n   * Check if given date is in range, if range is set.\n   * @private\n   * @param  {Date} dateObject Date to check if it is in defined date range\n   * @return {boolean} Date \"in range\" state\n   */\nMaterialDatePicker.prototype.isInRange_ = function (dateObject) {\n    var isInRange = true;\n    if (this.minDate_ && !this.maxDate_) {\n        if (this.minDate_.getTime() > dateObject.getTime()) {\n            isInRange = false;\n        }\n    } else if (!this.minDate_ && this.maxDate_) {\n        if (this.maxDate_.getTime() < dateObject.getTime()) {\n            isInRange = false;\n        }\n    } else if (this.minDate_ && this.maxDate_) {\n        if (this.minDate_.getTime() <= dateObject.getTime() && dateObject.getTime() <= this.maxDate_.getTime()) {\n        } else {\n            isInRange = false;\n        }\n    }\n    return isInRange;\n};\n/**\n   * Check if given year is in range, if range is set\n   * @param  {number} year Year to check \"in range\" state\n   * @return {boolean} Year \"in range\" state\n   */\nMaterialDatePicker.prototype.isYearInRange_ = function (year) {\n    var isInRange = true;\n    if (this.minDate_ && !this.maxDate_) {\n        if (this.minDate_.getFullYear() > year) {\n            isInRange = false;\n        }\n    } else if (!this.minDate_ && this.maxDate_) {\n        if (this.maxDate_.getFullYear() < year) {\n            isInRange = false;\n        }\n    } else if (this.minDate_ && this.maxDate_) {\n        if (this.minDate_.getFullYear() <= year && year <= this.maxDate_.getFullYear()) {\n        } else {\n            isInRange = false;\n        }\n    }\n    return isInRange;\n};\n/**\n   * Change current month and rerender calendar\n   * @private\n   * @param  {Date} nextMonth Next month object\n   * @return {void}\n   */\nMaterialDatePicker.prototype.changeCurrentMonth_ = function (nextMonth) {\n    if (!nextMonth) {\n        return undefined;\n    }\n    var currentMonthElement = this.renderMonth_(nextMonth);\n    if (this.currentMonthElement_) {\n        this.calendarElement_.insertBefore(currentMonthElement, this.currentMonthElement_);\n    } else {\n        this.calendarElement_.appendChild(currentMonthElement);\n    }\n    var dateButtons = this.currentMonthElement_.querySelectorAll('.' + this.CssClasses_.DATE);\n    for (var i = 0; i < dateButtons.length; i++) {\n        var dateButton = dateButtons[i];\n        dateButton.removeEventListener('click', this.boundPickDateHandler);\n    }\n    if (this.currentMonthElement_.remove) {\n        this.currentMonthElement_.remove();\n    } else {\n        this.currentMonthElement_.parentNode.removeChild(this.currentMonthElement_);\n    }\n    this.currentMonthElement_ = currentMonthElement;\n    this.currentMonth_ = nextMonth;\n    this.updateMonthTitle_();\n};\n/**\n   * Render datepicker dialog\n   *\n   * @private\n   * @return {void}\n   */\nMaterialDatePicker.prototype.render_ = function () {\n    if (!this.widgetElement_) {\n        this.widgetElement_ = document.createElement('div');\n        this.widgetElement_.classList.add(this.CssClasses_.WIDGET);\n        // Append header element\n        this.widgetElement_.appendChild(this.renderHeader_());\n        this.widgetElement_.appendChild(this.renderCalendar_());\n        if (this.element_.classList.contains(this.CssClasses_.FIXED)) {\n            this.widgetElement_.classList.add(this.CssClasses_.IS_FIXED);\n            document.body.appendChild(this.widgetElement_);\n        } else {\n            this.element_.appendChild(this.widgetElement_);\n        }\n    }\n};\n/**\n   * Render date picker header element\n   * @private\n   * @return {Element} Date picker header element\n   */\nMaterialDatePicker.prototype.renderHeader_ = function () {\n    if (!this.headerElement_) {\n        this.headerElement_ = document.createElement('div');\n        this.headerYearElement_ = document.createElement('div');\n        this.headerDateElement_ = document.createElement('div');\n        // Add appropriate classes\n        this.headerElement_.classList.add(this.CssClasses_.HEADER);\n        this.headerYearElement_.classList.add(this.CssClasses_.HEADER_YEAR);\n        this.headerDateElement_.classList.add(this.CssClasses_.HEADER_DATE);\n        // Bind click events\n        this.boundHeaderYearClickHandler = this.headerYearClickHandler_.bind(this);\n        this.boundHeaderDateClickHandler = this.headerDateClickHandler_.bind(this);\n        this.headerYearElement_.addEventListener('click', this.boundHeaderYearClickHandler);\n        this.headerDateElement_.addEventListener('click', this.boundHeaderDateClickHandler);\n        // Assemble header element\n        this.headerElement_.appendChild(this.headerYearElement_);\n        this.headerElement_.appendChild(this.headerDateElement_);\n        // Setup initial header values\n        this.updateHeader_();\n    }\n    return this.headerElement_;\n};\n/**\n   * Update header date and year\n   *\n   * @private\n   * @return {void}\n   */\nMaterialDatePicker.prototype.updateHeader_ = function () {\n    if (this.headerYearElement_) {\n        this.headerYearElement_.innerHTML = this.pickedDate_.getFullYear();\n    }\n    if (this.headerDateElement_) {\n        this.headerDateElement_.innerHTML = this.formatHeaderDate_(this.pickedDate_);\n    }\n};\n/**\n   * Update current month title\n   * @private\n   * @return {void}\n   */\nMaterialDatePicker.prototype.updateMonthTitle_ = function () {\n    this.currentMonthTitleElement_.innerHTML = this.locales.months[this.currentMonth_.getMonth()] + ', ' + this.currentMonth_.getFullYear();\n};\n/**\n   * Update year picker current year\n   * @private\n   * @return {void}\n   */\nMaterialDatePicker.prototype.updateYearPicker_ = function () {\n    var pickedYear = this.yearPickerElement_.querySelector('.' + this.CssClasses_.YEAR_SELECTED);\n    if (pickedYear) {\n        pickedYear.classList.remove(this.CssClasses_.YEAR_SELECTED);\n    }\n    pickedYear = this.yearPickerElement_.querySelector('.' + this.CssClasses_.YEAR + '[data-year=\"' + this.pickedDate_.getFullYear() + '\"]');\n    pickedYear.classList.add(this.CssClasses_.YEAR_SELECTED);\n    var focusYear = pickedYear;\n    for (var i = 0; i < 3; i++) {\n        if (focusYear.previousElementSibling) {\n            focusYear = focusYear.previousElementSibling;\n        }\n    }\n    focusYear.parentNode.scrollTop = focusYear.offsetTop;\n};\n/**\n   * Render entire date picker content\n   * @private\n   * @return {Element} Date picker calendar element\n   */\nMaterialDatePicker.prototype.renderCalendar_ = function () {\n    if (!this.calendarElement_) {\n        this.calendarElement_ = document.createElement('div');\n        this.calendarElement_.classList.add(this.CssClasses_.CALENDAR);\n        this.calendarElement_.appendChild(this.renderNavigation_());\n        this.calendarElement_.appendChild(this.renderWeekDays_());\n        this.currentMonthElement_ = this.renderMonth_(this.currentMonth_);\n        this.calendarElement_.appendChild(this.currentMonthElement_);\n        this.calendarElement_.appendChild(this.renderYearPicker_());\n        this.calendarElement_.appendChild(this.renderActions_());\n    }\n    return this.calendarElement_;\n};\n/**\n   * Render month navigation\n   * @private\n   * @return {Element} Date picker navigation element\n   */\nMaterialDatePicker.prototype.renderNavigation_ = function () {\n    if (!this.navigationElement_) {\n        this.navigationElement_ = document.createElement('div');\n        this.navigationElement_.classList.add(this.CssClasses_.NAVIGATION);\n        var previousMonth = document.createElement('button');\n        previousMonth.setAttribute('type', 'button');\n        previousMonth.classList.add('mdl-button');\n        previousMonth.classList.add('mdl-js-button');\n        previousMonth.classList.add('mdl-button--icon');\n        previousMonth.classList.add(this.CssClasses_.MONTH_PREVIOUS);\n        var previousIcon = document.createElement('i');\n        previousIcon.classList.add('material-icons');\n        previousIcon.innerHTML = 'keyboard_arrow_left';\n        previousMonth.appendChild(previousIcon);\n        var nextMonth = document.createElement('button');\n        nextMonth.setAttribute('type', 'button');\n        nextMonth.classList.add('mdl-button');\n        nextMonth.classList.add('mdl-js-button');\n        nextMonth.classList.add('mdl-button--icon');\n        nextMonth.classList.add(this.CssClasses_.MONTH_NEXT);\n        var nextIcon = document.createElement('i');\n        nextIcon.classList.add('material-icons');\n        nextIcon.innerHTML = 'keyboard_arrow_right';\n        nextMonth.appendChild(nextIcon);\n        // Bind month change event\n        this.boundPreviousMonthHandler = this.previousMonthHandler_.bind(this);\n        this.boundNextMonthHandler = this.nextMonthHandler_.bind(this);\n        previousMonth.addEventListener('click', this.boundPreviousMonthHandler, true);\n        nextMonth.addEventListener('click', this.boundNextMonthHandler, true);\n        this.currentMonthTitleElement_ = document.createElement('div');\n        this.currentMonthTitleElement_.classList.add(this.CssClasses_.MONTH_CURRENT);\n        if (this.currentMonth_) {\n            this.updateMonthTitle_();\n        }\n        this.navigationElement_.appendChild(previousMonth);\n        this.navigationElement_.appendChild(this.currentMonthTitleElement_);\n        this.navigationElement_.appendChild(nextMonth);\n        componentHandler.upgradeElement(previousMonth);\n        componentHandler.upgradeElement(nextMonth);\n    }\n    return this.navigationElement_;\n};\n/**\n   * Render date picker week days heading\n   *\n   * @private\n   * @return {Element} Date picker week days heading element\n   */\nMaterialDatePicker.prototype.renderWeekDays_ = function () {\n    if (!this.weekDaysElement_) {\n        this.weekDaysElement_ = document.createElement('div');\n        this.weekDaysElement_.classList.add(this.CssClasses_.WEEK_DAYS);\n        var weekStart = this.locales.weekStart;\n        for (var i = 0; i <= 6; i++) {\n            var weekDay = document.createElement('button');\n            weekDay.setAttribute('type', 'button');\n            weekDay.classList.add(this.CssClasses_.DATE);\n            weekDay.classList.add(this.CssClasses_.DATE_EMPTY);\n            weekDay.innerHTML = this.locales.weekDaysLetter[weekStart];\n            this.weekDaysElement_.appendChild(weekDay);\n            weekStart += 1;\n            if (weekStart > 6) {\n                weekStart = 0;\n            }\n        }\n    }\n    return this.weekDaysElement_;\n};\n/**\n   * Render date picker weeks\n   * @param {Date} monthObject Date object from which month element will be rendered\n   * @private\n   * @return {Element} Date picker month element\n   */\nMaterialDatePicker.prototype.renderMonth_ = function (monthObject) {\n    var month = document.createElement('div');\n    month.classList.add(this.CssClasses_.MONTH);\n    var firstDay = new Date(monthObject.getTime());\n    var lastDay = new Date(monthObject.getTime());\n    var currentDay = new Date(firstDay.getTime());\n    var currentDayInt = 1;\n    // Set first day of the month\n    firstDay.setDate(1);\n    // Set last day of the month\n    lastDay.setDate(1);\n    lastDay.setMonth(lastDay.getMonth() + 1);\n    lastDay.setDate(lastDay.getDate() - 1);\n    var renderDays = true;\n    var weekStart = this.locales.weekStart;\n    while (renderDays) {\n        var week = document.createElement('div');\n        week.classList.add(this.CssClasses_.WEEK);\n        for (var i = 0; i <= 6; i++) {\n            currentDay.setDate(currentDayInt);\n            if (currentDayInt > lastDay.getDate()) {\n                renderDays = false;\n                break;\n            }\n            var weekDay = document.createElement('button');\n            weekDay.classList.add(this.CssClasses_.DATE);\n            if (currentDay.getDay() === weekStart && currentDay.getDate() <= lastDay.getDate()) {\n                weekDay.innerHTML = currentDayInt;\n                weekDay.setAttribute('data-date', currentDayInt);\n                weekDay.setAttribute('type', 'button');\n                currentDayInt++;\n                if (!this.isInRange_(currentDay)) {\n                    weekDay.classList.add(this.CssClasses_.DATE_DISABLED);\n                }\n                // Bind select date event\n                if (!weekDay.classList.contains(this.CssClasses_.DATE_DISABLED)) {\n                    if (this.isToday_(currentDay)) {\n                        weekDay.classList.add(this.CssClasses_.DATE_TODAY);\n                    }\n                    // Check if current day is selected\n                    if (this.isPickedDate_(currentDay)) {\n                        weekDay.classList.add(this.CssClasses_.DATE_SELECTED);\n                    }\n                    this.boundPickDateHandler = this.pickDateHandler_.bind(this);\n                    weekDay.addEventListener('click', this.boundPickDateHandler, true);\n                }\n            } else {\n                // Render empty date\n                weekDay.classList.add(this.CssClasses_.DATE_EMPTY);\n            }\n            weekStart += 1;\n            if (weekStart > 6) {\n                weekStart = 0;\n            }\n            week.appendChild(weekDay);\n        }\n        month.appendChild(week);\n    }\n    return month;\n};\n/**\n   * Render year picker\n   * @private\n   * @return {Element} Date picker \"year picker\" element\n   */\nMaterialDatePicker.prototype.renderYearPicker_ = function () {\n    var year;\n    var yearButton;\n    if (this.yearPickerElement_) {\n        // Year picker already rendered, just need to update state\n        var yearButtons = this.yearPickerElement_.querySelectorAll('.' + this.CssClasses_.YEAR);\n        for (var i = 0; i < yearButtons.length; i++) {\n            yearButton = null;\n            yearButton = yearButtons[i];\n            var existingYear = parseInt(yearButton.getAttribute('data-year'), 10);\n            if (this.isYearInRange_(existingYear)) {\n                if (yearButton.classList.contains(this.CssClasses_.YEAR_DISABLED)) {\n                    yearButton.classList.remove(this.CssClasses_.YEAR_DISABLED);\n                }\n                // First try remove, then add event listener again to avoid duplication\n                yearButton.removeEventListener('click', this.boundPickYearHandler);\n                yearButton.addEventListener('click', this.boundPickYearHandler);\n            } else {\n                yearButton.removeEventListener('click', this.boundPickYearHandler);\n                yearButton.classList.add(this.CssClasses_.YEAR_DISABLED);\n            }\n        }\n    } else {\n        this.yearPickerElement_ = document.createElement('div');\n        this.yearPickerElement_.classList.add(this.CssClasses_.YEAR_PICKER_ELEMENT);\n        var today = new Date();\n        var startYear = today.getFullYear() - 100;\n        var endYear = today.getFullYear() + 100;\n        this.boundPickYearHandler = this.pickYearHandler_.bind(this);\n        for (year = startYear; year <= endYear; year++) {\n            yearButton = document.createElement('button');\n            yearButton.classList.add(this.CssClasses_.YEAR);\n            yearButton.setAttribute('data-year', year);\n            yearButton.setAttribute('type', 'button');\n            yearButton.innerHTML = year;\n            if (this.isYearInRange_(year)) {\n                yearButton.addEventListener('click', this.boundPickYearHandler);\n                if (this.pickedDate_) {\n                    if (this.pickedDate_.getFullYear() === year) {\n                        yearButton.classList.add(this.CssClasses_.YEAR_SELECTED);\n                    }\n                }\n            } else {\n                yearButton.classList.add(this.CssClasses_.YEAR_DISABLED);\n            }\n            this.yearPickerElement_.appendChild(yearButton);\n        }\n    }\n    return this.yearPickerElement_;\n};\n/**\n   * Render date picker actions\n   * @private\n   * @return {Element} Date picker actions element\n   */\nMaterialDatePicker.prototype.renderActions_ = function () {\n    if (!this.actionsElement_) {\n        this.actionsElement_ = document.createElement('div');\n        this.actionsElement_.classList.add(this.CssClasses_.ACTIONS);\n        // Cancel button\n        this.cancelElement_ = document.createElement('button');\n        this.cancelElement_.classList.add('mdl-button');\n        this.cancelElement_.classList.add('mdl-js-button');\n        this.cancelElement_.classList.add('mdl-button--accent');\n        this.cancelElement_.classList.add(this.CssClasses_.ACTION_CANCEL);\n        this.cancelElement_.setAttribute('type', 'button');\n        this.cancelElement_.innerHTML = this.locales.actions.cancel || 'Cancel';\n        // OK button\n        this.okElement_ = document.createElement('button');\n        this.okElement_.classList.add('mdl-button');\n        this.okElement_.classList.add('mdl-js-button');\n        this.okElement_.classList.add('mdl-button--accent');\n        this.okElement_.classList.add(this.CssClasses_.ACTION_OK);\n        this.okElement_.setAttribute('type', 'button');\n        this.okElement_.innerHTML = this.locales.actions.ok || 'OK';\n        // Bind events\n        this.boundCancelActionHandler = this.cancelHandler_.bind(this);\n        this.boundOkActionHandler = this.okHandler_.bind(this);\n        this.cancelElement_.addEventListener('click', this.boundCancelActionHandler, true);\n        this.okElement_.addEventListener('click', this.boundOkActionHandler, true);\n        this.actionsElement_.appendChild(this.cancelElement_);\n        this.actionsElement_.appendChild(this.okElement_);\n        componentHandler.upgradeElement(this.cancelElement_);\n        componentHandler.upgradeElement(this.okElement_);\n    }\n    return this.actionsElement_;\n};\n/**\n   * Destroy all properties and widget elements\n   * @private\n   * @return {void}\n   */\nMaterialDatePicker.prototype.destroy_ = function () {\n    var i = 0;\n    if (this.yearPickerElement_) {\n        var yearButtons = this.yearPickerElement_.querySelectorAll('.' + this.CssClasses_.YEAR);\n        for (i = 0; i < yearButtons.length; i++) {\n            var yearButton = yearButtons[i];\n            yearButton.removeEventListener('click', this.boundPickYearHandler);\n        }\n    }\n    if (this.currentMonthElement_) {\n        var dateButtons = this.currentMonthElement_.querySelectorAll('.' + this.CssClasses_.DATE);\n        for (i = 0; i < dateButtons.length; i++) {\n            var dateButton = dateButtons[i];\n            dateButton.removeEventListener('click', this.boundPickDateHandler);\n        }\n    }\n    if (this.cancelElement_) {\n        componentHandler.downgradeElements(this.cancelElement_);\n        this.cancelElement_.removeEventListener('click', this.boundCancelActionHandler);\n    }\n    if (this.okElement_) {\n        componentHandler.downgradeElements(this.okElement_);\n        this.okElement_.removeEventListener('click', this.boundOkActionHandler);\n    }\n    if (this.actionsElement_) {\n        this.actionsElement_ = null;\n    }\n    if (this.navigationElement_) {\n        var previousMonth = this.navigationElement_.querySelector('.' + this.CssClasses_.MONTH_PREVIOUS);\n        var nextMonth = this.navigationElement_.querySelector('.' + this.CssClasses_.MONTH_NEXT);\n        if (previousMonth) {\n            previousMonth.removeEventListener('click', this.boundPreviousMonthHandler);\n        }\n        if (nextMonth) {\n            nextMonth.removeEventListener('click', this.boundNextMonthHandler);\n        }\n        this.navigationElement_ = null;\n    }\n    if (this.headerDateElement_) {\n        this.headerDateElement_.removeEventListener('click', this.boundHeaderDateClickHandler);\n        this.headerDateElement_ = null;\n    }\n    if (this.headerYearElement_) {\n        this.headerYearElement_.removeEventListener('click', this.boundHeaderYearClickHandler);\n        this.headerYearElement_ = null;\n    }\n    if (this.headerElement_) {\n        this.headerElement_ = null;\n    }\n    if (this.weekDaysElement_) {\n        this.weekDaysElement_ = null;\n    }\n    if (this.calendarElement_) {\n        this.calendarElement_ = null;\n    }\n    if (this.widgetElement_) {\n        if (this.widgetElement_.remove) {\n            this.widgetElement_.remove();\n        } else {\n            this.widgetElement_.parentNode.removeChild(this.widgetElement_);\n        }\n        this.widgetElement_ = null;\n    }\n};\n/**\n   * Open date picker dialog\n   * @public\n   * @return {void}\n   */\nMaterialDatePicker.prototype.open = function () {\n    // Date picker widget already opened\n    if (this.widgetElement_ && this.widgetElement_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n        return;\n    }\n    if (!this.widgetElement_) {\n        this.render_();\n    }\n    if (!this.element_.classList.contains(this.CssClasses_.IS_FOCUSED)) {\n        this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n    }\n    // Slightly delay picker show to enable animation\n    setTimeout(function () {\n        if (this.backdrop_) {\n            this.backdrop_.style.display = 'block';\n        }\n        this.widgetElement_.classList.add(this.CssClasses_.IS_VISIBLE);\n        this.element_.classList.add(this.CssClasses_.IS_VISIBLE);\n        this.triggerEvent_('open');\n    }.bind(this), 0);\n};\nMaterialDatePicker.prototype['open'] = MaterialDatePicker.prototype.open;\n/**\n   * Close date picker dialog\n   *\n   * @public\n   * @return {void}\n   */\nMaterialDatePicker.prototype.close = function () {\n    // Inline styles can't be closed.\n    // @TODO: This should be reviewed with Google guys\n    if (this.element_.classList.contains(this.CssClasses_.INLINE)) {\n        return;\n    }\n    // Date picker widget already closed\n    if (!this.widgetElement_ || !this.widgetElement_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n        return;\n    }\n    if (this.element_.classList.contains(this.CssClasses_.IS_FOCUSED)) {\n        this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n    }\n    if (this.widgetElement_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n        if (this.backdrop_) {\n            this.backdrop_.style.display = 'none';\n        }\n        this.widgetElement_.classList.remove(this.CssClasses_.IS_VISIBLE);\n        this.element_.classList.remove(this.CssClasses_.IS_VISIBLE);\n        this.triggerEvent_('close');\n        setTimeout(function () {\n            // Destroy all properties and widget elements after close\n            this.destroy_();\n        }.bind(this), 200);\n    }\n};\nMaterialDatePicker.prototype['close'] = MaterialDatePicker.prototype.close;\n/**\n   * Get selected date to datepicker\n   * @public\n   * @return {Date} Current selected date\n   */\nMaterialDatePicker.prototype.getSelectedDate = function () {\n    return this.selectedDate_;\n};\nMaterialDatePicker.prototype['getSelectedDate'] = MaterialDatePicker.prototype.getSelectedDate;\n/**\n   * Set selected date to datepicker\n   *\n   * @param  {Date} selectedDate Date object to be set as selected in picker\n   * @public\n   * @return {Date} Current selected date\n   */\nMaterialDatePicker.prototype.setSelectedDate = function (selectedDate) {\n    if (selectedDate && this.isInRange_(selectedDate)) {\n        this.pickedDate_ = selectedDate;\n        this.currentMonth_ = selectedDate;\n        this.selectedDate_ = selectedDate;\n        this.render_();\n        if (this.input_) {\n            this.input_.value = this.formatInputDate_(this.selectedDate_);\n            if (this.element_.MaterialTextfield) {\n                this.element_.MaterialTextfield.checkValidity();\n            }\n        }\n        this.element_.classList.add(this.CssClasses_.IS_DIRTY);\n    }\n    return this.getSelectedDate();\n};\nMaterialDatePicker.prototype['setSelectedDate'] = MaterialDatePicker.prototype.setSelectedDate;\n/**\n   * Set allowed date picker range. Dates outside of the range can't be selected.\n   * @param {Date} minDate Minimum date\n   * @param {Date} maxDate Maximum date\n   */\nMaterialDatePicker.prototype.setRange = function (minDate, maxDate) {\n    if (minDate && minDate instanceof Date) {\n        // Set minimum lowest possible value of the date\n        minDate.setHours(0);\n        minDate.setMinutes(0);\n        minDate.setSeconds(0);\n        minDate.setMilliseconds(0);\n    }\n    this.minDate_ = minDate || null;\n    if (maxDate && maxDate instanceof Date) {\n        // Set maximum highest possible value of the date\n        maxDate.setHours(23);\n        maxDate.setMinutes(59);\n        maxDate.setSeconds(59);\n        maxDate.setMilliseconds(999);\n    }\n    this.maxDate_ = maxDate || null;\n    // Means that widget exists and is opened\n    if (this.widgetElement_) {\n        this.changeCurrentMonth_(this.currentMonth_);\n        this.renderYearPicker_();\n    }\n};\nMaterialDatePicker.prototype['setRange'] = MaterialDatePicker.prototype.setRange;\n/**\n   * Initialize element.\n   */\nMaterialDatePicker.prototype.init = function () {\n    if (this.element_) {\n        // Load default configuration\n        this.locales = Object.create(MaterialDatePicker.locales);\n        this.input_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n        if (this.input_) {\n            if (!this.element_.getAttribute('upgraded')) {\n                componentHandler.upgradeElement(this.element_, 'MaterialTextfield');\n            }\n            // Bind input events\n            this.boundInputFocusHandler = this.inputFocusHandler_.bind(this);\n            this.boundInputBlurHandler = this.inputBlurHandler_.bind(this);\n            this.input_.addEventListener('focus', this.boundInputFocusHandler, true);\n            this.input_.addEventListener('focusout', this.boundInputBlurHandler, true);\n        }\n        // Setup properties default values.\n        this.pickedDate_ = new Date();\n        this.currentMonth_ = new Date();\n        this.selectedDate_ = null;\n        if (this.element_.classList.contains(this.CssClasses_.FIXED)) {\n            this.backdrop_ = document.createElement('div');\n            this.backdrop_.classList.add(this.CssClasses_.BACKDROP);\n            this.backdrop_.style.display = 'none';\n            this.backdrop_.setAttribute('tabindex', -1);\n            document.body.appendChild(this.backdrop_);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n            // Hide datepicker until it is fully rendered\n            this.element_.classList.remove(this.CssClasses_.IS_VISIBLE);\n            // Once rendered, show datepicker\n            this.open();\n        }\n        // Set private isInitialized_ property for internal tracking\n        this.isInitialized_ = true;\n        // Add \"is-updated\" class\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n/**\n   * Downgrade datepicker component\n   * @return {void}\n   */\nMaterialDatePicker.prototype.mdlDowngrade_ = function () {\n    if (this.input_) {\n        this.input_.removeEventListener('focus', this.boundInputFocusHandler, true);\n        this.input_.removeEventListener('focusout', this.boundInputBlurHandler, true);\n    }\n    this.destroy_();\n    if (this.backdrop_) {\n        if (this.backdrop_.remove) {\n            this.backdrop_.remove();\n        } else {\n            this.backdrop_.parentNode.removeChild(this.backdrop_);\n        }\n    }\n    // Trigger \"destroy\" event for all those who are listening\n    // for other component events\n    this.triggerEvent_('destroy');\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialDatePicker,\n    classAsString: 'MaterialDatePicker',\n    cssClass: 'mdl-js-datepicker',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Ripple MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialRipple = function MaterialRipple(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialRipple'] = MaterialRipple;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialRipple.prototype.Constant_ = {\n    INITIAL_SCALE: 'scale(0.0001, 0.0001)',\n    INITIAL_SIZE: '1px',\n    INITIAL_OPACITY: '0.4',\n    FINAL_OPACITY: '0',\n    FINAL_SCALE: ''\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialRipple.prototype.CssClasses_ = {\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE: 'mdl-ripple',\n    IS_ANIMATING: 'is-animating',\n    IS_VISIBLE: 'is-visible'\n};\n/**\n   * Handle mouse / finger down on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRipple.prototype.downHandler_ = function (event) {\n    if (!this.rippleElement_.style.width && !this.rippleElement_.style.height) {\n        var rect = this.element_.getBoundingClientRect();\n        this.boundHeight = rect.height;\n        this.boundWidth = rect.width;\n        this.rippleSize_ = Math.sqrt(rect.width * rect.width + rect.height * rect.height) * 2 + 2;\n        this.rippleElement_.style.width = this.rippleSize_ + 'px';\n        this.rippleElement_.style.height = this.rippleSize_ + 'px';\n    }\n    this.rippleElement_.classList.add(this.CssClasses_.IS_VISIBLE);\n    if (event.type === 'mousedown' && this.ignoringMouseDown_) {\n        this.ignoringMouseDown_ = false;\n    } else {\n        if (event.type === 'touchstart') {\n            this.ignoringMouseDown_ = true;\n        }\n        var frameCount = this.getFrameCount();\n        if (frameCount > 0) {\n            return;\n        }\n        this.setFrameCount(1);\n        var bound = event.currentTarget.getBoundingClientRect();\n        var x;\n        var y;\n        // Check if we are handling a keyboard click.\n        if (event.clientX === 0 && event.clientY === 0) {\n            x = Math.round(bound.width / 2);\n            y = Math.round(bound.height / 2);\n        } else {\n            var clientX = event.clientX ? event.clientX : event.touches[0].clientX;\n            var clientY = event.clientY ? event.clientY : event.touches[0].clientY;\n            x = Math.round(clientX - bound.left);\n            y = Math.round(clientY - bound.top);\n        }\n        this.setRippleXY(x, y);\n        this.setRippleStyles(true);\n        requestAnimationFrame(this.animFrameHandler.bind(this));\n    }\n};\n/**\n   * Handle mouse / finger up on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRipple.prototype.upHandler_ = function (event) {\n    // Don't fire for the artificial \"mouseup\" generated by a double-click.\n    if (event && event.detail !== 2) {\n        // Allow a repaint to occur before removing this class, so the animation\n        // shows for tap events, which seem to trigger a mouseup too soon after\n        // mousedown.\n        window.setTimeout(function () {\n            this.rippleElement_.classList.remove(this.CssClasses_.IS_VISIBLE);\n        }.bind(this), 0);\n    }\n};\n/**\n   * Initialize element.\n   */\nMaterialRipple.prototype.init = function () {\n    if (this.element_) {\n        var recentering = this.element_.classList.contains(this.CssClasses_.RIPPLE_CENTER);\n        if (!this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT_IGNORE_EVENTS)) {\n            this.rippleElement_ = this.element_.querySelector('.' + this.CssClasses_.RIPPLE);\n            this.frameCount_ = 0;\n            this.rippleSize_ = 0;\n            this.x_ = 0;\n            this.y_ = 0;\n            // Touch start produces a compat mouse down event, which would cause a\n            // second ripples. To avoid that, we use this property to ignore the first\n            // mouse down after a touch start.\n            this.ignoringMouseDown_ = false;\n            this.boundDownHandler = this.downHandler_.bind(this);\n            this.element_.addEventListener('mousedown', this.boundDownHandler);\n            this.element_.addEventListener('touchstart', this.boundDownHandler);\n            this.boundUpHandler = this.upHandler_.bind(this);\n            this.element_.addEventListener('mouseup', this.boundUpHandler);\n            this.element_.addEventListener('mouseleave', this.boundUpHandler);\n            this.element_.addEventListener('touchend', this.boundUpHandler);\n            this.element_.addEventListener('blur', this.boundUpHandler);\n            /**\n         * Getter for frameCount_.\n         * @return {number} the frame count.\n         */\n            this.getFrameCount = function () {\n                return this.frameCount_;\n            };\n            /**\n         * Setter for frameCount_.\n         * @param {number} fC the frame count.\n         */\n            this.setFrameCount = function (fC) {\n                this.frameCount_ = fC;\n            };\n            /**\n         * Getter for rippleElement_.\n         * @return {Element} the ripple element.\n         */\n            this.getRippleElement = function () {\n                return this.rippleElement_;\n            };\n            /**\n         * Sets the ripple X and Y coordinates.\n         * @param  {number} newX the new X coordinate\n         * @param  {number} newY the new Y coordinate\n         */\n            this.setRippleXY = function (newX, newY) {\n                this.x_ = newX;\n                this.y_ = newY;\n            };\n            /**\n         * Sets the ripple styles.\n         * @param  {boolean} start whether or not this is the start frame.\n         */\n            this.setRippleStyles = function (start) {\n                if (this.rippleElement_ !== null) {\n                    var transformString;\n                    var scale;\n                    var offset = 'translate(' + this.x_ + 'px, ' + this.y_ + 'px)';\n                    if (start) {\n                        scale = this.Constant_.INITIAL_SCALE;\n                    } else {\n                        scale = this.Constant_.FINAL_SCALE;\n                        if (recentering) {\n                            offset = 'translate(' + this.boundWidth / 2 + 'px, ' + this.boundHeight / 2 + 'px)';\n                        }\n                    }\n                    transformString = 'translate(-50%, -50%) ' + offset + scale;\n                    this.rippleElement_.style.webkitTransform = transformString;\n                    this.rippleElement_.style.msTransform = transformString;\n                    this.rippleElement_.style.transform = transformString;\n                    if (start) {\n                        this.rippleElement_.classList.remove(this.CssClasses_.IS_ANIMATING);\n                    } else {\n                        this.rippleElement_.classList.add(this.CssClasses_.IS_ANIMATING);\n                    }\n                }\n            };\n            /**\n         * Handles an animation frame.\n         */\n            this.animFrameHandler = function () {\n                if (this.frameCount_-- > 0) {\n                    requestAnimationFrame(this.animFrameHandler.bind(this));\n                } else {\n                    this.setRippleStyles(false);\n                }\n            };\n        }\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialRipple,\n    classAsString: 'MaterialRipple',\n    cssClass: 'mdl-js-ripple-effect',\n    widget: false\n});"],"sourceRoot":"/source/"}